{"ast":null,"code":"import { axiosInstance } from \"../api/axiosConfig\";\nimport produce from \"immer\";\nimport { ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST, DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST, ADD_DAUGHTER_MEMBER_LIST, DELETE_DAUGHTER_MEMBER_LIST } from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport { getDate } from \"date-fns\";\nexport const addUpdateMemberDataToDaughterMemberList = (parentIndex, memberIndex, dataObj) => {\n  console.log(\"parentIndex, memberIndex, dataObj\", parentIndex, memberIndex, dataObj);\n  let data = {\n    firstName: dataObj.firstName,\n    middleName: dataObj.middleName,\n    lastName: dataObj.lastName,\n    relation: dataObj.relation,\n    bloodGroup: dataObj.bloodGroup,\n    dateOfBirth: dataObj.dateOfBirth,\n    studies: dataObj.studies,\n    mobileNo: dataObj.mobileNo,\n    gender: dataObj.gender,\n    eventMember: dataObj.eventMember,\n    maritalStatus: dataObj.maritalStatus,\n    aadhaarNo: dataObj.aadhaarNo,\n    anniversaryDate: dataObj.maritalStatus.toLowerCase() === \"married\" ? dataObj.anniversaryDate : \"\"\n  };\n  return (dispatch, getState) => {\n    let stateData = getState();\n\n    if (memberIndex) {\n      const nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex].memberList[memberIndex] = data;\n      });\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n        payload: {\n          data: nextState.daughter.daughterlist\n        }\n      });\n    } else {\n      const nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex].memberList.push(data);\n      });\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n        payload: {\n          data: nextState.daughter.daughterlist\n        }\n      });\n    }\n  };\n};\nexport const deleteMemberDataToDaughterMemberList = (parentIndex, memberIndex) => {\n  return (dispatch, getState) => {\n    let stateData = getState();\n    const nextState = produce(stateData, draftState => {\n      draftState.daughter.daughterlist[parentIndex].memberList.splice(memberIndex, 1);\n    });\n    dispatch({\n      type: DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST,\n      payload: {\n        data: nextState.daughter.daughterlist\n      }\n    });\n  };\n};\nexport const addUpdateDaughterMemberList = (parentIndex, dataObj) => {\n  console.log(\"action\", parentIndex, dataObj);\n  return (dispatch, getState) => {\n    var data = {\n      basicDetail: {\n        familyId: dataObj.familyId,\n        firstName: dataObj.firstName,\n        middleName: dataObj.middleName,\n        lastName: dataObj.lastName,\n        email: dataObj.email,\n        mobile: dataObj.mobile,\n        residencePhone: dataObj.residencePhone,\n        officePhone: dataObj.officePhone,\n        nativePlaceId: dataObj.nativePlaceId,\n        occupationId: dataObj.occupationId,\n        dob: dataObj.dob,\n        marriageDate: dataObj.marriageDate,\n        motherName: dataObj.motherName,\n        motherNativePlaceId: dataObj.motherNativePlaceId,\n        eventHead: dataObj.eventHead,\n        aadhaarNo: dataObj.aadhaarNo,\n        otherOccupation: dataObj.otherOccupation\n      },\n      residenceDetail: {\n        r_Address1: dataObj.r_Address1,\n        r_Address2: dataObj.r_Address2,\n        r_Address3: dataObj.r_Address3,\n        r_CountryId: dataObj.r_CountryId,\n        r_CityId: dataObj.r_CityId,\n        r_StateId: dataObj.r_StateId,\n        r_ZipCode: dataObj.r_ZipCode\n      },\n      officeDetail: {\n        o_Address1: dataObj.o_Address1,\n        o_Address2: dataObj.o_Address2,\n        o_Address3: dataObj.o_Address3,\n        o_CountryId: dataObj.o_CountryId,\n        o_CityId: dataObj.o_CityId,\n        o_StateId: dataObj.o_StateId,\n        o_ZipCode: dataObj.o_ZipCode\n      },\n      memberList: []\n    };\n    var stateData = getState();\n    data.memberList = stateData.daughter.daughterlist[parentIndex].memberList;\n    let nextState = stateData.daughter.daughterlist;\n\n    if (parentIndex) {\n      nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex] = data;\n      });\n    } else {\n      nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist.push(data);\n      });\n    }\n\n    dispatch({\n      type: ADD_DAUGHTER_MEMBER_LIST,\n      payload: {\n        data: nextState.daughter.daughterlist\n      }\n    });\n  };\n};\nexport const deleteDaughterMemberList = parentIndex => {\n  return (dispatch, getState) => {\n    let stateData = getState();\n    const nextState = produce(stateData, draftState => {\n      draftState.daughter.daughterlist.splice(parentIndex, 1);\n    });\n    dispatch({\n      type: DELETE_DAUGHTER_MEMBER_LIST,\n      payload: {\n        data: nextState.daughter.daughterlist\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/action/daughterAction.js"],"names":["axiosInstance","produce","ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST","DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST","ADD_DAUGHTER_MEMBER_LIST","DELETE_DAUGHTER_MEMBER_LIST","jsonParseMethod","getDate","addUpdateMemberDataToDaughterMemberList","parentIndex","memberIndex","dataObj","console","log","data","firstName","middleName","lastName","relation","bloodGroup","dateOfBirth","studies","mobileNo","gender","eventMember","maritalStatus","aadhaarNo","anniversaryDate","toLowerCase","dispatch","getState","stateData","nextState","draftState","daughter","daughterlist","memberList","type","payload","push","deleteMemberDataToDaughterMemberList","splice","addUpdateDaughterMemberList","basicDetail","familyId","email","mobile","residencePhone","officePhone","nativePlaceId","occupationId","dob","marriageDate","motherName","motherNativePlaceId","eventHead","otherOccupation","residenceDetail","r_Address1","r_Address2","r_Address3","r_CountryId","r_CityId","r_StateId","r_ZipCode","officeDetail","o_Address1","o_Address2","o_Address3","o_CountryId","o_CityId","o_StateId","o_ZipCode","deleteDaughterMemberList"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,SACEC,uCADF,EAEEC,4CAFF,EAGEC,wBAHF,EAIEC,2BAJF,QAKO,eALP;AAMA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAO,MAAMC,uCAAuC,GAAG,CACrDC,WADqD,EAErDC,WAFqD,EAGrDC,OAHqD,KAIlD;AACHC,EAAAA,OAAO,CAACC,GAAR,CACE,mCADF,EAEEJ,WAFF,EAGEC,WAHF,EAIEC,OAJF;AAMA,MAAIG,IAAI,GAAG;AACTC,IAAAA,SAAS,EAAEJ,OAAO,CAACI,SADV;AAETC,IAAAA,UAAU,EAAEL,OAAO,CAACK,UAFX;AAGTC,IAAAA,QAAQ,EAAEN,OAAO,CAACM,QAHT;AAITC,IAAAA,QAAQ,EAAEP,OAAO,CAACO,QAJT;AAKTC,IAAAA,UAAU,EAAER,OAAO,CAACQ,UALX;AAMTC,IAAAA,WAAW,EAAET,OAAO,CAACS,WANZ;AAOTC,IAAAA,OAAO,EAAEV,OAAO,CAACU,OAPR;AAQTC,IAAAA,QAAQ,EAAEX,OAAO,CAACW,QART;AASTC,IAAAA,MAAM,EAAEZ,OAAO,CAACY,MATP;AAUTC,IAAAA,WAAW,EAAEb,OAAO,CAACa,WAVZ;AAWTC,IAAAA,aAAa,EAAEd,OAAO,CAACc,aAXd;AAYTC,IAAAA,SAAS,EAAEf,OAAO,CAACe,SAZV;AAaTC,IAAAA,eAAe,EACbhB,OAAO,CAACc,aAAR,CAAsBG,WAAtB,OAAwC,SAAxC,GACIjB,OAAO,CAACgB,eADZ,GAEI;AAhBG,GAAX;AAmBA,SAAO,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,SAAS,GAAGD,QAAQ,EAAxB;;AACA,QAAIpB,WAAJ,EAAiB;AACf,YAAMsB,SAAS,GAAG/B,OAAO,CAAC8B,SAAD,EAAYE,UAAU,IAAI;AACjDA,QAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiC1B,WAAjC,EAA8C2B,UAA9C,CACE1B,WADF,IAEII,IAFJ;AAGD,OAJwB,CAAzB;AAKAe,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEnC,uCADC;AAEPoC,QAAAA,OAAO,EAAE;AAAExB,UAAAA,IAAI,EAAEkB,SAAS,CAACE,QAAV,CAAmBC;AAA3B;AAFF,OAAD,CAAR;AAID,KAVD,MAUO;AACL,YAAMH,SAAS,GAAG/B,OAAO,CAAC8B,SAAD,EAAYE,UAAU,IAAI;AACjDA,QAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiC1B,WAAjC,EAA8C2B,UAA9C,CAAyDG,IAAzD,CAA8DzB,IAA9D;AACD,OAFwB,CAAzB;AAGAe,MAAAA,QAAQ,CAAC;AACPQ,QAAAA,IAAI,EAAEnC,uCADC;AAEPoC,QAAAA,OAAO,EAAE;AAAExB,UAAAA,IAAI,EAAEkB,SAAS,CAACE,QAAV,CAAmBC;AAA3B;AAFF,OAAD,CAAR;AAID;AACF,GArBD;AAsBD,CApDM;AAsDP,OAAO,MAAMK,oCAAoC,GAAG,CAClD/B,WADkD,EAElDC,WAFkD,KAG/C;AACH,SAAO,CAACmB,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,SAAS,GAAGD,QAAQ,EAAxB;AACA,UAAME,SAAS,GAAG/B,OAAO,CAAC8B,SAAD,EAAYE,UAAU,IAAI;AACjDA,MAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiC1B,WAAjC,EAA8C2B,UAA9C,CAAyDK,MAAzD,CACE/B,WADF,EAEE,CAFF;AAID,KALwB,CAAzB;AAMAmB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAElC,4CADC;AAEPmC,MAAAA,OAAO,EAAE;AAAExB,QAAAA,IAAI,EAAEkB,SAAS,CAACE,QAAV,CAAmBC;AAA3B;AAFF,KAAD,CAAR;AAID,GAZD;AAaD,CAjBM;AAmBP,OAAO,MAAMO,2BAA2B,GAAG,CAACjC,WAAD,EAAcE,OAAd,KAA0B;AACnEC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,WAAtB,EAAmCE,OAAnC;AACA,SAAO,CAACkB,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIhB,IAAI,GAAG;AACT6B,MAAAA,WAAW,EAAE;AACXC,QAAAA,QAAQ,EAAEjC,OAAO,CAACiC,QADP;AAEX7B,QAAAA,SAAS,EAAEJ,OAAO,CAACI,SAFR;AAGXC,QAAAA,UAAU,EAAEL,OAAO,CAACK,UAHT;AAIXC,QAAAA,QAAQ,EAAEN,OAAO,CAACM,QAJP;AAKX4B,QAAAA,KAAK,EAAElC,OAAO,CAACkC,KALJ;AAMXC,QAAAA,MAAM,EAAEnC,OAAO,CAACmC,MANL;AAOXC,QAAAA,cAAc,EAAEpC,OAAO,CAACoC,cAPb;AAQXC,QAAAA,WAAW,EAAErC,OAAO,CAACqC,WARV;AASXC,QAAAA,aAAa,EAAEtC,OAAO,CAACsC,aATZ;AAUXC,QAAAA,YAAY,EAAEvC,OAAO,CAACuC,YAVX;AAWXC,QAAAA,GAAG,EAAExC,OAAO,CAACwC,GAXF;AAYXC,QAAAA,YAAY,EAAEzC,OAAO,CAACyC,YAZX;AAaXC,QAAAA,UAAU,EAAE1C,OAAO,CAAC0C,UAbT;AAcXC,QAAAA,mBAAmB,EAAE3C,OAAO,CAAC2C,mBAdlB;AAeXC,QAAAA,SAAS,EAAE5C,OAAO,CAAC4C,SAfR;AAgBX7B,QAAAA,SAAS,EAAEf,OAAO,CAACe,SAhBR;AAiBX8B,QAAAA,eAAe,EAAE7C,OAAO,CAAC6C;AAjBd,OADJ;AAoBTC,MAAAA,eAAe,EAAE;AACfC,QAAAA,UAAU,EAAE/C,OAAO,CAAC+C,UADL;AAEfC,QAAAA,UAAU,EAAEhD,OAAO,CAACgD,UAFL;AAGfC,QAAAA,UAAU,EAAEjD,OAAO,CAACiD,UAHL;AAIfC,QAAAA,WAAW,EAAElD,OAAO,CAACkD,WAJN;AAKfC,QAAAA,QAAQ,EAAEnD,OAAO,CAACmD,QALH;AAMfC,QAAAA,SAAS,EAAEpD,OAAO,CAACoD,SANJ;AAOfC,QAAAA,SAAS,EAAErD,OAAO,CAACqD;AAPJ,OApBR;AA6BTC,MAAAA,YAAY,EAAE;AACZC,QAAAA,UAAU,EAAEvD,OAAO,CAACuD,UADR;AAEZC,QAAAA,UAAU,EAAExD,OAAO,CAACwD,UAFR;AAGZC,QAAAA,UAAU,EAAEzD,OAAO,CAACyD,UAHR;AAIZC,QAAAA,WAAW,EAAE1D,OAAO,CAAC0D,WAJT;AAKZC,QAAAA,QAAQ,EAAE3D,OAAO,CAAC2D,QALN;AAMZC,QAAAA,SAAS,EAAE5D,OAAO,CAAC4D,SANP;AAOZC,QAAAA,SAAS,EAAE7D,OAAO,CAAC6D;AAPP,OA7BL;AAsCTpC,MAAAA,UAAU,EAAE;AAtCH,KAAX;AAwCA,QAAIL,SAAS,GAAGD,QAAQ,EAAxB;AACAhB,IAAAA,IAAI,CAACsB,UAAL,GAAkBL,SAAS,CAACG,QAAV,CAAmBC,YAAnB,CAAgC1B,WAAhC,EAA6C2B,UAA/D;AACA,QAAIJ,SAAS,GAAGD,SAAS,CAACG,QAAV,CAAmBC,YAAnC;;AACA,QAAI1B,WAAJ,EAAiB;AACfuB,MAAAA,SAAS,GAAG/B,OAAO,CAAC8B,SAAD,EAAYE,UAAU,IAAI;AAC3CA,QAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiC1B,WAAjC,IAAgDK,IAAhD;AACD,OAFkB,CAAnB;AAGD,KAJD,MAIO;AACLkB,MAAAA,SAAS,GAAG/B,OAAO,CAAC8B,SAAD,EAAYE,UAAU,IAAI;AAC3CA,QAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiCI,IAAjC,CAAsCzB,IAAtC;AACD,OAFkB,CAAnB;AAGD;;AACDe,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEjC,wBADC;AAEPkC,MAAAA,OAAO,EAAE;AAAExB,QAAAA,IAAI,EAAEkB,SAAS,CAACE,QAAV,CAAmBC;AAA3B;AAFF,KAAD,CAAR;AAID,GAzDD;AA0DD,CA5DM;AA8DP,OAAO,MAAMsC,wBAAwB,GAAGhE,WAAW,IAAI;AACrD,SAAO,CAACoB,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,SAAS,GAAGD,QAAQ,EAAxB;AACA,UAAME,SAAS,GAAG/B,OAAO,CAAC8B,SAAD,EAAYE,UAAU,IAAI;AACjDA,MAAAA,UAAU,CAACC,QAAX,CAAoBC,YAApB,CAAiCM,MAAjC,CAAwChC,WAAxC,EAAqD,CAArD;AACD,KAFwB,CAAzB;AAGAoB,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEhC,2BADC;AAEPiC,MAAAA,OAAO,EAAE;AAAExB,QAAAA,IAAI,EAAEkB,SAAS,CAACE,QAAV,CAAmBC;AAA3B;AAFF,KAAD,CAAR;AAID,GATD;AAUD,CAXM","sourcesContent":["import { axiosInstance } from \"../api/axiosConfig\";\nimport produce from \"immer\";\nimport {\n  ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n  DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST,\n  ADD_DAUGHTER_MEMBER_LIST,\n  DELETE_DAUGHTER_MEMBER_LIST\n} from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport { getDate } from \"date-fns\";\n\nexport const addUpdateMemberDataToDaughterMemberList = (\n  parentIndex,\n  memberIndex,\n  dataObj\n) => {\n  console.log(\n    \"parentIndex, memberIndex, dataObj\",\n    parentIndex,\n    memberIndex,\n    dataObj\n  );\n  let data = {\n    firstName: dataObj.firstName,\n    middleName: dataObj.middleName,\n    lastName: dataObj.lastName,\n    relation: dataObj.relation,\n    bloodGroup: dataObj.bloodGroup,\n    dateOfBirth: dataObj.dateOfBirth,\n    studies: dataObj.studies,\n    mobileNo: dataObj.mobileNo,\n    gender: dataObj.gender,\n    eventMember: dataObj.eventMember,\n    maritalStatus: dataObj.maritalStatus,\n    aadhaarNo: dataObj.aadhaarNo,\n    anniversaryDate:\n      dataObj.maritalStatus.toLowerCase() === \"married\"\n        ? dataObj.anniversaryDate\n        : \"\"\n  };\n\n  return (dispatch, getState) => {\n    let stateData = getState();\n    if (memberIndex) {\n      const nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex].memberList[\n          memberIndex\n        ] = data;\n      });\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n        payload: { data: nextState.daughter.daughterlist }\n      });\n    } else {\n      const nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex].memberList.push(data);\n      });\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n        payload: { data: nextState.daughter.daughterlist }\n      });\n    }\n  };\n};\n\nexport const deleteMemberDataToDaughterMemberList = (\n  parentIndex,\n  memberIndex\n) => {\n  return (dispatch, getState) => {\n    let stateData = getState();\n    const nextState = produce(stateData, draftState => {\n      draftState.daughter.daughterlist[parentIndex].memberList.splice(\n        memberIndex,\n        1\n      );\n    });\n    dispatch({\n      type: DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST,\n      payload: { data: nextState.daughter.daughterlist }\n    });\n  };\n};\n\nexport const addUpdateDaughterMemberList = (parentIndex, dataObj) => {\n  console.log(\"action\", parentIndex, dataObj);\n  return (dispatch, getState) => {\n    var data = {\n      basicDetail: {\n        familyId: dataObj.familyId,\n        firstName: dataObj.firstName,\n        middleName: dataObj.middleName,\n        lastName: dataObj.lastName,\n        email: dataObj.email,\n        mobile: dataObj.mobile,\n        residencePhone: dataObj.residencePhone,\n        officePhone: dataObj.officePhone,\n        nativePlaceId: dataObj.nativePlaceId,\n        occupationId: dataObj.occupationId,\n        dob: dataObj.dob,\n        marriageDate: dataObj.marriageDate,\n        motherName: dataObj.motherName,\n        motherNativePlaceId: dataObj.motherNativePlaceId,\n        eventHead: dataObj.eventHead,\n        aadhaarNo: dataObj.aadhaarNo,\n        otherOccupation: dataObj.otherOccupation\n      },\n      residenceDetail: {\n        r_Address1: dataObj.r_Address1,\n        r_Address2: dataObj.r_Address2,\n        r_Address3: dataObj.r_Address3,\n        r_CountryId: dataObj.r_CountryId,\n        r_CityId: dataObj.r_CityId,\n        r_StateId: dataObj.r_StateId,\n        r_ZipCode: dataObj.r_ZipCode\n      },\n      officeDetail: {\n        o_Address1: dataObj.o_Address1,\n        o_Address2: dataObj.o_Address2,\n        o_Address3: dataObj.o_Address3,\n        o_CountryId: dataObj.o_CountryId,\n        o_CityId: dataObj.o_CityId,\n        o_StateId: dataObj.o_StateId,\n        o_ZipCode: dataObj.o_ZipCode\n      },\n      memberList: []\n    };\n    var stateData = getState();\n    data.memberList = stateData.daughter.daughterlist[parentIndex].memberList;\n    let nextState = stateData.daughter.daughterlist;\n    if (parentIndex) {\n      nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex] = data;\n      });\n    } else {\n      nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist.push(data);\n      });\n    }\n    dispatch({\n      type: ADD_DAUGHTER_MEMBER_LIST,\n      payload: { data: nextState.daughter.daughterlist }\n    });\n  };\n};\n\nexport const deleteDaughterMemberList = parentIndex => {\n  return (dispatch, getState) => {\n    let stateData = getState();\n    const nextState = produce(stateData, draftState => {\n      draftState.daughter.daughterlist.splice(parentIndex, 1);\n    });\n    dispatch({\n      type: DELETE_DAUGHTER_MEMBER_LIST,\n      payload: { data: nextState.daughter.daughterlist }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}