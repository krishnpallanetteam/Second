{"ast":null,"code":"import { axiosInstance } from \"../api/axiosConfig\";\nimport { SAVE_FAMILY_DATA_TO_STORE, SAVE_DROPDOWN_LIST_DATA_TO_STORE, ADD_DAUGHTER_MEMBER_LIST, ADD_MEMBER_DATA_TO_MEMBER_LIST, UPDATE_FAMILYID_TO_STORE } from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]); // console.log(data);\n\n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: {\n              data\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n}; // export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: {\n          family: data\n        }\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let data = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            draftState.family.basicDetail.familyId = data.familyId;\n          });\n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: {\n              data: nextState.family\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\nexport const setWholeDataToStoreInitially = tempData => {\n  console.log(\"********************************\", tempData);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: {\n          mobile: tempData\n        }\n      });\n\n      if (response.status === 200) {\n        debugger;\n\n        if (response.data.length > 1 && response.data[0]) {\n          debugger;\n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            tempData[0].daughterDetail.map(item => draftState.daughter.daughterlist.push(item));\n          });\n          debugger;\n          var responseData = response.data[0][0];\n          var responseResidenceData = {};\n          var responseOfficeData = {};\n          var familyDetail = {\n            familyId: responseData.familyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.Dob,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n          dispatch({\n            type: SAVE_FAMILY_DATA_TO_STORE,\n            payload: {\n              data: tempData[0].family\n            }\n          });\n          dispatch({\n            type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n            payload: {\n              data: tempData[0].memberList\n            }\n          });\n          dispatch({\n            type: ADD_DAUGHTER_MEMBER_LIST,\n            payload: {\n              data: nextState.daughter.daughterlist\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/action/familyAction.js"],"names":["axiosInstance","SAVE_FAMILY_DATA_TO_STORE","SAVE_DROPDOWN_LIST_DATA_TO_STORE","ADD_DAUGHTER_MEMBER_LIST","ADD_MEMBER_DATA_TO_MEMBER_LIST","UPDATE_FAMILYID_TO_STORE","jsonParseMethod","produce","dummyData","getAllDropDownListData","dispatch","getState","response","url","method","status","data","length","type","payload","error","saveFamilyDataToStore","family","console","log","stateData","nextState","draftState","basicDetail","familyId","setWholeDataToStoreInitially","tempData","mobile","daughterDetail","map","item","daughter","daughterlist","push","responseData","responseResidenceData","responseOfficeData","familyDetail","firstName","FirstName","middleName","MiddleName","lastName","LastName","email","Email","Mobile","residencePhone","ResidencePhone","officePhone","OfficePhone","nativePlaceId","NativePlaceId","occupationId","OccupationId","dob","Dob","marriageDate","MarriageDate","motherName","MotherName","motherNativePlaceId","MotherNativePlaceId","eventHead","aadhaarNo","AadhaarNo","r_Address1","Address1","r_Address2","Address2","r_Address3","Address3","r_CountryId","CountryId","r_CityId","CityId","r_StateId","StateId","r_ZipCode","ZipCode","o_Address1","o_Address2","o_Address3","o_CountryId","o_CityId","o_StateId","o_ZipCode","memberList"],"mappings":"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","sourcesContent":["import { axiosInstance } from \"../api/axiosConfig\";\nimport {\n  SAVE_FAMILY_DATA_TO_STORE,\n  SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n  ADD_DAUGHTER_MEMBER_LIST,\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_FAMILYID_TO_STORE\n} from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]);\n          // console.log(data);\n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: { data }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\n// export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: { family: data }\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let data = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            draftState.family.basicDetail.familyId = data.familyId;\n          });\n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: { data: nextState.family }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\nexport const setWholeDataToStoreInitially = tempData => {\n  console.log(\"********************************\", tempData);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: { mobile: tempData }\n      });\n      if (response.status === 200) {\n        debugger;\n        if (response.data.length > 1 && response.data[0]) {\n          debugger;\n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            tempData[0].daughterDetail.map(item =>\n              draftState.daughter.daughterlist.push(item)\n            );\n          });\n          debugger;\n          var responseData = response.data[0][0];\n          var responseResidenceData = {};\n          var responseOfficeData = {};\n          var familyDetail = {\n            familyId: responseData.familyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.Dob,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n\n          dispatch({\n            type: SAVE_FAMILY_DATA_TO_STORE,\n            payload: { data: tempData[0].family }\n          });\n          dispatch({\n            type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n            payload: { data: tempData[0].memberList }\n          });\n          dispatch({\n            type: ADD_DAUGHTER_MEMBER_LIST,\n            payload: { data: nextState.daughter.daughterlist }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}