{"ast":null,"code":"import { axiosInstance } from \"../api/axiosConfig\";\nimport { SAVE_FAMILY_DATA_TO_STORE, SAVE_DROPDOWN_LIST_DATA_TO_STORE, ADD_DAUGHTER_MEMBER_LIST, ADD_MEMBER_DATA_TO_MEMBER_LIST, UPDATE_FAMILYID_TO_STORE } from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nimport { compare } from \"../utils/commonUtils\";\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]); // console.log(data);\n\n          data.cityList = data.cityList.sort(compare);\n          data.stateList = data.stateList.sort(compare);\n          data.countryList = data.countryList.sort(compare);\n          data.nativePlaceList = data.nativePlaceList.sort(compare);\n          data.occupationList = data.occupationList.sort(compare);\n          data.relationList = data.relationList.sort(compare);\n          data.countryList = data.countryList.sort(compare);\n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: {\n              data\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n}; // export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: {\n          family: data\n        }\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            draftState.family.basicDetail.familyId = responseData.familyId;\n            draftState.family.basicDetail.firstName = data.firstName;\n            draftState.family.basicDetail.middleName = data.middleName;\n            draftState.family.basicDetail.lastName = data.lastName;\n            draftState.family.basicDetail.email = data.email;\n            draftState.family.basicDetail.mobile = data.mobile;\n            draftState.family.basicDetail.residencePhone = data.residencePhone;\n            draftState.family.basicDetail.officePhone = data.officePhone;\n            draftState.family.basicDetail.nativePlaceId = data.nativePlaceId;\n            draftState.family.basicDetail.occupationId = data.occupationId;\n            draftState.family.basicDetail.dob = data.dob;\n            draftState.family.basicDetail.marriageDate = data.marriageDate;\n            draftState.family.basicDetail.motherName = data.motherName;\n            draftState.family.basicDetail.motherNativePlaceId = data.motherNativePlaceId;\n            draftState.family.basicDetail.eventHead = data.eventHead;\n            draftState.family.basicDetail.aadhaarNo = data.aadhaarNo;\n            draftState.family.basicDetail.otherOccupation = data.otherOccupation;\n            draftState.family.residenceDetail.r_Address1 = data.r_Address1;\n            draftState.family.residenceDetail.r_Address2 = data.r_Address2;\n            draftState.family.residenceDetail.r_Address3 = data.r_Address3;\n            draftState.family.residenceDetail.r_CountryId = data.r_CountryId;\n            draftState.family.residenceDetail.r_CityId = data.r_CityId;\n            draftState.family.residenceDetail.r_StateId = data.r_StateId;\n            draftState.family.residenceDetail.r_ZipCode = data.r_StateId;\n            draftState.family.officeDetail.o_Address1 = data.o_Address1;\n            draftState.family.officeDetail.o_Address2 = data.o_Address2;\n            draftState.family.officeDetail.o_Address3 = data.o_Address3;\n            draftState.family.officeDetail.o_CountryId = data.o_CountryId;\n            draftState.family.officeDetail.o_CityId = data.o_CityId;\n            draftState.family.officeDetail.o_StateId = data.o_StateId;\n            draftState.family.officeDetail.o_ZipCode = data.o_ZipCode;\n          });\n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: {\n              data: nextState.family\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\nexport const setWholeDataToStoreInitially = mobile => {\n  console.log(\"********************************\", mobile);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: {\n          mobile: mobile\n        }\n      });\n\n      if (response.status === 200) {\n        debugger;\n\n        if (response.data.length > 1 && response.data[0]) {\n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            dummyData[0].daughterDetail.map(item => draftState.daughter.daughterlist.push(item));\n          });\n          var responseData = response.data[0][0];\n          var responseResidenceData = response.data[0][0].ResidenceAddressDetail ? JSON.parse(response.data[0][0].ResidenceAddressDetail)[0] : {};\n          var responseOfficeData = response.data[0][0].OfficeAddressDetail ? JSON.parse(response.data[0][0].OfficeAddressDetail)[0] : {};\n          var familyDetail = {\n            familyId: responseData.FamilyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.Dob,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n\n          if (familyDetail.mobile == mobile) {\n            dispatch({\n              type: SAVE_FAMILY_DATA_TO_STORE,\n              payload: {\n                data: familyDetail\n              }\n            });\n            dispatch({\n              type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n              payload: {\n                data: dummyData[0].memberList\n              }\n            });\n            dispatch({\n              type: ADD_DAUGHTER_MEMBER_LIST,\n              payload: {\n                data: nextState.daughter.daughterlist\n              }\n            });\n          }\n        } else {// dispatch({\n          //   type: SAVE_FAMILY_DATA_TO_STORE,\n          //   payload: { data: dummyData[0].family }\n          // });\n          // dispatch({\n          //   type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n          //   payload: { data: dummyData[0].memberList }\n          // });\n          // dispatch({\n          //   type: ADD_DAUGHTER_MEMBER_LIST,\n          //   payload: { data: dummyData[0].daughterDetail}\n          // });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/action/familyAction.js"],"names":["axiosInstance","SAVE_FAMILY_DATA_TO_STORE","SAVE_DROPDOWN_LIST_DATA_TO_STORE","ADD_DAUGHTER_MEMBER_LIST","ADD_MEMBER_DATA_TO_MEMBER_LIST","UPDATE_FAMILYID_TO_STORE","jsonParseMethod","produce","dummyData","compare","getAllDropDownListData","dispatch","getState","response","url","method","status","data","length","cityList","sort","stateList","countryList","nativePlaceList","occupationList","relationList","type","payload","error","saveFamilyDataToStore","family","console","log","responseData","stateData","nextState","draftState","basicDetail","familyId","firstName","middleName","lastName","email","mobile","residencePhone","officePhone","nativePlaceId","occupationId","dob","marriageDate","motherName","motherNativePlaceId","eventHead","aadhaarNo","otherOccupation","residenceDetail","r_Address1","r_Address2","r_Address3","r_CountryId","r_CityId","r_StateId","r_ZipCode","officeDetail","o_Address1","o_Address2","o_Address3","o_CountryId","o_CityId","o_StateId","o_ZipCode","setWholeDataToStoreInitially","daughterDetail","map","item","daughter","daughterlist","push","responseResidenceData","ResidenceAddressDetail","JSON","parse","responseOfficeData","OfficeAddressDetail","familyDetail","FamilyId","FirstName","MiddleName","LastName","Email","Mobile","ResidencePhone","OfficePhone","NativePlaceId","OccupationId","Dob","MarriageDate","MotherName","MotherNativePlaceId","AadhaarNo","Address1","Address2","Address3","CountryId","CityId","StateId","ZipCode","memberList"],"mappings":"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","sourcesContent":["import { axiosInstance } from \"../api/axiosConfig\";\nimport {\n  SAVE_FAMILY_DATA_TO_STORE,\n  SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n  ADD_DAUGHTER_MEMBER_LIST,\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_FAMILYID_TO_STORE\n} from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nimport {compare } from \"../utils/commonUtils\";\n\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]);\n          // console.log(data);\n          data.cityList = data.cityList.sort(compare);\n          data.stateList = data.stateList.sort(compare);\n          data.countryList = data.countryList.sort(compare);\n          data.nativePlaceList = data.nativePlaceList.sort(compare);\n          data.occupationList = data.occupationList.sort(compare);\n          data.relationList = data.relationList.sort(compare);\n          data.countryList = data.countryList.sort(compare);\n          \n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: { data }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\n// export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: { family: data }\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n          draftState.family.basicDetail.familyId = responseData.familyId;\n          draftState.family.basicDetail.firstName= data.firstName;\n          draftState.family.basicDetail.middleName= data.middleName;\n          draftState.family.basicDetail.lastName= data.lastName;\n          draftState.family.basicDetail.email= data.email;\n          draftState.family.basicDetail.mobile= data.mobile;\n          draftState.family.basicDetail.residencePhone= data.residencePhone;\n          draftState.family.basicDetail.officePhone= data.officePhone;\n          draftState.family.basicDetail.nativePlaceId= data.nativePlaceId;\n          draftState.family.basicDetail.occupationId= data.occupationId;\n          draftState.family.basicDetail.dob= data.dob;\n          draftState.family.basicDetail.marriageDate= data.marriageDate;\n          draftState.family.basicDetail.motherName= data.motherName;\n          draftState.family.basicDetail.motherNativePlaceId= data.motherNativePlaceId;\n          draftState.family.basicDetail.eventHead=data.eventHead;\n          draftState.family.basicDetail.aadhaarNo= data.aadhaarNo;\n          draftState.family.basicDetail.otherOccupation=data.otherOccupation;\n          draftState.family.residenceDetail.r_Address1= data.r_Address1;\n          draftState.family.residenceDetail.r_Address2= data.r_Address2;\n          draftState.family.residenceDetail.r_Address3= data.r_Address3;\n          draftState.family.residenceDetail.r_CountryId= data.r_CountryId;\n          draftState.family.residenceDetail.r_CityId= data.r_CityId;\n          draftState.family.residenceDetail.r_StateId= data.r_StateId;\n          draftState.family.residenceDetail.r_ZipCode=data.r_StateId;\n          draftState.family.officeDetail.o_Address1= data.o_Address1;\n          draftState.family.officeDetail.o_Address2= data.o_Address2;\n          draftState.family.officeDetail.o_Address3= data.o_Address3;\n          draftState.family.officeDetail.o_CountryId= data.o_CountryId;\n          draftState.family.officeDetail.o_CityId= data.o_CityId;\n          draftState.family.officeDetail.o_StateId= data.o_StateId;\n          draftState.family.officeDetail.o_ZipCode=data.o_ZipCode;\n          });\n       \n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: { data: nextState.family }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\nexport const setWholeDataToStoreInitially = mobile => {\n  console.log(\"********************************\", mobile);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: { mobile: mobile }\n      });\n      if (response.status === 200) {\n        debugger;\n        if (response.data.length > 1 && response.data[0]) {\n        \n          \n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            dummyData[0].daughterDetail.map(item =>\n              draftState.daughter.daughterlist.push(item)\n            );\n          });\n          \n          var responseData = response.data[0][0];\n          var responseResidenceData = response.data[0][0].ResidenceAddressDetail ? (JSON.parse(response.data[0][0].ResidenceAddressDetail))[0]:{} ;\n          var responseOfficeData = response.data[0][0].OfficeAddressDetail ? (JSON.parse(response.data[0][0].OfficeAddressDetail))[0] : {};\n\n          var familyDetail = {\n            familyId: responseData.FamilyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.Dob,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n          if (familyDetail.mobile ==mobile) {\n            dispatch({\n              type: SAVE_FAMILY_DATA_TO_STORE,\n              payload: { data: familyDetail }\n            });\n            dispatch({\n              type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n              payload: { data: dummyData[0].memberList }\n            });\n            dispatch({\n              type: ADD_DAUGHTER_MEMBER_LIST,\n              payload: { data: nextState.daughter.daughterlist }\n            });\n          }\n         \n        }\n        else\n        {\n          // dispatch({\n          //   type: SAVE_FAMILY_DATA_TO_STORE,\n          //   payload: { data: dummyData[0].family }\n          // });\n          // dispatch({\n          //   type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n          //   payload: { data: dummyData[0].memberList }\n          // });\n          // dispatch({\n          //   type: ADD_DAUGHTER_MEMBER_LIST,\n          //   payload: { data: dummyData[0].daughterDetail}\n          // });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}