{"ast":null,"code":"import { axiosInstance } from \"../api/axiosConfig\";\nimport { SAVE_FAMILY_DATA_TO_STORE, SAVE_DROPDOWN_LIST_DATA_TO_STORE, ADD_DAUGHTER_MEMBER_LIST, ADD_MEMBER_DATA_TO_MEMBER_LIST, UPDATE_FAMILYID_TO_STORE } from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]); // console.log(data);\n\n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: {\n              data\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n}; // export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: {\n          family: data\n        }\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            draftState.family.basicDetail.familyId = responseData.familyId;\n          });\n          debugger;\n          nextState.basicDetail.firstName = data.firstName;\n          nextState.basicDetail.middleName = data.middleName;\n          nextState.basicDetail.lastName = data.lastName;\n          nextState.basicDetail.email = data.email;\n          nextState.basicDetail.mobile = data.mobile;\n          nextState.basicDetail.residencePhone = data.residencePhone;\n          nextState.basicDetail.officePhone = data.officePhone;\n          nextState.basicDetail.nativePlaceId = data.nativePlaceId;\n          nextState.basicDetail.occupationId = data.occupationId;\n          nextState.basicDetail.dob = data.dob;\n          nextState.basicDetail.marriageDate = data.marriageDate;\n          nextState.basicDetail.motherName = data.motherName;\n          nextState.basicDetail.motherNativePlaceId = data.motherNativePlaceId;\n          nextState.basicDetail.eventHead = data.eventHead;\n          nextState.basicDetail.aadhaarNo = data.aadhaarNo;\n          nextState.basicDetail.otherOccupation = data.otherOccupation;\n          nextState.residenceDetail.r_Address1 = data.r_Address1;\n          nextState.residenceDetail.r_Address2 = data.r_Address2;\n          nextState.residenceDetail.r_Address3 = data.r_Address3;\n          nextState.residenceDetail.r_CountryId = data.r_CountryId;\n          nextState.residenceDetail.r_CityId = data.r_CityId;\n          nextState.residenceDetail.r_StateId = data.r_StateId;\n          nextState.residenceDetail.r_ZipCode = data.r_StateId;\n          nextState.officeDetail.o_Address1 = data.o_Address1;\n          nextState.officeDetail.o_Address2 = data.o_Address2;\n          nextState.officeDetail.o_Address3 = data.o_Address3;\n          nextState.officeDetail.o_CountryId = data.o_CountryId;\n          nextState.officeDetail.o_CityId = data.o_CityId;\n          nextState.officeDetail.o_StateId = data.o_StateId;\n          nextState.officeDetail.o_ZipCode = data.o_ZipCode;\n          debugger;\n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: {\n              data: nextState.family\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\nexport const setWholeDataToStoreInitially = mobile => {\n  console.log(\"********************************\", mobile);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: {\n          mobile: mobile\n        }\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            dummyData[0].daughterDetail.map(item => draftState.daughter.daughterlist.push(item));\n          });\n          var responseData = response.data[0][0];\n          var responseResidenceData = response.data[0][0].ResidenceAddressDetail ? JSON.parse(response.data[0][0].ResidenceAddressDetail)[0] : {};\n          var responseOfficeData = response.data[0][0].OfficeAddressDetail ? JSON.parse(response.data[0][0].OfficeAddressDetail)[0] : {};\n          var familyDetail = {\n            familyId: responseData.FamilyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.Dob,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n          dispatch({\n            type: SAVE_FAMILY_DATA_TO_STORE,\n            payload: {\n              data: familyDetail\n            }\n          });\n          dispatch({\n            type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n            payload: {\n              data: dummyData[0].memberList\n            }\n          });\n          dispatch({\n            type: ADD_DAUGHTER_MEMBER_LIST,\n            payload: {\n              data: nextState.daughter.daughterlist\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/action/familyAction.js"],"names":["axiosInstance","SAVE_FAMILY_DATA_TO_STORE","SAVE_DROPDOWN_LIST_DATA_TO_STORE","ADD_DAUGHTER_MEMBER_LIST","ADD_MEMBER_DATA_TO_MEMBER_LIST","UPDATE_FAMILYID_TO_STORE","jsonParseMethod","produce","dummyData","getAllDropDownListData","dispatch","getState","response","url","method","status","data","length","type","payload","error","saveFamilyDataToStore","family","console","log","responseData","stateData","nextState","draftState","basicDetail","familyId","firstName","middleName","lastName","email","mobile","residencePhone","officePhone","nativePlaceId","occupationId","dob","marriageDate","motherName","motherNativePlaceId","eventHead","aadhaarNo","otherOccupation","residenceDetail","r_Address1","r_Address2","r_Address3","r_CountryId","r_CityId","r_StateId","r_ZipCode","officeDetail","o_Address1","o_Address2","o_Address3","o_CountryId","o_CityId","o_StateId","o_ZipCode","setWholeDataToStoreInitially","daughterDetail","map","item","daughter","daughterlist","push","responseResidenceData","ResidenceAddressDetail","JSON","parse","responseOfficeData","OfficeAddressDetail","familyDetail","FamilyId","FirstName","MiddleName","LastName","Email","Mobile","ResidencePhone","OfficePhone","NativePlaceId","OccupationId","Dob","MarriageDate","MotherName","MotherNativePlaceId","AadhaarNo","Address1","Address2","Address3","CountryId","CityId","StateId","ZipCode","memberList"],"mappings":"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","sourcesContent":["import { axiosInstance } from \"../api/axiosConfig\";\nimport {\n  SAVE_FAMILY_DATA_TO_STORE,\n  SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n  ADD_DAUGHTER_MEMBER_LIST,\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_FAMILYID_TO_STORE\n} from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]);\n          // console.log(data);\n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: { data }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\n// export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: { family: data }\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            draftState.family.basicDetail.familyId = responseData.familyId;\n          });\n          debugger;\n            \n          nextState.basicDetail.firstName= data.firstName;\n          nextState.basicDetail.middleName= data.middleName;\n          nextState.basicDetail.lastName= data.lastName;\n          nextState.basicDetail.email= data.email;\n          nextState.basicDetail.mobile= data.mobile;\n          nextState.basicDetail.residencePhone= data.residencePhone;\n          nextState.basicDetail.officePhone= data.officePhone;\n          nextState.basicDetail.nativePlaceId= data.nativePlaceId;\n          nextState.basicDetail.occupationId= data.occupationId;\n          nextState.basicDetail.dob= data.dob;\n          nextState.basicDetail.marriageDate= data.marriageDate;\n          nextState.basicDetail.motherName= data.motherName;\n          nextState.basicDetail.motherNativePlaceId= data.motherNativePlaceId;\n          nextState.basicDetail.eventHead=data.eventHead;\n          nextState.basicDetail.aadhaarNo= data.aadhaarNo;\n          nextState.basicDetail.otherOccupation=data.otherOccupation;\n          nextState.residenceDetail.r_Address1= data.r_Address1;\n          nextState.residenceDetail.r_Address2= data.r_Address2;\n          nextState.residenceDetail.r_Address3= data.r_Address3;\n          nextState.residenceDetail.r_CountryId= data.r_CountryId;\n          nextState.residenceDetail.r_CityId= data.r_CityId;\n          nextState.residenceDetail.r_StateId= data.r_StateId;\n          nextState.residenceDetail.r_ZipCode=data.r_StateId;\n          nextState.officeDetail.o_Address1= data.o_Address1;\n          nextState.officeDetail.o_Address2= data.o_Address2;\n          nextState.officeDetail.o_Address3= data.o_Address3;\n          nextState.officeDetail.o_CountryId= data.o_CountryId;\n          nextState.officeDetail.o_CityId= data.o_CityId;\n          nextState.officeDetail.o_StateId= data.o_StateId;\n          nextState.officeDetail.o_ZipCode=data.o_ZipCode;\n           \n          debugger;\n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: { data: nextState.family }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\nexport const setWholeDataToStoreInitially = mobile => {\n  console.log(\"********************************\", mobile);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: { mobile: mobile }\n      });\n      if (response.status === 200) {\n        \n        if (response.data.length > 1 && response.data[0]) {\n        \n          \n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            dummyData[0].daughterDetail.map(item =>\n              draftState.daughter.daughterlist.push(item)\n            );\n          });\n          \n          var responseData = response.data[0][0];\n          var responseResidenceData = response.data[0][0].ResidenceAddressDetail ? (JSON.parse(response.data[0][0].ResidenceAddressDetail))[0]:{} ;\n          var responseOfficeData = response.data[0][0].OfficeAddressDetail ? (JSON.parse(response.data[0][0].OfficeAddressDetail))[0] : {};\n\n          var familyDetail = {\n            familyId: responseData.FamilyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.Dob,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n\n          dispatch({\n            type: SAVE_FAMILY_DATA_TO_STORE,\n            payload: { data: familyDetail }\n          });\n          dispatch({\n            type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n            payload: { data: dummyData[0].memberList }\n          });\n          dispatch({\n            type: ADD_DAUGHTER_MEMBER_LIST,\n            payload: { data: nextState.daughter.daughterlist }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}