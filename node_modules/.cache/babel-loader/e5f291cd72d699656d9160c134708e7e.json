{"ast":null,"code":"var _jsxFileName = \"/home/ulcom/Desktop/CommunityReact1/src/main.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { modelAToggle, modelBToggle, modelBCheckBoxToggle, modelCToggle } from './action/modelAction';\nimport ModelA from './model/ModelA';\nimport ModelB from './model/ModelB';\nconst companyId = 226;\n\nconst styles = theme => ({\n  containerPadding: {\n    padding: theme.spacing(1)\n  },\n  modelButton_1: {\n    backgroundColor: '#46139f',\n    color: theme.palette.common.white,\n    fontWeight: 500\n  },\n  modelButton_2: {\n    backgroundColor: '#ff7f50',\n    color: theme.palette.common.white,\n    fontWeight: 500\n  }\n});\n\nclass Main extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.openModel = type => {\n      if (type === 'model_A') this.model_A_toggle();else this.model_B_toggle();\n    };\n\n    this.model_A_toggle = () => {\n      const _this$props = this.props,\n            modelAToggle = _this$props.modelAToggle,\n            modelA = _this$props.modelA;\n      modelAToggle(!modelA.model_A);\n      if (modelA.model_A) this.props.history.push('/');else this.props.history.push('model_A');\n    };\n\n    this.model_B_toggle = () => {\n      const _this$props2 = this.props,\n            modelBToggle = _this$props2.modelBToggle,\n            modelB = _this$props2.modelB;\n      modelBToggle(!modelB.model_B);\n      if (modelB.model_B) this.props.history.push('/');else this.props.history.push('model_B');\n    };\n\n    this.toggleBothModel = type => {\n      const _this$props3 = this.props,\n            modelAToggle = _this$props3.modelAToggle,\n            modelA = _this$props3.modelA,\n            modelBToggle = _this$props3.modelBToggle,\n            modelB = _this$props3.modelB;\n\n      if (type === 'model_A') {\n        modelBToggle(!modelB.model_B);\n        this.model_A_toggle();\n      } else {\n        modelAToggle(!modelA.model_A);\n        this.model_B_toggle();\n      }\n    };\n\n    this.toggleModelC = item => {\n      const _this$props4 = this.props,\n            modelCToggle = _this$props4.modelCToggle,\n            modelC = _this$props4.modelC;\n      modelC.model_C ? modelCToggle(!modelC.model_C, null) : modelCToggle(!modelC.model_C, item);\n    };\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          classes = _this$props5.classes,\n          modelA = _this$props5.modelA,\n          modelB = _this$props5.modelB;\n    return React.createElement(React.Fragment, null, modelA.model_A && React.createElement(ModelA, {\n      model_A_toggle: this.model_A_toggle,\n      buttonAClass: classes.modelButton_1,\n      buttonBClass: classes.modelButton_2,\n      modelA: modelA,\n      companyId: companyId,\n      toggleBothModel: this.toggleBothModel,\n      toggleModelC: this.toggleModelC,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), modelB.model_B && React.createElement(ModelB, {\n      model_B_toggle: this.model_B_toggle,\n      buttonAClass: classes.modelButton_1,\n      buttonBClass: classes.modelButton_2,\n      modelB: modelB,\n      companyId: companyId,\n      toggleBothModel: this.toggleBothModel,\n      toggleModelC: this.toggleModelC,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      className: classes.containerPadding,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.modelButton_1,\n      onClick: () => this.openModel('model_A'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Button A\")), React.createElement(Grid, {\n      item: true,\n      className: classes.containerPadding,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: classes.modelButton_2,\n      onClick: () => this.openModel('model_B'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Button B\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    modelA: state.model.modelA,\n    modelB: state.model.modelB,\n    modelC: state.model.modelC\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    modelAToggle,\n    modelBToggle,\n    modelBCheckBoxToggle,\n    modelCToggle\n  }, dispatch);\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact1/src/main.js"],"names":["React","Component","Grid","Button","withStyles","bindActionCreators","connect","modelAToggle","modelBToggle","modelBCheckBoxToggle","modelCToggle","ModelA","ModelB","companyId","styles","theme","containerPadding","padding","spacing","modelButton_1","backgroundColor","color","palette","common","white","fontWeight","modelButton_2","Main","openModel","type","model_A_toggle","model_B_toggle","props","modelA","model_A","history","push","modelB","model_B","toggleBothModel","toggleModelC","item","modelC","model_C","render","classes","mapStateToProps","state","model","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n\tmodelAToggle, modelBToggle, modelBCheckBoxToggle, modelCToggle\n} from './action/modelAction';\nimport ModelA from './model/ModelA';\nimport ModelB from './model/ModelB';\n\nconst companyId = 226;\nconst styles = theme => ({\n\tcontainerPadding: {\n\t\tpadding: theme.spacing(1)\n\t},\n\tmodelButton_1: {\n\t\tbackgroundColor: '#46139f',\n\t\tcolor: theme.palette.common.white,\n\t\tfontWeight: 500\n\t},\n\tmodelButton_2: {\n\t\tbackgroundColor: '#ff7f50',\n\t\tcolor: theme.palette.common.white,\n\t\tfontWeight: 500\n\t}\n});\n\nclass Main extends Component {\n\topenModel = type => {\n\t\tif (type === 'model_A') this.model_A_toggle();\n\t\telse this.model_B_toggle();\n\t}\n\n\tmodel_A_toggle = () => {\n\t\tconst { modelAToggle, modelA } = this.props;\n\t\tmodelAToggle(!modelA.model_A);\n\t\tif (modelA.model_A) this.props.history.push('/');\n\t\telse this.props.history.push('model_A');\n\t}\n\n\tmodel_B_toggle = () => {\n\t\tconst { modelBToggle, modelB } = this.props;\n\t\tmodelBToggle(!modelB.model_B);\n\t\tif (modelB.model_B) this.props.history.push('/');\n\t\telse this.props.history.push('model_B');\n\t}\n\n\ttoggleBothModel = type => {\n\t\tconst { modelAToggle, modelA, modelBToggle, modelB } = this.props;\n\t\tif (type === 'model_A') {\n\t\t\tmodelBToggle(!modelB.model_B);\n\t\t\tthis.model_A_toggle();\n\t\t} else {\n\t\t\tmodelAToggle(!modelA.model_A);\n\t\t\tthis.model_B_toggle();\n\t\t}\n\t}\n\n\ttoggleModelC = (item) => {\n\t\tconst { modelCToggle, modelC } = this.props;\n\t\tmodelC.model_C ? modelCToggle(!modelC.model_C, null) : modelCToggle(!modelC.model_C, item);\n\t}\n\n\n\trender() {\n\t\tconst { classes, modelA, modelB } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{modelA.model_A &&\n\t\t\t\t\t<ModelA\n\t\t\t\t\t\tmodel_A_toggle={this.model_A_toggle}\n\t\t\t\t\t\tbuttonAClass={classes.modelButton_1}\n\t\t\t\t\t\tbuttonBClass={classes.modelButton_2}\n\t\t\t\t\t\tmodelA={modelA}\n\t\t\t\t\t\tcompanyId={companyId}\n\t\t\t\t\t\ttoggleBothModel={this.toggleBothModel}\n\t\t\t\t\t\ttoggleModelC={this.toggleModelC}\n\t\t\t\t\t/>}\n\t\t\t\t{modelB.model_B &&\n\t\t\t\t\t<ModelB\n\t\t\t\t\t\tmodel_B_toggle={this.model_B_toggle}\n\t\t\t\t\t\tbuttonAClass={classes.modelButton_1}\n\t\t\t\t\t\tbuttonBClass={classes.modelButton_2}\n\t\t\t\t\t\tmodelB={modelB}\n\t\t\t\t\t\tcompanyId={companyId}\n\t\t\t\t\t\ttoggleBothModel={this.toggleBothModel}\n\t\t\t\t\t\ttoggleModelC={this.toggleModelC}\n\t\t\t\t\t/>}\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t<Grid item className={classes.containerPadding}>\n\t\t\t\t\t\t<Button variant=\"contained\" className={classes.modelButton_1} onClick={() => this.openModel('model_A')}>\n\t\t\t\t\t\t\tButton A\n              </Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item className={classes.containerPadding}>\n\t\t\t\t\t\t<Button variant=\"contained\" className={classes.modelButton_2} onClick={() => this.openModel('model_B')}>\n\t\t\t\t\t\t\tButton B\n              </Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmodelA: state.model.modelA,\n\t\tmodelB: state.model.modelB,\n\t\tmodelC: state.model.modelC\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tmodelAToggle,\n\t\tmodelBToggle,\n\t\tmodelBCheckBoxToggle,\n\t\tmodelCToggle\n\t}, dispatch);\n};\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(Main));\n"]},"metadata":{},"sourceType":"module"}