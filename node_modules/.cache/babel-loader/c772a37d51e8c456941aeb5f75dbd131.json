{"ast":null,"code":"import _regeneratorRuntime from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/regenerator\";import{MODEL_A_TOGGLE,MODEL_A_CHECKBOX_STATUS_TOGGLE,MODEL_A_ALL_COUNTRY_DATA,MODEL_B_TOGGLE,MODEL_B_US_COUNTRY_DATA,MODEL_B_CHECKBOX_STATUS_TOGGLE,MODEL_C_TOGGLE}from'./actionTypes';import{axiosInstance}from'../api/axiosConfig';export var modelAToggle=function modelAToggle(status){return function(dispatch,getState){dispatch({type:MODEL_A_TOGGLE,payload:{status:status}});};};export var modelACheckBoxToggle=function modelACheckBoxToggle(status){return function(dispatch){dispatch({type:MODEL_A_CHECKBOX_STATUS_TOGGLE,payload:{status:status}});};};export var getAllCountryContacts=function getAllCountryContacts(){var page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var loadMore=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var countryId=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var params=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;return function _callee(dispatch,getState){var queryObj,response,data,contactList,allState,list,_allState,_list;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:queryObj={companyId:171,page:page};if(countryId)queryObj.countryId=countryId;if(params&&Object.keys(params).length){queryObj.query={};if(params.names)queryObj.query.names=params.names;else if(params.number)queryObj.query.number=params.number;}_context.prev=3;_context.next=6;return _regeneratorRuntime.awrap(axiosInstance({method:'get',params:queryObj}));case 6:response=_context.sent;if(!(response.status===200)){_context.next=23;break;}data=response.data;contactList=[];if(!countryId){_context.next=17;break;}if(loadMore){allState=getState();list=allState.model.modelB.usCountryList;contactList=list;}data.contacts_ids.forEach(function(item){contactList.push(data.contacts[item]);});dispatch({type:MODEL_B_US_COUNTRY_DATA,payload:{contactList:contactList}});return _context.abrupt(\"return\",response.data);case 17:if(loadMore){_allState=getState();_list=_allState.model.modelA.allCountryList;contactList=_list;}data.contacts_ids.forEach(function(item){contactList.push(data.contacts[item]);});dispatch({type:MODEL_A_ALL_COUNTRY_DATA,payload:{contactList:contactList}});return _context.abrupt(\"return\",response.data);case 21:_context.next=29;break;case 23:if(!(response.status===404)){_context.next=27;break;}return _context.abrupt(\"return\",response);case 27:if(!(response.status===500)){_context.next=29;break;}return _context.abrupt(\"return\",response);case 29:_context.next=34;break;case 31:_context.prev=31;_context.t0=_context[\"catch\"](3);return _context.abrupt(\"return\",_context.t0);case 34:case\"end\":return _context.stop();}}},null,null,[[3,31]]);};};export var modelBToggle=function modelBToggle(status){return function(dispatch){dispatch({type:MODEL_B_TOGGLE,payload:{status:status}});};};export var modelBCheckBoxToggle=function modelBCheckBoxToggle(status){return function(dispatch){dispatch({type:MODEL_B_CHECKBOX_STATUS_TOGGLE,payload:{status:status}});};};export var modelCToggle=function modelCToggle(status){var item=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return function(dispatch,getState){dispatch({type:MODEL_C_TOGGLE,payload:{status:status,item:item}});};};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact1/src/action/modelAction.js"],"names":["MODEL_A_TOGGLE","MODEL_A_CHECKBOX_STATUS_TOGGLE","MODEL_A_ALL_COUNTRY_DATA","MODEL_B_TOGGLE","MODEL_B_US_COUNTRY_DATA","MODEL_B_CHECKBOX_STATUS_TOGGLE","MODEL_C_TOGGLE","axiosInstance","modelAToggle","status","dispatch","getState","type","payload","modelACheckBoxToggle","getAllCountryContacts","page","loadMore","countryId","params","queryObj","companyId","Object","keys","length","query","names","number","method","response","data","contactList","allState","list","model","modelB","usCountryList","contacts_ids","forEach","item","push","contacts","modelA","allCountryList","modelBToggle","modelBCheckBoxToggle","modelCToggle"],"mappings":"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","sourcesContent":["import { MODEL_A_TOGGLE, MODEL_A_CHECKBOX_STATUS_TOGGLE, MODEL_A_ALL_COUNTRY_DATA, MODEL_B_TOGGLE, MODEL_B_US_COUNTRY_DATA, MODEL_B_CHECKBOX_STATUS_TOGGLE, MODEL_C_TOGGLE } from './actionTypes';\nimport { axiosInstance } from '../api/axiosConfig';\n\nexport const modelAToggle = status => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: MODEL_A_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const modelACheckBoxToggle = status => {\n    return (dispatch) => {\n        dispatch({\n            type: MODEL_A_CHECKBOX_STATUS_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const getAllCountryContacts = (page = 1, loadMore = false, countryId = null, params = null) => {\n    return async (dispatch, getState) => {\n        let queryObj = {\n            companyId: 171,\n            page\n        };\n        if (countryId) queryObj.countryId = countryId;\n        if (params && Object.keys(params).length) {\n            queryObj.query = {};\n            if (params.names) queryObj.query.names = params.names;\n            else if (params.number) queryObj.query.number = params.number;\n        }\n        try {\n            const response = await axiosInstance({\n                method: 'get',\n                params: queryObj\n            });\n            if (response.status === 200) {\n                let data = response.data;\n                let contactList = [];\n                if (countryId) {\n                    if (loadMore) {\n                        let allState = getState();\n                        let list = allState.model.modelB.usCountryList;\n                        contactList = list;\n                    }\n                    data.contacts_ids.forEach(item => {\n                        contactList.push(data.contacts[item]);\n                    });\n                    dispatch({\n                        type: MODEL_B_US_COUNTRY_DATA,\n                        payload: { contactList }\n                    });\n                    return response.data;\n                } else {\n                    if (loadMore) {\n                        let allState = getState();\n                        let list = allState.model.modelA.allCountryList;\n                        contactList = list;\n                    }\n                    data.contacts_ids.forEach(item => {\n                        contactList.push(data.contacts[item]);\n                    });\n                    dispatch({\n                        type: MODEL_A_ALL_COUNTRY_DATA,\n                        payload: { contactList }\n                    });\n                    return response.data;\n                }\n            } else if (response.status === 404) {\n                return response;\n            } else if (response.status === 500) {\n                return response;\n            }\n        } catch (error) {\n            return error\n        }\n    };\n};\n\nexport const modelBToggle = status => {\n    return (dispatch) => {\n        dispatch({\n            type: MODEL_B_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const modelBCheckBoxToggle = status => {\n    return (dispatch) => {\n        dispatch({\n            type: MODEL_B_CHECKBOX_STATUS_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const modelCToggle = (status, item = null) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: MODEL_C_TOGGLE,\n            payload: { status, item }\n        });\n    };\n}\n"]},"metadata":{},"sourceType":"module"}