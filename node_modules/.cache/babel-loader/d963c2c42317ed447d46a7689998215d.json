{"ast":null,"code":"export const jsonParseMethod = data => {\n  var listObject = data;\n  let stateList = JSON.parse(listObject.State);\n  let cityList = JSON.parse(listObject.City);\n  let occupationList = JSON.parse(listObject.Occupation);\n  let nativePlaceList = JSON.parse(listObject.NativePlace);\n  let eventList = JSON.parse(listObject.Event);\n  let bloodGroupList = JSON.parse(listObject.BloodGroup);\n  let relationList = JSON.parse(listObject.Relation);\n  let countryList = JSON.parse(listObject.Country);\n  let maritalStatusList = JSON.parse(listObject.MaritalStatus);\n  let zodiacList = JSON.parse(listObject.Zodiac);\n  return {\n    stateList,\n    cityList,\n    occupationList,\n    nativePlaceList,\n    bloodGroupList,\n    relationList,\n    eventList,\n    countryList,\n    maritalStatusList,\n    zodiacList\n  };\n};\nexport const compare = (a, b) => {\n  if (a.Name != \"OTHER\") {\n    if (a.Name < b.Name) {\n      return -1;\n    }\n\n    if (a.Name > b.Name) {\n      return 1;\n    }\n\n    return 0;\n  } else {\n    return 2;\n  }\n};\nexport const getFormattedDate = dateToFomat => {\n  var dd = dateToFomat.getDate();\n  var mm = dateToFomat.getMonth() + 1;\n  var yyyy = dateToFomat.getFullYear();\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact1/src/utils/commonUtils.js"],"names":["jsonParseMethod","data","listObject","stateList","JSON","parse","State","cityList","City","occupationList","Occupation","nativePlaceList","NativePlace","eventList","Event","bloodGroupList","BloodGroup","relationList","Relation","countryList","Country","maritalStatusList","MaritalStatus","zodiacList","Zodiac","compare","a","b","Name","getFormattedDate","dateToFomat","dd","getDate","mm","getMonth","yyyy","getFullYear"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAGC,IAAI,IAAI;AACrC,MAAIC,UAAU,GAAGD,IAAjB;AACA,MAAIE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACI,KAAtB,CAAhB;AACA,MAAIC,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACM,IAAtB,CAAf;AACA,MAAIC,cAAc,GAAGL,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACQ,UAAtB,CAArB;AACA,MAAIC,eAAe,GAAGP,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACU,WAAtB,CAAtB;AACA,MAAIC,SAAS,GAAGT,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACY,KAAtB,CAAhB;AACA,MAAIC,cAAc,GAAGX,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACc,UAAtB,CAArB;AACA,MAAIC,YAAY,GAAGb,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACgB,QAAtB,CAAnB;AACA,MAAIC,WAAW,GAAGf,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACkB,OAAtB,CAAlB;AACA,MAAIC,iBAAiB,GAAGjB,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACoB,aAAtB,CAAxB;AACA,MAAIC,UAAU,GAAGnB,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACsB,MAAtB,CAAjB;AAGA,SAAO;AACLrB,IAAAA,SADK;AAELI,IAAAA,QAFK;AAGLE,IAAAA,cAHK;AAILE,IAAAA,eAJK;AAKLI,IAAAA,cALK;AAMLE,IAAAA,YANK;AAOLJ,IAAAA,SAPK;AAQLM,IAAAA,WARK;AASLE,IAAAA,iBATK;AAULE,IAAAA;AAVK,GAAP;AAYD,CA1BM;AA4BP,OAAO,MAAOE,OAAO,GAAE,CAAEC,CAAF,EAAKC,CAAL,KAAY;AACjC,MAAID,CAAC,CAACE,IAAF,IAAS,OAAb,EAAsB;AACpB,QAAKF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAhB,EAAsB;AACpB,aAAO,CAAC,CAAR;AACD;;AACD,QAAKF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAhB,EAAsB;AACpB,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GARD,MASI;AACL,WAAO,CAAP;AAEA;AAEA,CAfM;AAiBP,OAAO,MAAMC,gBAAgB,GAAGC,WAAW,IAAI;AAC7C,MAAIC,EAAE,GAAGD,WAAW,CAACE,OAAZ,EAAT;AACA,MAAIC,EAAE,GAAGH,WAAW,CAACI,QAAZ,KAAyB,CAAlC;AACA,MAAIC,IAAI,GAAGL,WAAW,CAACM,WAAZ,EAAX;;AACA,MAAIL,EAAE,GAAG,EAAT,EAAa;AACXA,IAAAA,EAAE,GAAG,MAAMA,EAAX;AACD;;AACD,MAAIE,EAAE,GAAG,EAAT,EAAa;AACXA,IAAAA,EAAE,GAAG,MAAMA,EAAX;AACD;;AACD,SAAOE,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBF,EAA/B;AACD,CAXM","sourcesContent":["export const jsonParseMethod = data => {\n  var listObject = data;\n  let stateList = JSON.parse(listObject.State);\n  let cityList = JSON.parse(listObject.City);\n  let occupationList = JSON.parse(listObject.Occupation);\n  let nativePlaceList = JSON.parse(listObject.NativePlace);\n  let eventList = JSON.parse(listObject.Event);\n  let bloodGroupList = JSON.parse(listObject.BloodGroup);\n  let relationList = JSON.parse(listObject.Relation);\n  let countryList = JSON.parse(listObject.Country);\n  let maritalStatusList = JSON.parse(listObject.MaritalStatus);\n  let zodiacList = JSON.parse(listObject.Zodiac);\n  \n  \n  return {\n    stateList,\n    cityList,\n    occupationList,\n    nativePlaceList,\n    bloodGroupList,\n    relationList,\n    eventList,\n    countryList,\n    maritalStatusList,\n    zodiacList\n  }\n};\n\nexport const  compare =( a, b ) => {\n  if (a.Name !=\"OTHER\") {\n    if ( a.Name < b.Name ){\n      return -1;\n    }\n    if ( a.Name > b.Name ){\n      return 1;\n    }\n    return 0;  \n  }\n  else{\n return 2;\n  \n}\n  \n};\n\nexport const getFormattedDate = dateToFomat => {\n  var dd = dateToFomat.getDate();\n  var mm = dateToFomat.getMonth() + 1;\n  var yyyy = dateToFomat.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};\n "]},"metadata":{},"sourceType":"module"}