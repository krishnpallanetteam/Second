{"ast":null,"code":"var _jsxFileName = \"/home/ulcom/Desktop/CommunityReact/src/model/ModelB.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { modelBCheckBoxToggle, getAllCountryContacts } from '../action/modelAction';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ModelC from './ModelC';\nlet count = 1;\n\nconst styles = theme => ({\n  contact: {\n    padding: theme.spacing(1),\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  dialogTitle: {\n    borderBottom: '1px solid gray',\n    paddingBottom: '5px'\n  },\n  dialogFooter: {\n    marginLeft: '12px',\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass ModelB extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = async event => {\n      let value = event.target.value.trim();\n\n      if (value) {\n        let query = {};\n\n        if (!event.key === 'Enter') {\n          setTimeout(function () {\n            if (isNaN(event.target.value)) {\n              query.names = value;\n              this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n            } else {\n              query.number = value;\n              this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n            }\n          }, 1000);\n        } else {\n          if (isNaN(event.target.value)) {\n            query.names = value;\n            await this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n          } else {\n            query.number = value;\n            await this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n          }\n        }\n      } else if (this.props.usCountryList.length === 0) {\n        await this.props.getAllCountryContacts(1, false, this.props.companyId);\n      }\n    };\n  }\n\n  loadMoreList(page) {\n    var containerElement = document.getElementsByClassName('MuiDialogContent-root')[0];\n    var containerHeight = containerElement.offsetHeight;\n    var scrollHeight = containerElement.scrollHeight;\n    var scrollPosition = containerElement.scrollTop;\n\n    if (scrollHeight - containerHeight === scrollPosition) {\n      count = count + 1;\n\n      try {\n        this.props.getAllCountryContacts(count, true, this.props.companyId);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      await this.props.getAllCountryContacts(1, false, this.props.companyId);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          model_B_toggle = _this$props.model_B_toggle,\n          modelB = _this$props.modelB,\n          buttonAClass = _this$props.buttonAClass,\n          buttonBClass = _this$props.buttonBClass,\n          modelBCheckBoxToggle = _this$props.modelBCheckBoxToggle,\n          classes = _this$props.classes,\n          toggleBothModel = _this$props.toggleBothModel,\n          toggleModelC = _this$props.toggleModelC,\n          modelC = _this$props.modelC;\n    return React.createElement(React.Fragment, null, modelC.model_C && React.createElement(ModelC, {\n      toggleModelC: toggleModelC,\n      modelC: modelC,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      open: modelB.model_B,\n      onClose: model_B_toggle,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      fullWidth: true,\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true // style={{ height: '400px', overflow: \"auto\" }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"flex-end\",\n      className: classes.dialogTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Model B\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"model_B_Search\",\n      label: \"Search\",\n      autoComplete: \"off\",\n      onKeyUp: event => {\n        this.handleChange(event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })))), React.createElement(DialogContent, {\n      onScroll: e => {\n        this.loadMoreList();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, modelB.usCountryList ? React.createElement(Grid, {\n      container: true,\n      className: \"usCountryList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, modelB.usCountryList.length ? modelB.usCountryList.map((item, i) => React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      key: i,\n      onClick: () => toggleModelC(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"flex-start\",\n      alignItems: \"center\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, modelB.checkBox_status ? item.id % 2 === 0 && React.createElement(React.Fragment, null, React.createElement(Grid, {\n      item: true,\n      sm: 3,\n      className: classes.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, `ID : ${item.id}`)), React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      className: classes.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, `PhoneNo : ${item.phone_number}`)), React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      className: classes.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, `CountryId : ${item.country_id}`))) : React.createElement(React.Fragment, null, React.createElement(Grid, {\n      item: true,\n      sm: 3,\n      className: classes.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, `ID : ${item.id}`)), React.createElement(Grid, {\n      item: true,\n      sm: 5,\n      className: classes.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, `PhoneNo : ${item.phone_number}`)), React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      className: classes.contact,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, `CountryId : ${item.country_id}`)))))) : React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"No Record Found\")))) : React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: 55,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })))), React.createElement(DialogActions, {\n      className: classes.dialogFooter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      alignItems: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        checked: modelB.checkBox_status,\n        onChange: (eve, value) => modelBCheckBoxToggle(value),\n        value: \"model_B_checkBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }),\n      label: \"Only even\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      className: buttonBClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"US Contacts\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => toggleBothModel('model_A'),\n      className: buttonAClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"All Contacts\")), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: () => model_B_toggle(),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Close\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usCountryList: state.model.modelB.usCountryList,\n    modelC: state.model.modelC\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    modelBCheckBoxToggle,\n    getAllCountryContacts\n  }, dispatch);\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, mapDispatchToProps)(ModelB));","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/model/ModelB.js"],"names":["React","Component","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","Typography","TextField","Checkbox","FormControlLabel","withStyles","bindActionCreators","connect","modelBCheckBoxToggle","getAllCountryContacts","CircularProgress","ModelC","count","styles","theme","contact","padding","spacing","cursor","dialogTitle","borderBottom","paddingBottom","dialogFooter","marginLeft","marginRight","ModelB","handleChange","event","value","target","trim","query","key","setTimeout","isNaN","names","props","companyId","number","usCountryList","length","loadMoreList","page","containerElement","document","getElementsByClassName","containerHeight","offsetHeight","scrollHeight","scrollPosition","scrollTop","error","console","log","componentDidMount","render","model_B_toggle","modelB","buttonAClass","buttonBClass","classes","toggleBothModel","toggleModelC","modelC","model_C","model_B","e","map","item","i","checkBox_status","id","phone_number","country_id","eve","mapStateToProps","state","model","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  modelBCheckBoxToggle,\n  getAllCountryContacts\n} from '../action/modelAction';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport ModelC from './ModelC';\n\nlet count = 1;\n\nconst styles = theme => ({\n  contact: {\n    padding: theme.spacing(1),\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  dialogTitle: { borderBottom: '1px solid gray', paddingBottom: '5px' },\n  dialogFooter: {\n    marginLeft: '12px',\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass ModelB extends Component {\n\n  handleChange = async event => {\n    let value = event.target.value.trim();\n    if (value) {\n      let query = {};\n      if (!event.key === 'Enter') {\n        setTimeout(function () {\n          if (isNaN(event.target.value)) {\n            query.names = value;\n            this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n          } else {\n            query.number = value;\n            this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n          }\n        }, 1000);\n      } else {\n        if (isNaN(event.target.value)) {\n          query.names = value;\n          await this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n        } else {\n          query.number = value;\n          await this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n        }\n      }\n    } else if (this.props.usCountryList.length === 0) {\n      await this.props.getAllCountryContacts(1, false, this.props.companyId);\n    }\n\n  };\n\n  loadMoreList(page) {\n    var containerElement = (document.getElementsByClassName('MuiDialogContent-root')[0]);\n    var containerHeight = containerElement.offsetHeight;\n    var scrollHeight = containerElement.scrollHeight;\n    var scrollPosition = containerElement.scrollTop;\n\n    if ((scrollHeight - containerHeight) === scrollPosition) {\n      count = count + 1\n      try {\n        this.props.getAllCountryContacts(count, true, this.props.companyId)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n\n  async componentDidMount() {\n    try {\n      await this.props.getAllCountryContacts(1, false, this.props.companyId);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { model_B_toggle, modelB, buttonAClass, buttonBClass, modelBCheckBoxToggle, classes, toggleBothModel, toggleModelC, modelC } = this.props;\n    return (\n      <>\n        {modelC.model_C && <ModelC toggleModelC={toggleModelC} modelC={modelC} />}\n        <Dialog\n          open={modelB.model_B}\n          onClose={model_B_toggle}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n          disableBackdropClick={true}\n          disableEscapeKeyDown={true}\n        // style={{ height: '400px', overflow: \"auto\" }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" className={classes.dialogTitle}>\n              <Grid item>\n                <Typography gutterBottom>Model B</Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  name=\"model_B_Search\"\n                  label=\"Search\"\n                  autoComplete='off'\n                  onKeyUp={(event) => {\n                    this.handleChange(event);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </DialogTitle>\n          <DialogContent onScroll={e => {\n            this.loadMoreList();\n          }}>\n            {modelB.usCountryList ?\n              <Grid container className=\"usCountryList\">\n                {modelB.usCountryList.length ? (modelB.usCountryList.map((item, i) => (<Grid item xs={12} key={i} onClick={() => toggleModelC(item)}>\n                  <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n                    {modelB.checkBox_status ? (item.id % 2 === 0) && (\n                      <>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>) : (<>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>)}\n                  </Grid>\n                </Grid>))) : (\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Grid item>\n                        <Typography>No Record Found</Typography>\n                      </Grid>\n                    </Grid>\n                  )}\n              </Grid> :\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item>\n                  <CircularProgress color=\"primary\" size={55} />\n                </Grid>\n              </Grid>\n            }\n          </DialogContent>\n          <DialogActions className={classes.dialogFooter}>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item xs={3}>\n                <FormControlLabel\n                  control={\n                    <Checkbox checked={modelB.checkBox_status} onChange={(eve, value) => modelBCheckBoxToggle(value)} value=\"model_B_checkBox\" />\n                  }\n                  label=\"Only even\"\n                />\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" className={buttonBClass}>\n                  US Contacts\n         \t\t </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => toggleBothModel('model_A')} className={buttonAClass}>\n                  All Contacts\n          \t\t\t</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => model_B_toggle()} color=\"primary\">\n                  Close\n         \t\t </Button>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </Dialog >\n      </>\n    )\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    usCountryList: state.model.modelB.usCountryList,\n    modelC: state.model.modelC\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    modelBCheckBoxToggle,\n    getAllCountryContacts\n  }, dispatch);\n};\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(ModelB))"]},"metadata":{},"sourceType":"module"}