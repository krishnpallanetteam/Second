{"ast":null,"code":"export const jsonParseMethod = data => {\n  var listObject = data;\n  let stateList = JSON.parse(listObject.State);\n  let cityList = JSON.parse(listObject.City);\n  let occupationList = JSON.parse(listObject.Occupation);\n  let nativePlaceList = JSON.parse(listObject.NativePlace);\n  let eventList = JSON.parse(listObject.Event);\n  let bloodGroupList = JSON.parse(listObject.BloodGroup);\n  let relationList = JSON.parse(listObject.Relation);\n  let countryList = JSON.parse(listObject.Country);\n  let maritalStatusList = JSON.parse(listObject.MaritalStatus);\n  return {\n    stateList,\n    cityList,\n    occupationList,\n    nativePlaceList,\n    bloodGroupList,\n    relationList,\n    eventList,\n    countryList,\n    maritalStatusList\n  };\n};\nexport const compare = (a, b) => {\n  if (a.Name < b.last_nom) {\n    return -1;\n  }\n\n  if (a.last_nom > b.last_nom) {\n    return 1;\n  }\n\n  return 0;\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/utils/commonUtils.js"],"names":["jsonParseMethod","data","listObject","stateList","JSON","parse","State","cityList","City","occupationList","Occupation","nativePlaceList","NativePlace","eventList","Event","bloodGroupList","BloodGroup","relationList","Relation","countryList","Country","maritalStatusList","MaritalStatus","compare","a","b","Name","last_nom"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAGC,IAAI,IAAI;AACrC,MAAIC,UAAU,GAAGD,IAAjB;AACA,MAAIE,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACI,KAAtB,CAAhB;AACA,MAAIC,QAAQ,GAAGH,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACM,IAAtB,CAAf;AACA,MAAIC,cAAc,GAAGL,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACQ,UAAtB,CAArB;AACA,MAAIC,eAAe,GAAGP,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACU,WAAtB,CAAtB;AACA,MAAIC,SAAS,GAAGT,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACY,KAAtB,CAAhB;AACA,MAAIC,cAAc,GAAGX,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACc,UAAtB,CAArB;AACA,MAAIC,YAAY,GAAGb,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACgB,QAAtB,CAAnB;AACA,MAAIC,WAAW,GAAGf,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACkB,OAAtB,CAAlB;AACA,MAAIC,iBAAiB,GAAGjB,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACoB,aAAtB,CAAxB;AACA,SAAO;AACLnB,IAAAA,SADK;AAELI,IAAAA,QAFK;AAGLE,IAAAA,cAHK;AAILE,IAAAA,eAJK;AAKLI,IAAAA,cALK;AAMLE,IAAAA,YANK;AAOLJ,IAAAA,SAPK;AAQLM,IAAAA,WARK;AASLE,IAAAA;AATK,GAAP;AAWD,CAtBM;AAwBP,OAAO,MAAOE,OAAO,GAAE,CAAEC,CAAF,EAAKC,CAAL,KAAY;AACjC,MAAKD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACE,QAAhB,EAA0B;AACxB,WAAO,CAAC,CAAR;AACD;;AACD,MAAKH,CAAC,CAACG,QAAF,GAAaF,CAAC,CAACE,QAApB,EAA8B;AAC5B,WAAO,CAAP;AACD;;AACD,SAAO,CAAP;AACD,CARM","sourcesContent":["export const jsonParseMethod = data => {\n  var listObject = data;\n  let stateList = JSON.parse(listObject.State);\n  let cityList = JSON.parse(listObject.City);\n  let occupationList = JSON.parse(listObject.Occupation);\n  let nativePlaceList = JSON.parse(listObject.NativePlace);\n  let eventList = JSON.parse(listObject.Event);\n  let bloodGroupList = JSON.parse(listObject.BloodGroup);\n  let relationList = JSON.parse(listObject.Relation);\n  let countryList = JSON.parse(listObject.Country);\n  let maritalStatusList = JSON.parse(listObject.MaritalStatus);\n  return {\n    stateList,\n    cityList,\n    occupationList,\n    nativePlaceList,\n    bloodGroupList,\n    relationList,\n    eventList,\n    countryList,\n    maritalStatusList\n  }\n};\n\nexport const  compare =( a, b ) => {\n  if ( a.Name < b.last_nom ){\n    return -1;\n  }\n  if ( a.last_nom > b.last_nom ){\n    return 1;\n  }\n  return 0;\n}\n "]},"metadata":{},"sourceType":"module"}