{"ast":null,"code":"import _regeneratorRuntime from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/ulcom/Desktop/CommunityReact1/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import DialogTitle from'@material-ui/core/DialogTitle';import Typography from'@material-ui/core/Typography';import TextField from'@material-ui/core/TextField';import Checkbox from'@material-ui/core/Checkbox';import FormControlLabel from'@material-ui/core/FormControlLabel';import{withStyles}from'@material-ui/core/styles';import{bindActionCreators}from'redux';import{connect}from'react-redux';import{modelACheckBoxToggle,getAllCountryContacts}from'../action/modelAction';import ModelC from'./ModelC';import CircularProgress from'@material-ui/core/CircularProgress';var count=1;var styles=function styles(theme){return{contact:{padding:theme.spacing(1),'&:hover':{cursor:'pointer'}},dialogTitle:{borderBottom:'1px solid gray',paddingBottom:'5px'},dialogFooter:{marginLeft:'12px',marginRight:theme.spacing(1)}};};var ModelA=/*#__PURE__*/function(_Component){_inherits(ModelA,_Component);function ModelA(){var _getPrototypeOf2;var _this;_classCallCheck(this,ModelA);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ModelA)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleChange=function _callee(event){var value,query;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:value=event.target.value.trim();if(!value){_context.next=18;break;}query={};if(!(!event.key==='Enter')){_context.next=7;break;}setTimeout(function(){if(isNaN(event.target.value)){query.names=value;this.props.getAllCountryContacts(1,false,null,query);}else{query.number=value;this.props.getAllCountryContacts(1,false,null,query);}},1000);_context.next=16;break;case 7:if(!isNaN(event.target.value)){_context.next=13;break;}query.names=value;_context.next=11;return _regeneratorRuntime.awrap(_this.props.getAllCountryContacts(1,false,null,query));case 11:_context.next=16;break;case 13:query.number=value;_context.next=16;return _regeneratorRuntime.awrap(_this.props.getAllCountryContacts(1,false,null,query));case 16:_context.next=21;break;case 18:if(!(_this.props.allCountryList.length===0)){_context.next=21;break;}_context.next=21;return _regeneratorRuntime.awrap(_this.props.getAllCountryContacts(1,false,null));case 21:case\"end\":return _context.stop();}}});};return _this;}_createClass(ModelA,[{key:\"loadMoreList\",value:function loadMoreList(page){var containerElement=document.getElementsByClassName('MuiDialogContent-root')[0];var containerHeight=containerElement.offsetHeight;var scrollHeight=containerElement.scrollHeight;var scrollPosition=containerElement.scrollTop;if(scrollHeight-containerHeight===scrollPosition){count=count+1;try{this.props.getAllCountryContacts(count,true);}catch(error){console.log(error);}}}},{key:\"componentDidMount\",value:function componentDidMount(){return _regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(this.props.getAllCountryContacts());case 3:_context2.next=8;break;case 5:_context2.prev=5;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 8:case\"end\":return _context2.stop();}}},null,this,[[0,5]]);}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,model_A_toggle=_this$props.model_A_toggle,modelA=_this$props.modelA,buttonAClass=_this$props.buttonAClass,buttonBClass=_this$props.buttonBClass,modelACheckBoxToggle=_this$props.modelACheckBoxToggle,classes=_this$props.classes,toggleBothModel=_this$props.toggleBothModel,toggleModelC=_this$props.toggleModelC,modelC=_this$props.modelC;return React.createElement(React.Fragment,null,React.createElement(ModelC,{toggleModelC:toggleModelC,modelC:modelC}),React.createElement(Dialog,{open:modelA.model_A,onClose:model_A_toggle,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\"// maxWidth=\"sm\"\n,fullWidth:true,disableBackdropClick:true,disableEscapeKeyDown:true// style={{ height: '400px', overflow: \"auto\" }}\n},React.createElement(DialogTitle,{id:\"alert-dialog-title\"},React.createElement(Grid,{container:true,direction:\"row\",justify:\"space-between\",alignItems:\"flex-end\",className:classes.dialogTitle},React.createElement(Grid,{item:true},React.createElement(Typography,{gutterBottom:true},\"Model A\")),React.createElement(Grid,{item:true},React.createElement(TextField,{name:\"model_A_Search\",label:\"Search\",autoComplete:\"off\",onKeyUp:function onKeyUp(event){// console.log(event.key, event.target.value);\n_this2.handleChange(event);}})))),React.createElement(DialogContent,{onScroll:function onScroll(e){_this2.loadMoreList();}},modelA.allCountryList?React.createElement(Grid,{container:true,className:\"allCountryList\"},modelA.allCountryList.length?modelA.allCountryList.map(function(item,i){return React.createElement(Grid,{item:true,xs:12,key:i,onClick:function onClick(){return toggleModelC(item);}},React.createElement(Grid,{container:true,justify:\"flex-start\",alignItems:\"center\",spacing:2},modelA.checkBox_status?item.id%2===0&&React.createElement(React.Fragment,null,React.createElement(Grid,{item:true,sm:3,className:classes.contact},React.createElement(Typography,{gutterBottom:true,color:\"textSecondary\"},\"ID : \".concat(item.id))),React.createElement(Grid,{item:true,sm:5,className:classes.contact},React.createElement(Typography,{gutterBottom:true,color:\"textSecondary\"},\"PhoneNo : \".concat(item.phone_number))),React.createElement(Grid,{item:true,sm:4,className:classes.contact},React.createElement(Typography,{gutterBottom:true,color:\"textSecondary\"},\"CountryId : \".concat(item.country_id)))):React.createElement(React.Fragment,null,React.createElement(Grid,{item:true,sm:3,className:classes.contact},React.createElement(Typography,{gutterBottom:true,color:\"textSecondary\"},\"ID : \".concat(item.id))),React.createElement(Grid,{item:true,sm:5,className:classes.contact},React.createElement(Typography,{gutterBottom:true,color:\"textSecondary\"},\"PhoneNo : \".concat(item.phone_number))),React.createElement(Grid,{item:true,sm:4,className:classes.contact},React.createElement(Typography,{gutterBottom:true,color:\"textSecondary\"},\"CountryId : \".concat(item.country_id))))));}):React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\"},React.createElement(Grid,{item:true},React.createElement(Typography,null,\"No Record Found\")))):React.createElement(Grid,{container:true,justify:\"center\",alignItems:\"center\"},React.createElement(Grid,{item:true},React.createElement(CircularProgress,{color:\"primary\",size:55})))),React.createElement(DialogActions,{className:classes.dialogFooter},React.createElement(Grid,{container:true,justify:\"space-between\",alignItems:\"center\"},React.createElement(Grid,{item:true,xs:3},React.createElement(FormControlLabel,{control:React.createElement(Checkbox,{checked:modelA.checkBox_status,onChange:function onChange(eve,value){return modelACheckBoxToggle(value);},value:\"model_A_checkBox\"}),label:\"Only even\"})),React.createElement(Grid,{item:true},React.createElement(Button,{variant:\"contained\",className:buttonAClass},\"All Contacts\")),React.createElement(Grid,{item:true},React.createElement(Button,{variant:\"contained\",onClick:function onClick(){return toggleBothModel('model_B');},className:buttonBClass},\"US Contacts\")),React.createElement(Grid,{item:true},React.createElement(Button,{variant:\"contained\",onClick:function onClick(){return model_A_toggle();},color:\"primary\"},\"Close\"))))));}}]);return ModelA;}(Component);var mapStateToProps=function mapStateToProps(state){return{allCountryList:state.model.modelA.allCountryList,modelC:state.model.modelC// modelB: state.model.modelB,\n};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return bindActionCreators({modelACheckBoxToggle:modelACheckBoxToggle,getAllCountryContacts:getAllCountryContacts},dispatch);};export default withStyles(styles,{withTheme:true})(connect(mapStateToProps,mapDispatchToProps)(ModelA));","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact1/src/model/ModelA.js"],"names":["React","Component","Grid","Button","Dialog","DialogActions","DialogContent","DialogTitle","Typography","TextField","Checkbox","FormControlLabel","withStyles","bindActionCreators","connect","modelACheckBoxToggle","getAllCountryContacts","ModelC","CircularProgress","count","styles","theme","contact","padding","spacing","cursor","dialogTitle","borderBottom","paddingBottom","dialogFooter","marginLeft","marginRight","ModelA","handleChange","event","value","target","trim","query","key","setTimeout","isNaN","names","props","number","allCountryList","length","page","containerElement","document","getElementsByClassName","containerHeight","offsetHeight","scrollHeight","scrollPosition","scrollTop","error","console","log","model_A_toggle","modelA","buttonAClass","buttonBClass","classes","toggleBothModel","toggleModelC","modelC","model_A","e","loadMoreList","map","item","i","checkBox_status","id","phone_number","country_id","eve","mapStateToProps","state","model","mapDispatchToProps","dispatch","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  modelACheckBoxToggle,\n  getAllCountryContacts\n} from '../action/modelAction';\nimport ModelC from './ModelC';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nlet count = 1;\n\nconst styles = theme => ({\n  contact: {\n    padding: theme.spacing(1),\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  dialogTitle: { borderBottom: '1px solid gray', paddingBottom: '5px' },\n  dialogFooter: {\n    marginLeft: '12px',\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass ModelA extends Component {\n\n  handleChange = async event => {\n    let value = event.target.value.trim();\n    if (value) {\n      let query = {};\n      if (!event.key === 'Enter') {\n        setTimeout(function () {\n          if (isNaN(event.target.value)) {\n            query.names = value;\n            this.props.getAllCountryContacts(1, false, null, query);\n          } else {\n            query.number = value;\n            this.props.getAllCountryContacts(1, false, null, query);\n          }\n        }, 1000);\n      } else {\n        if (isNaN(event.target.value)) {\n          query.names = value;\n          await this.props.getAllCountryContacts(1, false, null, query);\n        } else {\n          query.number = value;\n          await this.props.getAllCountryContacts(1, false, null, query);\n        }\n      }\n    } else if (this.props.allCountryList.length === 0) {\n      await this.props.getAllCountryContacts(1, false, null);\n    }\n  };\n\n  loadMoreList(page) {\n    var containerElement = (document.getElementsByClassName('MuiDialogContent-root')[0]);\n    var containerHeight = containerElement.offsetHeight;\n    var scrollHeight = containerElement.scrollHeight;\n    var scrollPosition = containerElement.scrollTop;\n    if ((scrollHeight - containerHeight) === scrollPosition) {\n      count = count + 1\n      try {\n        this.props.getAllCountryContacts(count, true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n\n  async componentDidMount() {\n    try {\n      await this.props.getAllCountryContacts();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { model_A_toggle, modelA, buttonAClass, buttonBClass, modelACheckBoxToggle, classes, toggleBothModel, toggleModelC, modelC } = this.props;\n    return (\n      <>\n        <ModelC toggleModelC={toggleModelC} modelC={modelC} />\n        <Dialog\n          open={modelA.model_A}\n          onClose={model_A_toggle}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          // maxWidth=\"sm\"\n          fullWidth\n          disableBackdropClick={true}\n          disableEscapeKeyDown={true}\n        // style={{ height: '400px', overflow: \"auto\" }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" className={classes.dialogTitle}>\n              <Grid item>\n                <Typography gutterBottom>Model A</Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  name=\"model_A_Search\"\n                  label=\"Search\"\n                  autoComplete='off'\n                  onKeyUp={(event) => {\n                    // console.log(event.key, event.target.value);\n                    this.handleChange(event);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </DialogTitle>\n          <DialogContent onScroll={e => {\n            this.loadMoreList();\n          }}>\n            {modelA.allCountryList ?\n              <Grid container className=\"allCountryList\">\n                {modelA.allCountryList.length ? (modelA.allCountryList.map((item, i) => (<Grid item xs={12} key={i} onClick={() => toggleModelC(item)}>\n                  <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n                    {modelA.checkBox_status ? (item.id % 2 === 0) && (\n                      <>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>) : (<>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>)}\n                  </Grid>\n                </Grid>))) : (\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Grid item>\n                        <Typography>No Record Found</Typography>\n                      </Grid>\n                    </Grid>\n                  )}\n              </Grid> :\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item>\n                  <CircularProgress color=\"primary\" size={55} />\n                </Grid>\n              </Grid>\n            }\n          </DialogContent>\n          <DialogActions className={classes.dialogFooter}>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item xs={3}>\n                <FormControlLabel\n                  control={\n                    <Checkbox checked={modelA.checkBox_status} onChange={(eve, value) => modelACheckBoxToggle(value)} value=\"model_A_checkBox\" />\n                  }\n                  label=\"Only even\"\n                />\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" className={buttonAClass}>\n                  All Contacts\n         \t\t </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => toggleBothModel('model_B')} className={buttonBClass}>\n                  US Contacts\n          \t\t\t</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => model_A_toggle()} color=\"primary\">\n                  Close\n         \t\t </Button>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </Dialog >\n      </>\n    )\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    allCountryList: state.model.modelA.allCountryList,\n    modelC: state.model.modelC\n    // modelB: state.model.modelB,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    modelACheckBoxToggle,\n    getAllCountryContacts\n  }, dispatch);\n};\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(ModelA))"]},"metadata":{},"sourceType":"module"}