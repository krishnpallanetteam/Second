{"ast":null,"code":"import { ADD_MEMBER_DATA_TO_MEMBER_LIST, UPDATE_MEMBER_DATA_TO_MEMBER_LIST, DELETE_MEMBER_DATA_FROM_MEMBER_LIST } from \"./actionTypes\"; // import { jsonParseMethod } from \"../utils/commonUtils\";\n\nexport const addUpdateMemberDataToMemberList = (memberIndex, dataObj) => {\n  console.log(\"action\", memberIndex, dataObj);\n  let data = [{\n    firstName: dataObj.firstName,\n    middleName: dataObj.middleName,\n    lastName: dataObj.lastName,\n    relation: dataObj.relation,\n    bloodGroup: dataObj.bloodGroup,\n    dateOfBirth: dataObj.dateOfBirth,\n    studies: dataObj.studies,\n    mobileNo: dataObj.mobileNo,\n    gender: dataObj.gender,\n    eventMember: dataObj.eventMember,\n    aadhaarNo: dataObj.aadhaarNo,\n    maritalStatus: dataObj.maritalStatus,\n    anniversaryDate: dataObj.maritalStatus.toLowerCase() === \"married\" ? dataObj.anniversaryDate : \"\"\n  }];\n  return (dispatch, getState) => {\n    if (memberIndex === 0) {\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n        payload: {\n          data\n        }\n      });\n    } else {\n      let allstate = getState();\n      let memberList = allstate.member.memberList;\n      memberList[memberIndex] = data[0];\n      dispatch({\n        type: UPDATE_MEMBER_DATA_TO_MEMBER_LIST,\n        payload: {\n          memberList\n        }\n      });\n    }\n  };\n};\nexport const deleteMemberDataToMemberList = memberIndex => {\n  console.log(memberIndex);\n  return (dispatch, getState) => {\n    let allstate = getState();\n    let memberList = allstate.member.memberList;\n    memberList.splice(memberIndex, 1);\n    console.log(\"memberlist\", memberList);\n    dispatch({\n      type: DELETE_MEMBER_DATA_FROM_MEMBER_LIST,\n      payload: {\n        memberList\n      }\n    });\n  };\n};\nexport const saveFamilyMemberData = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamilyMember\",\n        method: \"post\",\n        data: {\n          family: data\n        }\n      });\n\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            draftState.family.basicDetail.familyId = responseData.familyId;\n            draftState.family.basicDetail.firstName = data.firstName;\n            draftState.family.basicDetail.middleName = data.middleName;\n            draftState.family.basicDetail.lastName = data.lastName;\n            draftState.family.basicDetail.email = data.email;\n            draftState.family.basicDetail.mobile = data.mobile;\n            draftState.family.basicDetail.residencePhone = data.residencePhone;\n            draftState.family.basicDetail.officePhone = data.officePhone;\n            draftState.family.basicDetail.nativePlaceId = data.nativePlaceId;\n            draftState.family.basicDetail.occupationId = data.occupationId;\n            draftState.family.basicDetail.dob = data.dob;\n            draftState.family.basicDetail.marriageDate = data.marriageDate;\n            draftState.family.basicDetail.motherName = data.motherName;\n            draftState.family.basicDetail.motherNativePlaceId = data.motherNativePlaceId;\n            draftState.family.basicDetail.eventHead = data.eventHead;\n            draftState.family.basicDetail.aadhaarNo = data.aadhaarNo;\n            draftState.family.basicDetail.otherOccupation = data.otherOccupation;\n            draftState.family.basicDetail.bloodGroup = data.bloodGroup;\n            draftState.family.basicDetail.maritalStatus = data.maritalStatus;\n            draftState.family.basicDetail.zodiac = data.zodiac;\n            draftState.family.residenceDetail.r_Address1 = data.r_Address1;\n            draftState.family.residenceDetail.r_Address2 = data.r_Address2;\n            draftState.family.residenceDetail.r_Address3 = data.r_Address3;\n            draftState.family.residenceDetail.r_CountryId = data.r_CountryId;\n            draftState.family.residenceDetail.r_CityId = data.r_CityId;\n            draftState.family.residenceDetail.r_StateId = data.r_StateId;\n            draftState.family.residenceDetail.r_ZipCode = data.r_StateId;\n            draftState.family.officeDetail.o_Address1 = data.o_Address1;\n            draftState.family.officeDetail.o_Address2 = data.o_Address2;\n            draftState.family.officeDetail.o_Address3 = data.o_Address3;\n            draftState.family.officeDetail.o_CountryId = data.o_CountryId;\n            draftState.family.officeDetail.o_CityId = data.o_CityId;\n            draftState.family.officeDetail.o_StateId = data.o_StateId;\n            draftState.family.officeDetail.o_ZipCode = data.o_ZipCode;\n          });\n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: {\n              data: nextState.family\n            }\n          });\n        }\n\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};","map":{"version":3,"sources":["/home/ulcom/Desktop/CommunityReact/src/action/memberAction.js"],"names":["ADD_MEMBER_DATA_TO_MEMBER_LIST","UPDATE_MEMBER_DATA_TO_MEMBER_LIST","DELETE_MEMBER_DATA_FROM_MEMBER_LIST","addUpdateMemberDataToMemberList","memberIndex","dataObj","console","log","data","firstName","middleName","lastName","relation","bloodGroup","dateOfBirth","studies","mobileNo","gender","eventMember","aadhaarNo","maritalStatus","anniversaryDate","toLowerCase","dispatch","getState","type","payload","allstate","memberList","member","deleteMemberDataToMemberList","splice","saveFamilyMemberData","response","axiosInstance","url","method","family","status","length","responseData","stateData","nextState","produce","draftState","basicDetail","familyId","email","mobile","residencePhone","officePhone","nativePlaceId","occupationId","dob","marriageDate","motherName","motherNativePlaceId","eventHead","otherOccupation","zodiac","residenceDetail","r_Address1","r_Address2","r_Address3","r_CountryId","r_CityId","r_StateId","r_ZipCode","officeDetail","o_Address1","o_Address2","o_Address3","o_CountryId","o_CityId","o_StateId","o_ZipCode","UPDATE_FAMILYID_TO_STORE","error"],"mappings":"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","sourcesContent":["import {\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_MEMBER_DATA_TO_MEMBER_LIST,\n  DELETE_MEMBER_DATA_FROM_MEMBER_LIST\n} from \"./actionTypes\";\n// import { jsonParseMethod } from \"../utils/commonUtils\";\n\nexport const addUpdateMemberDataToMemberList = (memberIndex, dataObj) => {\n  console.log(\"action\", memberIndex, dataObj);\n  let data = [\n    {\n      firstName: dataObj.firstName,\n      middleName: dataObj.middleName,\n      lastName: dataObj.lastName,\n      relation: dataObj.relation,\n      bloodGroup: dataObj.bloodGroup,\n      dateOfBirth: dataObj.dateOfBirth,\n      studies: dataObj.studies,\n      mobileNo: dataObj.mobileNo,\n      gender: dataObj.gender,\n      eventMember: dataObj.eventMember,\n      aadhaarNo: dataObj.aadhaarNo,\n      maritalStatus: dataObj.maritalStatus,\n      anniversaryDate:\n        dataObj.maritalStatus.toLowerCase() === \"married\"\n          ? dataObj.anniversaryDate\n          : \"\"\n    }\n  ];\n  return (dispatch, getState) => {\n    if (memberIndex === 0) {\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n        payload: { data }\n      });\n    } else {\n      let allstate = getState();\n      let memberList = allstate.member.memberList;\n      memberList[memberIndex] = data[0];\n      dispatch({\n        type: UPDATE_MEMBER_DATA_TO_MEMBER_LIST,\n        payload: { memberList }\n      });\n    }\n  };\n};\n\nexport const deleteMemberDataToMemberList = memberIndex => {\n  console.log(memberIndex);\n  return (dispatch, getState) => {\n    let allstate = getState();\n    let memberList = allstate.member.memberList;\n    memberList.splice(memberIndex, 1);\n    console.log(\"memberlist\", memberList);\n    dispatch({\n      type: DELETE_MEMBER_DATA_FROM_MEMBER_LIST,\n      payload: { memberList }\n    });\n  };\n};\n\n\nexport const saveFamilyMemberData = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamilyMember\",\n        method: \"post\",\n        data: { family: data }\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n          draftState.family.basicDetail.familyId = responseData.familyId;\n          draftState.family.basicDetail.firstName= data.firstName;\n          draftState.family.basicDetail.middleName= data.middleName;\n          draftState.family.basicDetail.lastName= data.lastName;\n          draftState.family.basicDetail.email= data.email;\n          draftState.family.basicDetail.mobile= data.mobile;\n          draftState.family.basicDetail.residencePhone= data.residencePhone;\n          draftState.family.basicDetail.officePhone= data.officePhone;\n          draftState.family.basicDetail.nativePlaceId= data.nativePlaceId;\n          draftState.family.basicDetail.occupationId= data.occupationId;\n          draftState.family.basicDetail.dob= data.dob;\n          draftState.family.basicDetail.marriageDate= data.marriageDate;\n          draftState.family.basicDetail.motherName= data.motherName;\n          draftState.family.basicDetail.motherNativePlaceId= data.motherNativePlaceId;\n          draftState.family.basicDetail.eventHead=data.eventHead;\n          draftState.family.basicDetail.aadhaarNo= data.aadhaarNo;\n          draftState.family.basicDetail.otherOccupation=data.otherOccupation;\n          draftState.family.basicDetail.bloodGroup=data.bloodGroup;\n          draftState.family.basicDetail.maritalStatus=data.maritalStatus;\n          draftState.family.basicDetail.zodiac=data.zodiac;\n          draftState.family.residenceDetail.r_Address1= data.r_Address1;\n          draftState.family.residenceDetail.r_Address2= data.r_Address2;\n          draftState.family.residenceDetail.r_Address3= data.r_Address3;\n          draftState.family.residenceDetail.r_CountryId= data.r_CountryId;\n          draftState.family.residenceDetail.r_CityId= data.r_CityId;\n          draftState.family.residenceDetail.r_StateId= data.r_StateId;\n          draftState.family.residenceDetail.r_ZipCode=data.r_StateId;\n          draftState.family.officeDetail.o_Address1= data.o_Address1;\n          draftState.family.officeDetail.o_Address2= data.o_Address2;\n          draftState.family.officeDetail.o_Address3= data.o_Address3;\n          draftState.family.officeDetail.o_CountryId= data.o_CountryId;\n          draftState.family.officeDetail.o_CityId= data.o_CityId;\n          draftState.family.officeDetail.o_StateId= data.o_StateId;\n          draftState.family.officeDetail.o_ZipCode=data.o_ZipCode;\n          });\n       \n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: { data: nextState.family }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\n"]},"metadata":{},"sourceType":"module"}