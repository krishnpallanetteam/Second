{"version":3,"sources":["images/final_gujarati_transparent.png","api/axiosConfig.js","action/modelAction.js","action/actionTypes.js","model/ModelC.js","model/ModelA.js","model/ModelB.js","main.js","utils/commonUtils.js","utils/constants.js","action/familyAction.js","forms/familyForm.js","action/memberAction.js","forms/memberForm.js","model/memberModel.js","utils/renderListComponent.js","forms/members.js","action/daughterAction.js","forms/daughterForm.js","forms/daughters.js","home.js","App.js","initialState.js","reducer/index.js","reducer/modelReducer.js","reducer/familyReducer.js","reducer/memberReducer.js","reducer/dropDownListReducer.js","reducer/daughterReducer.js","configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","axiosInstance","axios","create","baseURL","modelAToggle","status","dispatch","getState","type","payload","modelACheckBoxToggle","getAllCountryContacts","page","loadMore","countryId","params","a","async","queryObj","companyId","Object","keys","length","query","names","number","method","response","data","contactList","allState","list","model","modelB","usCountryList","contacts_ids","forEach","item","push","contacts","modelA","allCountryList","modelBToggle","modelBCheckBoxToggle","modelCToggle","ModelC","this","props","toggleModelC","modelC","classes","Dialog","open","model_C","onClose","aria-labelledby","aria-describedby","maxWidth","disableBackdropClick","disableEscapeKeyDown","dialogBody","DialogTitle","id","Typography","gutterBottom","DialogContent","onScroll","e","loadMoreList","style","borderTop","borderBottom","Grid","container","className","xs","justify","alignItems","spacing","sm","contact","color","phone_number","country_id","DialogActions","Button","variant","onClick","Component","withStyles","theme","padding","cursor","dialogTitle","paddingBottom","withTheme","count","ModelA","handleChange","event","value","target","trim","key","setTimeout","isNaN","containerElement","document","getElementsByClassName","containerHeight","offsetHeight","scrollHeight","scrollTop","error","console","log","model_A_toggle","buttonAClass","buttonBClass","toggleBothModel","model_A","fullWidth","direction","TextField","name","label","autoComplete","onKeyUp","map","i","checkBox_status","CircularProgress","size","dialogFooter","FormControlLabel","control","Checkbox","checked","onChange","eve","marginLeft","marginRight","connect","state","bindActionCreators","ModelB","model_B_toggle","model_B","Main","openModel","history","modelButton_1","modelButton_2","containerPadding","backgroundColor","palette","common","white","fontWeight","jsonParseMethod","listObject","stateList","JSON","parse","State","cityList","City","occupationList","Occupation","nativePlaceList","NativePlace","eventList","Event","bloodGroupList","BloodGroup","relationList","Relation","countryList","Country","maritalStatusList","MaritalStatus","zodiacList","Zodiac","compare","b","Name","getFormattedDate","dateToFomat","dd","getDate","mm","getMonth","getFullYear","PhoneRegExp","ZipCodeRegExp","AdhharRegExp","dummyData","family","familyId","firstName","middleName","lastName","email","mobile","residencePhone","officePhone","nativePlaceId","occupationId","dob","marriageDate","motherName","motherNativePlaceId","eventHead","aadhaarNo","r_Address1","r_Address2","r_Address3","r_CountryId","r_CityId","r_StateId","r_ZipCode","o_Address1","o_Address2","o_Address3","o_CountryId","o_CityId","o_StateId","o_ZipCode","memberList","relation","dateOfBirth","gender","maritalStatus","anniversaryDate","mobileNo","studies","bloodGroup","eventMember","daughterDetail","basicDetail","otherOccupation","residenceDetail","officeDetail","getAllDropDownListData","url","sort","saveFamilyDataToStore","responseData","stateData","nextState","produce","draftState","zodiac","setWholeDataToStoreInitially","daughter","daughterlist","responseResidenceData","ResidenceAddressDetail","responseOfficeData","OfficeAddressDetail","responseMemberData","MemberDetail","familyDetail","FamilyId","FirstName","MiddleName","LastName","Email","Mobile","ResidencePhone","OfficePhone","NativePlaceId","OccupationId","DOB","MarriageDate","MotherName","MotherNativePlaceId","AadhaarNo","OtherOccupation","Address1","Address2","Address3","CountryId","CityId","StateId","ZipCode","FamilyForm","selectedDate","Date","values","touched","errors","isSubmitting","dirty","handleBlur","handleSubmit","handleReset","dropDownListData","tabHandleChange","onSubmit","alignContent","titleContainer","Divider","paddingTop","row","md","paddingRight_16","onBlur","helperText","select","SelectProps","native","disabled","selected","option","Id","Basic","paddingLeft","paddingRight","Autocomplete","freeSolo","options","filter","renderInput","utils","DateFnsUtils","format","KeyboardButtonProps","setFieldValue","undefined","titleContainer2","paddingLeftRight_36","residenceAddress1","marginTop","EnhancedForm","withFormik","enableReinitialize","mapPropsToValues","validationSchema","yup","shape","required","max","matches","getElementById","marriageDateOrg","valuesToSend","then","setSubmitting","displayName","breakpoints","up","down","textAlign","dropDownList","addUpdateMemberDataToMemberList","memberIndex","dataObj","toLowerCase","member","deleteMemberDataToMemberList","splice","saveFamilyMemberData","memberDetail","MemberForm","removeOrResetMember","parentIndex","formIndex","resetForm","FormControl","float","FormLabel","RadioGroup","aria-label","flexDirection","Radio","EnhancedMemberForm","string","MemberModel","memberArrayLength","toggleMemberModel","toggleStatus","paper","grey","RenderListComponent","dataObject","eventName","root","noWrap","toDateString","toString","pdLeftRighty_16","pdLeft_16","Members","saveFamilyMembersDetail","f","dateOfBirthF","anniversaryDateF","index","editDeleteMember","setState","align","Tooltip","TransitionComponent","Zoom","title","listViewContainer","Paper","IconButton","fontSize","maxHeight","overflowY","addUpdateMemberDataToDaughterMemberList","deleteMemberDataToDaughterMemberList","addUpdateDaughterMemberList","deleteDaughterMemberList","DaughterForm","fatherName","Daughters","tabsArray","Home","selectedTab","AppBar","position","header","Toolbar","href","src","logo","paperTabsContainer","Tabs","indicatorColor","Tab","flexGrow","height","tabContainer","width","menuButton","margin","App","exact","path","render","INITIAL_STATE","familyForm","memberForm","daughterForm","allReducers","combineReducers","action","router","routerReducer","createBrowserHistory","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","routerMiddleware","createStore","connectRouter","Boolean","location","hostname","match","ReactDOM","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.809bdee5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/final_gujarati_transparent.880c2d94.png\";","import axios from \"axios\";\n// let token =\n//   \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxNzEiLCJleHAiOjE2MDM3ODM0Mzd9.3ievseHtX0t3roGh7nBuNsiaQeSjfiHWyyx_5GlOLXk\";\n\nexport const axiosInstance = axios.create({\n//   baseURL: \"https://api.dev.pastorsline.com/api/contacts.json\",\n//   headers: { Authorization: token },\n  baseURL: \"http://192.168.0.134:8080/api/\"\n});\n","import { MODEL_A_TOGGLE, MODEL_A_CHECKBOX_STATUS_TOGGLE, MODEL_A_ALL_COUNTRY_DATA, MODEL_B_TOGGLE, MODEL_B_US_COUNTRY_DATA, MODEL_B_CHECKBOX_STATUS_TOGGLE, MODEL_C_TOGGLE } from './actionTypes';\nimport { axiosInstance } from '../api/axiosConfig';\n\nexport const modelAToggle = status => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: MODEL_A_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const modelACheckBoxToggle = status => {\n    return (dispatch) => {\n        dispatch({\n            type: MODEL_A_CHECKBOX_STATUS_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const getAllCountryContacts = (page = 1, loadMore = false, countryId = null, params = null) => {\n    return async (dispatch, getState) => {\n        let queryObj = {\n            companyId: 171,\n            page\n        };\n        if (countryId) queryObj.countryId = countryId;\n        if (params && Object.keys(params).length) {\n            queryObj.query = {};\n            if (params.names) queryObj.query.names = params.names;\n            else if (params.number) queryObj.query.number = params.number;\n        }\n        try {\n            const response = await axiosInstance({\n                method: 'get',\n                params: queryObj\n            });\n            if (response.status === 200) {\n                let data = response.data;\n                let contactList = [];\n                if (countryId) {\n                    if (loadMore) {\n                        let allState = getState();\n                        let list = allState.model.modelB.usCountryList;\n                        contactList = list;\n                    }\n                    data.contacts_ids.forEach(item => {\n                        contactList.push(data.contacts[item]);\n                    });\n                    dispatch({\n                        type: MODEL_B_US_COUNTRY_DATA,\n                        payload: { contactList }\n                    });\n                    return response.data;\n                } else {\n                    if (loadMore) {\n                        let allState = getState();\n                        let list = allState.model.modelA.allCountryList;\n                        contactList = list;\n                    }\n                    data.contacts_ids.forEach(item => {\n                        contactList.push(data.contacts[item]);\n                    });\n                    dispatch({\n                        type: MODEL_A_ALL_COUNTRY_DATA,\n                        payload: { contactList }\n                    });\n                    return response.data;\n                }\n            } else if (response.status === 404) {\n                return response;\n            } else if (response.status === 500) {\n                return response;\n            }\n        } catch (error) {\n            return error\n        }\n    };\n};\n\nexport const modelBToggle = status => {\n    return (dispatch) => {\n        dispatch({\n            type: MODEL_B_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const modelBCheckBoxToggle = status => {\n    return (dispatch) => {\n        dispatch({\n            type: MODEL_B_CHECKBOX_STATUS_TOGGLE,\n            payload: { status }\n        });\n    };\n}\n\nexport const modelCToggle = (status, item = null) => {\n    return (dispatch, getState) => {\n        dispatch({\n            type: MODEL_C_TOGGLE,\n            payload: { status, item }\n        });\n    };\n}\n","export const MODEL_A_TOGGLE = \"MODEL_A_TOGGLE\";\nexport const MODEL_B_TOGGLE = \"MODEL_B_TOGGLE\";\nexport const MODEL_A_ALL_COUNTRY_DATA = \"MODEL_A_ALL_COMPANY_DATA\";\nexport const MODEL_A_ALL_COUNTRY_DATA_SEARCH =\n  \"MODEL_A_ALL_COUNTRY_DATA_SEARCH\";\nexport const MODEL_B_US_COUNTRY_DATA = \"MODEL_B_US_COUNTRY_DATA\";\nexport const MODEL_A_CHECKBOX_STATUS_TOGGLE = \"MODEL_A_CHECKBOX_STATUS_TOGGLE\";\nexport const MODEL_B_CHECKBOX_STATUS_TOGGLE = \"MODEL_B_CHECKBOX_STATUS_TOGGLE\";\nexport const MODEL_B_ALL_COUNTRY_DATA_SEARCH =\n  \"MODEL_B_ALL_COUNTRY_DATA_SEARCH\";\nexport const MODEL_C_TOGGLE = \"MODEL_C_TOGGLE\";\nexport const SAVE_DROPDOWN_LIST_DATA_TO_STORE =\n  \"SAVE_DROPDOWN_LIST_DATA_TO_STORE\";\nexport const SAVE_FAMILY_DATA_TO_STORE = \"SAVE_FAMILY_DATA_TO_STORE\";\nexport const SAVE_MEMBER_DATA_TO_STORE = \"SAVE_MEMBER_DATA_TO_STORE\";\nexport const ADD_MEMBER_DATA_TO_MEMBER_LIST = \"ADD_MEMBER_DATA_TO_MEMBER_LIST\";\nexport const UPDATE_MEMBER_DATA_TO_MEMBER_LIST =\n  \"UPDATE_MEMBER_DATA_TO_MEMBER_LIST\";\nexport const DELETE_MEMBER_DATA_FROM_MEMBER_LIST =\n  \"DELETE_MEMBER_DATA_FROM_MEMBER_LIST\";\nexport const ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST =\n  \"ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST\";\nexport const DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST =\n  \"DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST\";\nexport const ADD_DAUGHTER_MEMBER_LIST = \"ADD_DAUGHTER_MEMBER_LIST\";\nexport const DELETE_DAUGHTER_MEMBER_LIST = \"DELETE_DAUGHTER_MEMBER_LIST\";\nexport const INITIALIZE_WHOLE_DATA = \"INITIALIZE_WHOLE_DATA\";\nexport const UPDATE_FAMILYID_TO_STORE = \"UPDATE_FAMILYID_TO_STORE\";\n// export const SELECT_FAMILY_TAB_NATIVE_PLACE = \"SELECT_FAMILY_TAB_NATIVE_PLACE\";\n// export const SELECT_FAMILY_TAB_PRESENT_PLACE = \"SELECT_FAMILY_TAB_PRESENT_PLACE\";\n// export const SELECT_FAMILY_TAB_OCCUPATION = \"SELECT_FAMILY_TAB_OCCUPATION\";\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\tcontact: {\n\t\tpadding: theme.spacing(1),\n\t\t'&:hover': {\n\t\t\tcursor: 'pointer'\n\t\t}\n\t},\n\tdialogTitle: { borderBottom: '1px solid gray', paddingBottom: '5px' },\n\tdialogBody: {\n\t\t// height: '400px',\n\t\t// overflow: \"auto\",\n\t\t// border: '2px solid #46139f'\n\t}\n});\n\nclass ModelC extends Component {\n\n\trender() {\n\t\tconst { toggleModelC, modelC, classes } = this.props;\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={modelC.model_C}\n\t\t\t\tonClose={toggleModelC}\n\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\tmaxWidth=\"sm\"\n\t\t\t\tdisableBackdropClick={true}\n\t\t\t\tdisableEscapeKeyDown={true}\n\t\t\t\tclasses={{ 'paper': classes.dialogBody }}\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\">\n\t\t\t\t\t<Typography gutterBottom>Model C</Typography>\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent onScroll={e => {\n\t\t\t\t\tthis.loadMoreList();\n\t\t\t\t}} style={{ borderTop: '1px solid gray', borderBottom: '1px solid gray' }}>\n\t\t\t\t\t{modelC.item &&\n\t\t\t\t\t\t<Grid container className=\"usCountryList\">\n\t\t\t\t\t\t\t{Object.keys(modelC.item).length && (<Grid item xs={12}>\n\t\t\t\t\t\t\t\t<Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n\t\t\t\t\t\t\t\t\t<Grid item sm={3} className={classes.contact}>\n\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom color=\"textSecondary\">{`ID : ${modelC.item.id}`}</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item sm={5} className={classes.contact}>\n\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${modelC.item.phone_number}`}</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<Grid item sm={4} className={classes.contact}>\n\t\t\t\t\t\t\t\t\t\t<Typography gutterBottom color=\"textSecondary\">{`CountryId : ${modelC.item.country_id}`}</Typography>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>)}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t}\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button variant=\"contained\" onClick={() => toggleModelC(null)} color=\"primary\">\n\t\t\t\t\t\tClose\n         \t\t </Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog >\n\t\t)\n\t};\n}\nexport default withStyles(styles, { withTheme: true })(ModelC);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  modelACheckBoxToggle,\n  getAllCountryContacts\n} from '../action/modelAction';\nimport ModelC from './ModelC';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nlet count = 1;\n\nconst styles = theme => ({\n  contact: {\n    padding: theme.spacing(1),\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  dialogTitle: { borderBottom: '1px solid gray', paddingBottom: '5px' },\n  dialogFooter: {\n    marginLeft: '12px',\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass ModelA extends Component {\n\n  handleChange = async event => {\n    let value = event.target.value.trim();\n    if (value) {\n      let query = {};\n      if (!event.key === 'Enter') {\n        setTimeout(function () {\n          if (isNaN(event.target.value)) {\n            query.names = value;\n            this.props.getAllCountryContacts(1, false, null, query);\n          } else {\n            query.number = value;\n            this.props.getAllCountryContacts(1, false, null, query);\n          }\n        }, 1000);\n      } else {\n        if (isNaN(event.target.value)) {\n          query.names = value;\n          await this.props.getAllCountryContacts(1, false, null, query);\n        } else {\n          query.number = value;\n          await this.props.getAllCountryContacts(1, false, null, query);\n        }\n      }\n    } else if (this.props.allCountryList.length === 0) {\n      await this.props.getAllCountryContacts(1, false, null);\n    }\n  };\n\n  loadMoreList(page) {\n    var containerElement = (document.getElementsByClassName('MuiDialogContent-root')[0]);\n    var containerHeight = containerElement.offsetHeight;\n    var scrollHeight = containerElement.scrollHeight;\n    var scrollPosition = containerElement.scrollTop;\n    if ((scrollHeight - containerHeight) === scrollPosition) {\n      count = count + 1\n      try {\n        this.props.getAllCountryContacts(count, true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n\n  async componentDidMount() {\n    try {\n      await this.props.getAllCountryContacts();\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { model_A_toggle, modelA, buttonAClass, buttonBClass, modelACheckBoxToggle, classes, toggleBothModel, toggleModelC, modelC } = this.props;\n    return (\n      <>\n        <ModelC toggleModelC={toggleModelC} modelC={modelC} />\n        <Dialog\n          open={modelA.model_A}\n          onClose={model_A_toggle}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          // maxWidth=\"sm\"\n          fullWidth\n          disableBackdropClick={true}\n          disableEscapeKeyDown={true}\n        // style={{ height: '400px', overflow: \"auto\" }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" className={classes.dialogTitle}>\n              <Grid item>\n                <Typography gutterBottom>Model A</Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  name=\"model_A_Search\"\n                  label=\"Search\"\n                  autoComplete='off'\n                  onKeyUp={(event) => {\n                    // console.log(event.key, event.target.value);\n                    this.handleChange(event);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </DialogTitle>\n          <DialogContent onScroll={e => {\n            this.loadMoreList();\n          }}>\n            {modelA.allCountryList ?\n              <Grid container className=\"allCountryList\">\n                {modelA.allCountryList.length ? (modelA.allCountryList.map((item, i) => (<Grid item xs={12} key={i} onClick={() => toggleModelC(item)}>\n                  <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n                    {modelA.checkBox_status ? (item.id % 2 === 0) && (\n                      <>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>) : (<>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>)}\n                  </Grid>\n                </Grid>))) : (\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Grid item>\n                        <Typography>No Record Found</Typography>\n                      </Grid>\n                    </Grid>\n                  )}\n              </Grid> :\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item>\n                  <CircularProgress color=\"primary\" size={55} />\n                </Grid>\n              </Grid>\n            }\n          </DialogContent>\n          <DialogActions className={classes.dialogFooter}>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item xs={3}>\n                <FormControlLabel\n                  control={\n                    <Checkbox checked={modelA.checkBox_status} onChange={(eve, value) => modelACheckBoxToggle(value)} value=\"model_A_checkBox\" />\n                  }\n                  label=\"Only even\"\n                />\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" className={buttonAClass}>\n                  All Contacts\n         \t\t </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => toggleBothModel('model_B')} className={buttonBClass}>\n                  US Contacts\n          \t\t\t</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => model_A_toggle()} color=\"primary\">\n                  Close\n         \t\t </Button>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </Dialog >\n      </>\n    )\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    allCountryList: state.model.modelA.allCountryList,\n    modelC: state.model.modelC\n    // modelB: state.model.modelB,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    modelACheckBoxToggle,\n    getAllCountryContacts\n  }, dispatch);\n};\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(ModelA))","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  modelBCheckBoxToggle,\n  getAllCountryContacts\n} from '../action/modelAction';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport ModelC from './ModelC';\n\nlet count = 1;\n\nconst styles = theme => ({\n  contact: {\n    padding: theme.spacing(1),\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  dialogTitle: { borderBottom: '1px solid gray', paddingBottom: '5px' },\n  dialogFooter: {\n    marginLeft: '12px',\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass ModelB extends Component {\n\n  handleChange = async event => {\n    let value = event.target.value.trim();\n    if (value) {\n      let query = {};\n      if (!event.key === 'Enter') {\n        setTimeout(function () {\n          if (isNaN(event.target.value)) {\n            query.names = value;\n            this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n          } else {\n            query.number = value;\n            this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n          }\n        }, 1000);\n      } else {\n        if (isNaN(event.target.value)) {\n          query.names = value;\n          await this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n        } else {\n          query.number = value;\n          await this.props.getAllCountryContacts(1, false, this.props.companyId, query);\n        }\n      }\n    } else if (this.props.usCountryList.length === 0) {\n      await this.props.getAllCountryContacts(1, false, this.props.companyId);\n    }\n\n  };\n\n  loadMoreList(page) {\n    var containerElement = (document.getElementsByClassName('MuiDialogContent-root')[0]);\n    var containerHeight = containerElement.offsetHeight;\n    var scrollHeight = containerElement.scrollHeight;\n    var scrollPosition = containerElement.scrollTop;\n\n    if ((scrollHeight - containerHeight) === scrollPosition) {\n      count = count + 1\n      try {\n        this.props.getAllCountryContacts(count, true, this.props.companyId)\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  }\n\n  async componentDidMount() {\n    try {\n      await this.props.getAllCountryContacts(1, false, this.props.companyId);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const { model_B_toggle, modelB, buttonAClass, buttonBClass, modelBCheckBoxToggle, classes, toggleBothModel, toggleModelC, modelC } = this.props;\n    return (\n      <>\n        {modelC.model_C && <ModelC toggleModelC={toggleModelC} modelC={modelC} />}\n        <Dialog\n          open={modelB.model_B}\n          onClose={model_B_toggle}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          fullWidth\n          disableBackdropClick={true}\n          disableEscapeKeyDown={true}\n        // style={{ height: '400px', overflow: \"auto\" }}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-end\" className={classes.dialogTitle}>\n              <Grid item>\n                <Typography gutterBottom>Model B</Typography>\n              </Grid>\n              <Grid item>\n                <TextField\n                  name=\"model_B_Search\"\n                  label=\"Search\"\n                  autoComplete='off'\n                  onKeyUp={(event) => {\n                    this.handleChange(event);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </DialogTitle>\n          <DialogContent onScroll={e => {\n            this.loadMoreList();\n          }}>\n            {modelB.usCountryList ?\n              <Grid container className=\"usCountryList\">\n                {modelB.usCountryList.length ? (modelB.usCountryList.map((item, i) => (<Grid item xs={12} key={i} onClick={() => toggleModelC(item)}>\n                  <Grid container justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n                    {modelB.checkBox_status ? (item.id % 2 === 0) && (\n                      <>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>) : (<>\n                        <Grid item sm={3} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`ID : ${item.id}`}</Typography>\n                        </Grid>\n                        <Grid item sm={5} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`PhoneNo : ${item.phone_number}`}</Typography>\n                        </Grid>\n                        <Grid item sm={4} className={classes.contact}>\n                          <Typography gutterBottom color=\"textSecondary\">{`CountryId : ${item.country_id}`}</Typography>\n                        </Grid>\n                      </>)}\n                  </Grid>\n                </Grid>))) : (\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Grid item>\n                        <Typography>No Record Found</Typography>\n                      </Grid>\n                    </Grid>\n                  )}\n              </Grid> :\n              <Grid container justify=\"center\" alignItems=\"center\">\n                <Grid item>\n                  <CircularProgress color=\"primary\" size={55} />\n                </Grid>\n              </Grid>\n            }\n          </DialogContent>\n          <DialogActions className={classes.dialogFooter}>\n            <Grid container justify=\"space-between\" alignItems=\"center\">\n              <Grid item xs={3}>\n                <FormControlLabel\n                  control={\n                    <Checkbox checked={modelB.checkBox_status} onChange={(eve, value) => modelBCheckBoxToggle(value)} value=\"model_B_checkBox\" />\n                  }\n                  label=\"Only even\"\n                />\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" className={buttonBClass}>\n                  US Contacts\n         \t\t </Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => toggleBothModel('model_A')} className={buttonAClass}>\n                  All Contacts\n          \t\t\t</Button>\n              </Grid>\n              <Grid item>\n                <Button variant=\"contained\" onClick={() => model_B_toggle()} color=\"primary\">\n                  Close\n         \t\t </Button>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </Dialog >\n      </>\n    )\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    usCountryList: state.model.modelB.usCountryList,\n    modelC: state.model.modelC\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    modelBCheckBoxToggle,\n    getAllCountryContacts\n  }, dispatch);\n};\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(ModelB))","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n\tmodelAToggle, modelBToggle, modelBCheckBoxToggle, modelCToggle\n} from './action/modelAction';\nimport ModelA from './model/ModelA';\nimport ModelB from './model/ModelB';\n\nconst companyId = 226;\nconst styles = theme => ({\n\tcontainerPadding: {\n\t\tpadding: theme.spacing(1)\n\t},\n\tmodelButton_1: {\n\t\tbackgroundColor: '#46139f',\n\t\tcolor: theme.palette.common.white,\n\t\tfontWeight: 500\n\t},\n\tmodelButton_2: {\n\t\tbackgroundColor: '#ff7f50',\n\t\tcolor: theme.palette.common.white,\n\t\tfontWeight: 500\n\t}\n});\n\nclass Main extends Component {\n\topenModel = type => {\n\t\tif (type === 'model_A') this.model_A_toggle();\n\t\telse this.model_B_toggle();\n\t}\n\n\tmodel_A_toggle = () => {\n\t\tconst { modelAToggle, modelA } = this.props;\n\t\tmodelAToggle(!modelA.model_A);\n\t\tif (modelA.model_A) this.props.history.push('/');\n\t\telse this.props.history.push('model_A');\n\t}\n\n\tmodel_B_toggle = () => {\n\t\tconst { modelBToggle, modelB } = this.props;\n\t\tmodelBToggle(!modelB.model_B);\n\t\tif (modelB.model_B) this.props.history.push('/');\n\t\telse this.props.history.push('model_B');\n\t}\n\n\ttoggleBothModel = type => {\n\t\tconst { modelAToggle, modelA, modelBToggle, modelB } = this.props;\n\t\tif (type === 'model_A') {\n\t\t\tmodelBToggle(!modelB.model_B);\n\t\t\tthis.model_A_toggle();\n\t\t} else {\n\t\t\tmodelAToggle(!modelA.model_A);\n\t\t\tthis.model_B_toggle();\n\t\t}\n\t}\n\n\ttoggleModelC = (item) => {\n\t\tconst { modelCToggle, modelC } = this.props;\n\t\tmodelC.model_C ? modelCToggle(!modelC.model_C, null) : modelCToggle(!modelC.model_C, item);\n\t}\n\n\n\trender() {\n\t\tconst { classes, modelA, modelB } = this.props;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{modelA.model_A &&\n\t\t\t\t\t<ModelA\n\t\t\t\t\t\tmodel_A_toggle={this.model_A_toggle}\n\t\t\t\t\t\tbuttonAClass={classes.modelButton_1}\n\t\t\t\t\t\tbuttonBClass={classes.modelButton_2}\n\t\t\t\t\t\tmodelA={modelA}\n\t\t\t\t\t\tcompanyId={companyId}\n\t\t\t\t\t\ttoggleBothModel={this.toggleBothModel}\n\t\t\t\t\t\ttoggleModelC={this.toggleModelC}\n\t\t\t\t\t/>}\n\t\t\t\t{modelB.model_B &&\n\t\t\t\t\t<ModelB\n\t\t\t\t\t\tmodel_B_toggle={this.model_B_toggle}\n\t\t\t\t\t\tbuttonAClass={classes.modelButton_1}\n\t\t\t\t\t\tbuttonBClass={classes.modelButton_2}\n\t\t\t\t\t\tmodelB={modelB}\n\t\t\t\t\t\tcompanyId={companyId}\n\t\t\t\t\t\ttoggleBothModel={this.toggleBothModel}\n\t\t\t\t\t\ttoggleModelC={this.toggleModelC}\n\t\t\t\t\t/>}\n\t\t\t\t<Grid container justify=\"center\" alignItems=\"center\">\n\t\t\t\t\t<Grid item className={classes.containerPadding}>\n\t\t\t\t\t\t<Button variant=\"contained\" className={classes.modelButton_1} onClick={() => this.openModel('model_A')}>\n\t\t\t\t\t\t\tButton A\n              </Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item className={classes.containerPadding}>\n\t\t\t\t\t\t<Button variant=\"contained\" className={classes.modelButton_2} onClick={() => this.openModel('model_B')}>\n\t\t\t\t\t\t\tButton B\n              </Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tmodelA: state.model.modelA,\n\t\tmodelB: state.model.modelB,\n\t\tmodelC: state.model.modelC\n\t};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn bindActionCreators({\n\t\tmodelAToggle,\n\t\tmodelBToggle,\n\t\tmodelBCheckBoxToggle,\n\t\tmodelCToggle\n\t}, dispatch);\n};\n\nexport default withStyles(styles, { withTheme: true })(connect(mapStateToProps, mapDispatchToProps)(Main));\n","export const jsonParseMethod = data => {\n  var listObject = data;\n  let stateList = JSON.parse(listObject.State);\n  let cityList = JSON.parse(listObject.City);\n  let occupationList = JSON.parse(listObject.Occupation);\n  let nativePlaceList = JSON.parse(listObject.NativePlace);\n  let eventList = JSON.parse(listObject.Event);\n  let bloodGroupList = JSON.parse(listObject.BloodGroup);\n  let relationList = JSON.parse(listObject.Relation);\n  let countryList = JSON.parse(listObject.Country);\n  let maritalStatusList = JSON.parse(listObject.MaritalStatus);\n  let zodiacList = JSON.parse(listObject.Zodiac);\n  \n  \n  return {\n    stateList,\n    cityList,\n    occupationList,\n    nativePlaceList,\n    bloodGroupList,\n    relationList,\n    eventList,\n    countryList,\n    maritalStatusList,\n    zodiacList\n  }\n};\n\nexport const  compare =( a, b ) => {\n  if (a.Name !=\"OTHER\") {\n    if ( a.Name < b.Name ){\n      return -1;\n    }\n    if ( a.Name > b.Name ){\n      return 1;\n    }\n    return 0;  \n  }\n  else{\n return 2;\n  \n}\n  \n};\n\nexport const getFormattedDate = dateToFomat => {\n  var dd = dateToFomat.getDate();\n  var mm = dateToFomat.getMonth() + 1;\n  var yyyy = dateToFomat.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};\n ","export const PhoneRegExp = /^\\d{10}$/;\nexport const ZipCodeRegExp = /^\\d{6}$/;\nexport const AdhharRegExp = /^\\d{12}$/;\nexport const dummyData = [\n  {\n    family: {\n      familyId: 0,\n      firstName: \"john\",\n      middleName: \"\",\n      lastName: \"shah\",\n      email: \"johnshah@email.com\",\n      mobile: \"1234567891\",\n      residencePhone: \"1111111111\",\n      officePhone: \"\",\n      nativePlaceId: \"1\",\n      occupationId: \"1\",\n      dob: \"1970/01/01\",\n      marriageDate: \"2020/01/01\",\n      motherName: \"johnmother\",\n      motherNativePlaceId: \"1\",\n      eventHead: [],\n      aadhaarNo: \"123456789123\",\n      r_Address1: \"head residense address 1\",\n      r_Address2: \"residence address 1\",\n      r_Address3: \"residence address 1\",\n      r_CountryId: \"1\",\n      r_CityId: \"1\",\n      r_StateId: \"1\",\n      r_ZipCode: \"313001\",\n      o_Address1: \"head office address 1\",\n      o_Address2: \"office address 2\",\n      o_Address3: \"office address 3\",\n      o_CountryId: \"1\",\n      o_CityId: \"1\",\n      o_StateId: \"1\",\n      o_ZipCode: \"313001\"\n    },\n    memberList: [\n      {\n        firstName: \"nick\",\n        middleName: \"\",\n        lastName: \"shah\",\n        relation: \"Son\",\n        dateOfBirth: \"Mon Jan 01 1990 00:00:00 GMT+0530 (India Standard Time)\",\n        gender: \"male\",\n        maritalStatus: \"Single\",\n        anniversaryDate:\n          \"Thu Jan 01 1970 00:00:00 GMT+0530 (India Standard Time)\",\n        mobileNo: \"1234567891\",\n        studies: \"engineering\",\n        bloodGroup: \"A+\",\n        eventMember: true,\n        aadhaarNo: \"123456789123\"\n      },\n      {\n        firstName: \"george\",\n        middleName: \"\",\n        lastName: \"shah\",\n        relation: \"Son\",\n        bloodGroup: \"A+\",\n        dateOfBirth: \"Mon Jan 01 1990 00:00:00 GMT+0530 (India Standard Time)\",\n        studies: \"medical\",\n        mobileNo: \"1234567891\",\n        gender: \"male\",\n        eventMember: false,\n        aadhaarNo: \"123456789112\",\n        maritalStatus: \"Single\",\n        anniversaryDate: \"\"\n      }\n    ],\n    daughterDetail: [\n      {\n        basicDetail: {\n          familyId: 0,\n          firstName: \"rihana\",\n          middleName: \"\",\n          lastName: \"shah\",\n          email: \"rihanashs@gmail.com\",\n          mobile: \"1234567891\",\n          residencePhone: \"\",\n          officePhone: \"\",\n          nativePlaceId: \"1\",\n          occupationId: \"2\",\n          dob: \"Mon Jan 01 1990 00:00:00 GMT+0530 (India Standard Time)\",\n          marriageDate:\n            \"Wed Jan 01 2020 00:00:00 GMT+0530 (India Standard Time)\",\n          motherName: \"shakira\",\n          motherNativePlaceId: \"1\",\n          eventHead: false,\n          aadhaarNo: \"123456789123\",\n          otherOccupation: \"\"\n        },\n        residenceDetail: {\n          r_Address1: \"daughter address 1\",\n          r_Address2: \"\",\n          r_Address3: \"\",\n          r_CountryId: \"1\",\n          r_CityId: \"1\",\n          r_StateId: \"1\",\n          r_ZipCode: \"313001\"\n        },\n        officeDetail: {\n          o_Address1: \"daughter office address 2\",\n          o_Address2: \"\",\n          o_Address3: \"\",\n          o_CountryId: \"1\",\n          o_CityId: \"1\",\n          o_StateId: \"1\",\n          o_ZipCode: \"313001\"\n        },\n        memberList: [\n          {\n            firstName: \"david\",\n            middleName: \"\",\n            lastName: \"shah\",\n            relation: \"Brother\",\n            bloodGroup: \"A+\",\n            dateOfBirth:\n              \"Tue Jan 01 1991 00:00:00 GMT+0530 (India Standard Time)\",\n            studies: \"arts\",\n            mobileNo: \"1234567890\",\n            gender: \"male\",\n            eventMember: true,\n            maritalStatus: \"Single\",\n            aadhaarNo: \"123456712222\",\n            anniversaryDate: \"\"\n          }\n        ]\n      }\n    ]\n  }\n];\n\n\n\n","import { axiosInstance } from \"../api/axiosConfig\";\nimport {\n  SAVE_FAMILY_DATA_TO_STORE,\n  SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n  ADD_DAUGHTER_MEMBER_LIST,\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_FAMILYID_TO_STORE\n} from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport produce from \"immer\";\nimport { dummyData } from \"../utils/constants\";\nimport {compare } from \"../utils/commonUtils\";\n\nexport const getAllDropDownListData = () => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyFormDetail\",\n        method: \"post\"\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          // console.log(response);\n          let data = jsonParseMethod(response.data[0][0]);\n          // console.log(data);\n          data.cityList = data.cityList.sort(compare);\n          data.stateList = data.stateList.sort(compare);\n          data.countryList = data.countryList.sort(compare);\n          data.nativePlaceList = data.nativePlaceList.sort(compare);\n          data.occupationList = data.occupationList.sort(compare);\n          data.relationList = data.relationList.sort(compare);\n          data.maritalStatusList = data.maritalStatusList.sort(compare);\n          data.zodiacList = data.zodiacList.sort(compare);\n          dispatch({\n            type: SAVE_DROPDOWN_LIST_DATA_TO_STORE,\n            payload: { data }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\n// export const saveFamilyDataToStore = data => {\n//   // console.log(\"action\", data);\n//   return dispatch => {\n//     dispatch({\n//       type: SAVE_FAMILY_DATA_TO_STORE,\n//       payload: { data }\n//     });\n//   };\n// };\n\nexport const saveFamilyDataToStore = (type, data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"saveFamily\",\n        method: \"post\",\n        data: { family: data }\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n          console.log(response);\n          let responseData = response.data[0][0];\n          console.log(data);\n          var stateData = getState();\n          const nextState = produce(stateData, draftState => {\n          draftState.family.basicDetail.familyId = responseData.familyId;\n          draftState.family.basicDetail.firstName= data.firstName;\n          draftState.family.basicDetail.middleName= data.middleName;\n          draftState.family.basicDetail.lastName= data.lastName;\n          draftState.family.basicDetail.email= data.email;\n          draftState.family.basicDetail.mobile= data.mobile;\n          draftState.family.basicDetail.residencePhone= data.residencePhone;\n          draftState.family.basicDetail.officePhone= data.officePhone;\n          draftState.family.basicDetail.nativePlaceId= data.nativePlaceId;\n          draftState.family.basicDetail.occupationId= data.occupationId;\n          draftState.family.basicDetail.dob= data.dob;\n          draftState.family.basicDetail.marriageDate= data.marriageDate;\n          draftState.family.basicDetail.motherName= data.motherName;\n          draftState.family.basicDetail.motherNativePlaceId= data.motherNativePlaceId;\n          draftState.family.basicDetail.eventHead=data.eventHead;\n          draftState.family.basicDetail.aadhaarNo= data.aadhaarNo;\n          draftState.family.basicDetail.otherOccupation=data.otherOccupation;\n          draftState.family.basicDetail.bloodGroup=data.bloodGroup;\n          draftState.family.basicDetail.maritalStatus=data.maritalStatus;\n          draftState.family.basicDetail.zodiac=data.zodiac;\n          draftState.family.residenceDetail.r_Address1= data.r_Address1;\n          draftState.family.residenceDetail.r_Address2= data.r_Address2;\n          draftState.family.residenceDetail.r_Address3= data.r_Address3;\n          draftState.family.residenceDetail.r_CountryId= data.r_CountryId;\n          draftState.family.residenceDetail.r_CityId= data.r_CityId;\n          draftState.family.residenceDetail.r_StateId= data.r_StateId;\n          draftState.family.residenceDetail.r_ZipCode=data.r_StateId;\n          draftState.family.officeDetail.o_Address1= data.o_Address1;\n          draftState.family.officeDetail.o_Address2= data.o_Address2;\n          draftState.family.officeDetail.o_Address3= data.o_Address3;\n          draftState.family.officeDetail.o_CountryId= data.o_CountryId;\n          draftState.family.officeDetail.o_CityId= data.o_CityId;\n          draftState.family.officeDetail.o_StateId= data.o_StateId;\n          draftState.family.officeDetail.o_ZipCode=data.o_ZipCode;\n          });\n       \n          dispatch({\n            type: UPDATE_FAMILYID_TO_STORE,\n            payload: { data: nextState.family }\n          });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\nexport const setWholeDataToStoreInitially = mobile => {\n  console.log(\"********************************\", mobile);\n  return async (dispatch, getState) => {\n    try {\n      const response = await axiosInstance({\n        url: \"getFamilyByMobile\",\n        method: \"post\",\n        data: { mobile: mobile }\n      });\n      if (response.status === 200) {\n        \n        if (response.data.length > 1 && response.data[0]) {\n        \n          \n          let stateData = getState();\n          const nextState = produce(stateData, draftState => {\n            dummyData[0].daughterDetail.map(item =>\n              draftState.daughter.daughterlist.push(item)\n            );\n          });\n          \n          var responseData = response.data[0][0];\n          var responseResidenceData = response.data[0][0].ResidenceAddressDetail ? (JSON.parse(response.data[0][0].ResidenceAddressDetail))[0]:{} ;\n          var responseOfficeData = response.data[0][0].OfficeAddressDetail ? (JSON.parse(response.data[0][0].OfficeAddressDetail))[0] : {};\n          var responseMemberData = response.data[0][0].MemberDetail ? (JSON.parse(response.data[0][0].MemberDetail)) : {} ;\n          var familyDetail = {\n            familyId: responseData.FamilyId,\n            firstName: responseData.FirstName,\n            middleName: responseData.MiddleName,\n            lastName: responseData.LastName,\n            email: responseData.Email,\n            mobile: responseData.Mobile,\n            residencePhone: responseData.ResidencePhone,\n            officePhone: responseData.OfficePhone,\n            nativePlaceId: responseData.NativePlaceId,\n            occupationId: responseData.OccupationId,\n            dob: responseData.DOB,\n            marriageDate: responseData.MarriageDate,\n            motherName: responseData.MotherName,\n            motherNativePlaceId: responseData.MotherNativePlaceId,\n            eventHead: [],\n            aadhaarNo: responseData.AadhaarNo,\n            otherOccupation: responseData.OtherOccupation,\n            bloodGroup: responseData.BloodGroup,\n            maritalStatus: responseData.MaritalStatus,\n            zodiac: responseData.Zodiac,\n            r_Address1: responseResidenceData.Address1,\n            r_Address2: responseResidenceData.Address2,\n            r_Address3: responseResidenceData.Address3,\n            r_CountryId: responseResidenceData.CountryId,\n            r_CityId: responseResidenceData.CityId,\n            r_StateId: responseResidenceData.StateId,\n            r_ZipCode: responseResidenceData.ZipCode,\n            o_Address1: responseOfficeData.Address1,\n            o_Address2: responseOfficeData.Address2,\n            o_Address3: responseOfficeData.Address3,\n            o_CountryId: responseOfficeData.CountryId,\n            o_CityId: responseOfficeData.CityId,\n            o_StateId: responseOfficeData.StateId,\n            o_ZipCode: responseOfficeData.ZipCode\n          };\n          if (familyDetail.mobile ==mobile) {\n           debugger;\n            dispatch({\n              type: SAVE_FAMILY_DATA_TO_STORE,\n              payload: { data: familyDetail }\n            });\n            dispatch({\n              type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n              payload: { data: (responseMemberData.length ==0 ?dummyData[0].memberList : responseMemberData) }\n            });\n            dispatch({\n              type: ADD_DAUGHTER_MEMBER_LIST,\n              payload: { data: nextState.daughter.daughterlist }\n            });\n          }\n         \n        }\n        else\n        {\n          // dispatch({\n          //   type: SAVE_FAMILY_DATA_TO_STORE,\n          //   payload: { data: dummyData[0].family }\n          // });\n          // dispatch({\n          //   type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n          //   payload: { data: dummyData[0].memberList }\n          // });\n          // dispatch({\n          //   type: ADD_DAUGHTER_MEMBER_LIST,\n          //   payload: { data: dummyData[0].daughterDetail}\n          // });\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withFormik } from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport produce from \"immer\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { Typography, Divider, Button, withStyles } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport {\n  saveFamilyDataToStore,\n  getAllDropDownListData,\n  setWholeDataToStoreInitially\n} from \"../action/familyAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { PhoneRegExp, ZipCodeRegExp, AdhharRegExp } from \"../utils/constants\";\nimport { dummyData } from \"../utils/constants\";\nimport \"../utils/style.css\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst useStyles = theme => ({\n  titleContainer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(5)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    textAlign: \"left\"\n  },\n\n  titleContainer2: {\n    [theme.breakpoints.down(\"up\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(3),\n      textAlign: \"left\",\n      marginTop: theme.spacing(3)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(2),\n      textAlign: \"left\",\n      marginTop: theme.spacing(2)\n    }\n  },\n  row: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  },\n  paddingRight_16: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: theme.spacing(2)\n    }\n  },\n  paddingLeftRight_36: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: theme.spacing(6),\n      paddingLeft: theme.spacing(6)\n    }\n  }\n});\n\nclass FamilyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date()\n    };\n  }\n\n  async componentDidMount() {\n    let resp = await this.props.getAllDropDownListData();\n    // if (resp) await this.props.setWholeDataToStoreInitially(dummyData);\n  }\n  render() {\n    console.log(this.props);\n    const {\n      classes,\n      theme,\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = this.props;\n    const { selectedDate } = this.state;\n    const { tabHandleChange, dropDownListData } = this.props;\n    return (\n      <form onSubmit={handleSubmit} >\n        <Grid container alignItems=\"center\">\n          <Grid item xs={12}>\n            <Grid container alignContent=\"center\" alignItems=\"center\">\n              <Grid item xs={12} className={classes.titleContainer}>\n                <Typography gutterBottom color=\"primary\" alignContent=\"center\">\n                  BASIC DETAIL / મૂળભૂત વિગતો\n                </Typography>\n                <Divider />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  // spacing={3}\n                  className={classes.row}\n                  justify=\"space-evenly\"\n                  style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                >\n                  <Grid\n                    item\n                    sm={6}\n                    xs={11}\n                    md={3}\n                    className={classes.paddingRight_16}\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"mobile\"\n                      label=\"MOBILE NUMBER / મોબાઇલ નંબર\"\n                      value={values.mobile}\n                      autoComplete=\"1\"\n                      onChange={handleChange}\n                      onBlur={event => {\n                        if (this.props.values.mobile) {\n                          if (this.props.values.mobile.length == 10) {\n                            this.props.setWholeDataToStoreInitially(\n                              this.props.values.mobile\n                            );\n                          }\n                        }\n                      }}\n                      error={!!touched.mobile && !!errors.mobile}\n                      helperText={touched.mobile && errors.mobile}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    sm={6}\n                    xs={11}\n                    md={3}\n                    className={classes.paddingRight_16}\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"FIRST NAME / પ્રથમ નામ\"\n                      value={values.firstName}\n                      autoComplete=\"1\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.firstName && !!errors.firstName}\n                      helperText={touched.firstName && errors.firstName}\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    sm={6}\n                    xs={11}\n                    md={3}\n                    className={classes.paddingRight_16}\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"middleName\"\n                      label=\"MIDDLE NAME / પિતાનું નામ\"\n                      value={values.middleName}\n                      onChange={handleChange}\n                      autoComplete=\"1\"\n                      onBlur={handleBlur}\n                      error={!!touched.middleName && !!errors.middleName}\n                      helperText={touched.middleName && errors.middleName}\n                    />\n                  </Grid>\n                  <Grid item sm={6} xs={11} md={3}>\n                    <TextField\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"LAST NAME / છેલ્લું નામ\"\n                      autoComplete=\"1\"\n                      value={values.lastName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.lastName && !!errors.lastName}\n                      helperText={touched.lastName && errors.lastName}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid\n                  container\n                  // spacing={3}\n                  className={classes.row}\n                  justify=\"space-evenly\"\n                  style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"nativePlaceId\"\n                      select\n                      label=\"NATIVE PLACE / વતન\"\n                      autoComplete=\"1\"\n                      value={values.nativePlaceId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.nativePlaceId && !!errors.nativePlaceId}\n                      helperText={touched.nativePlaceId && errors.nativePlaceId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.nativePlaceList &&\n                        dropDownListData.nativePlaceList.length > 0 &&\n                        dropDownListData.nativePlaceList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"motherName\"\n                      label=\"MOTHER NAME / માતાનું નામ\"\n                      value={values.motherName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      autoComplete=\"1\"\n                      error={!!touched.motherName && !!errors.motherName}\n                      helperText={touched.motherName && errors.motherName}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"motherNativePlaceId\"\n                      select\n                      autoComplete=\"1\"\n                      label=\"MOTHER NATIVE PLACE / માતાનું પ્રાકૃતિક સ્થળ\"\n                      value={values.motherNativePlaceId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={\n                        !!touched.motherNativePlaceId &&\n                        !!errors.motherNativePlaceId\n                      }\n                      helperText={\n                        touched.motherNativePlaceId &&\n                        errors.motherNativePlaceId\n                      }\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.nativePlaceList &&\n                        dropDownListData.nativePlaceList.length > 0 &&\n                        dropDownListData.nativePlaceList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11}>\n                    <TextField\n                      fullWidth\n                      id=\"occupationId\"\n                      select\n                      label=\"OCCUPATION / વ્યવસાય\"\n                      value={values.occupationId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      autoComplete=\"1\"\n                      error={!!touched.occupationId && !!errors.occupationId}\n                      helperText={touched.occupationId && errors.occupationId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.occupationList &&\n                        dropDownListData.occupationList.length > 0 &&\n                        dropDownListData.occupationList.map(\n                          option =>\n                            option.Basic == 1 && (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            )\n                        )}\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              {this.props.values.occupationId !== \"0\" ? null : (\n                <Grid\n                  item\n                  xs={12}\n                  style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                >\n                  <Grid\n                    container\n                    alignItems=\"center\"\n                    style={{\n                      paddingLeft: theme.spacing(6),\n                      paddingRight: theme.spacing(6)\n                    }}\n                  >\n                    <Grid item sm={3} xs={11}>\n                      {/* <TextField\n                        id=\"otherOccupation\"\n                        label=\"Other Occupation / અન્ય વ્યવસાય\"\n                        fullWidth\n                        autoComplete=\"1\"\n                        value={values.otherOccupation}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        error={\n                          !!touched.otherOccupation && !!errors.otherOccupation\n                        }\n                        helperText={\n                          touched.otherOccupation && errors.otherOccupation\n                        }\n                      /> */}\n                      <Autocomplete\n                        id=\"free-solo-demo\"\n                        freeSolo\n                        options={dropDownListData.occupationList\n                          .filter(item => item.Basic == 0)\n                          .map(option => option.Name)}\n                        renderInput={params => (\n                          <TextField\n                            {...params}\n                            id=\"otherOccupation\"\n                            label=\"Other Occupation / અન્ય વ્યવસાય\"\n                            fullWidth\n                            autoComplete=\"1\"\n                            value={values.otherOccupation}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.otherOccupation &&\n                              !!errors.otherOccupation\n                            }\n                            helperText={\n                              touched.otherOccupation && errors.otherOccupation\n                            }\n                          />\n                        )}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n              )}\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  // spacing={3}\n                  className={classes.row}\n                  \n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      id=\"email\"\n                      label=\"EMAIL / ઇમેઇલ\"\n                      fullWidth\n                      value={values.email}\n                      autoComplete=\"1\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.email && !!errors.email}\n                      helperText={touched.email && errors.email}\n                    />\n                  </Grid>\n\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <KeyboardDatePicker\n                        fullWidth\n                        id=\"dob\"\n                        autoComplete=\"1\"\n                        format=\"MM/dd/yyyy\"\n                        label=\"DATE OF BIRTH / જન્મ તારીખ\"\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\"\n                        }}\n                        value={values.dob}\n                        onChange={(event, value) => {\n                          console.log(event, value);\n                          this.props.setFieldValue(\"dob\", new Date(value));\n                        }}\n                        onBlur={handleBlur}\n                        error={!!touched.dob && !!errors.dob}\n                        helperText={touched.dob && errors.dob}\n                        // value={new Date().getDate()}\n                        // onChange={}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id={\"maritalStatus\"}\n                      select\n                      label=\"MARITAL STATUS / વૈવાહિક સ્થિતિ\"\n                      value={values.maritalStatus}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.maritalStatus && !!errors.maritalStatus}\n                      helperText={touched.maritalStatus && errors.maritalStatus}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected value={undefined} />\n                      {dropDownListData.maritalStatusList &&\n                        dropDownListData.maritalStatusList.length &&\n                        dropDownListData.maritalStatusList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n\n                  {(this.props.values.maritalStatus == \"SINGLE\") ||\n                  (this.props.values.maritalStatus == \"WIDOW\") ? null : (\n                    <Grid\n                      item\n                      sm={3}\n                      xs={11}\n                      className={classes.paddingRight_16}\n                    >\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          fullWidth\n                          id=\"marriageDate\"\n                          format=\"MM/dd/yyyy\"\n                          label=\"MARRIAGE DATE / લગ્ન તારીખ\"\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                          value={values.marriageDate}\n                          autoComplete=\"1\"\n                          onChange={(event, value) => {\n                            console.log(event, value);\n                            this.props.setFieldValue(\n                              \"marriageDate\",\n                              new Date(value)\n                            );\n                          }}\n                          onBlur={handleBlur}\n                          error={\n                            !!touched.marriageDate && !!errors.marriageDate\n                          }\n                          helperText={\n                            touched.marriageDate && errors.marriageDate\n                          }\n                        />\n                      </MuiPickersUtilsProvider>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid container className={classes.row}>\n                  <Grid item sm={3} xs={11}>\n                    <TextField\n                      fullWidth\n                      id=\"residencePhone\"\n                      label=\"RESIDENCE PHONE / નિવાસ ફોન\"\n                      value={values.residencePhone}\n                      onChange={handleChange}\n                      autoComplete=\"1\"\n                      onBlur={handleBlur}\n                      error={\n                        !!touched.residencePhone && !!errors.residencePhone\n                      }\n                      helperText={\n                        touched.residencePhone && errors.residencePhone\n                      }\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"officePhone\"\n                      label=\"OFFICE PHONE / .ફિસ ફોન\"\n                      value={values.officePhone}\n                      onChange={handleChange}\n                      autoComplete=\"1\"\n                      onBlur={handleBlur}\n                      error={!!touched.officePhone && !!errors.officePhone}\n                      helperText={touched.officePhone && errors.officePhone}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"aadhaarNo\"\n                      label=\"AADHAAR NO / આધાર નં\"\n                      value={values.aadhaarNo}\n                      onChange={handleChange}\n                      autoComplete=\"1\"\n                      onBlur={handleBlur}\n                      error={!!touched.aadhaarNo && !!errors.aadhaarNo}\n                      helperText={touched.aadhaarNo && errors.aadhaarNo}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"bloodGroup\"\n                      select\n                      label=\"BLOOD GROUP / રક્ત જૂથ\"\n                      value={values.bloodGroup}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.bloodGroup && !!errors.bloodGroup}\n                      helperText={touched.bloodGroup && errors.bloodGroup}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.bloodGroupList &&\n                        dropDownListData.bloodGroupList.length &&\n                        dropDownListData.bloodGroupList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  style={{\n                    paddingLeft: theme.spacing(6),\n                    paddingRight: theme.spacing(6)\n                  }}\n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"zodiac\"\n                      select\n                      label=\"ZODIAC / રશી\"\n                      value={values.zodiac}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.zodiac && !!errors.zodiac}\n                      helperText={touched.zodiac && errors.zodiac}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.zodiacList &&\n                        dropDownListData.zodiacList.length &&\n                        dropDownListData.zodiacList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} style={{ paddingTop: theme.spacing(2) }}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs={12} className={classes.titleContainer2}>\n                <Typography gutterBottom color=\"primary\">\n                  RESIDENCE ADDRESS / રહેઠાણ સરનામું\n                </Typography>\n                <Divider />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  className={classes.paddingLeftRight_36}\n                  justify=\"space-evenly\"\n                  // style={{\n                  //   paddingLeft: theme.spacing(6),\n                  //   paddingRight: theme.spacing(6)\n                  // }}\n                >\n                  <Grid item sm={12} xs={11}>\n                    <TextField\n                      id=\"r_Address1\"\n                      label=\"ADDRESS / સરનામું\"\n                      fullWidth\n                      value={values.r_Address1}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      autoComplete=\"1\"\n                      error={!!touched.r_Address1 && !!errors.r_Address1}\n                      helperText={\n                        touched.residenceAddress1 && errors.residenceAddress1\n                      }\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justify=\"space-evenly\"\n                  className={classes.paddingLeftRight_36}\n                  // style={{\n                  //   paddingLeft: theme.spacing(6),\n                  //   paddingRight: theme.spacing(6)\n                  // }}\n                >\n                  <Grid item sm={12} xs={11}>\n                    <TextField\n                      id=\"r_Address2\"\n                      fullWidth\n                      value={values.r_Address2}\n                      autoComplete=\"1\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.r_Address2 && !!errors.r_Address2}\n                      helperText={touched.r_Address2 && errors.r_Address2}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  className={classes.paddingLeftRight_36}\n                  justify=\"space-evenly\"\n                  // style={{\n                  //   paddingLeft: theme.spacing(6),\n                  //   paddingRight: theme.spacing(6)\n                  // }}\n                >\n                  <Grid item sm={12} xs={11}>\n                    <TextField\n                      id=\"r_Address3\"\n                      fullWidth\n                      autoComplete=\"1\"\n                      value={values.r_Address3}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.r_Address3 && !!errors.r_Address3}\n                      helperText={touched.r_Address3 && errors.r_Address3}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  // spacing={3}\n                  className={classes.row}\n                  justify=\"space-evenly\"\n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"r_CountryId\"\n                      select\n                      label=\"COUNTRY / દેશ\"\n                      value={values.r_CountryId}\n                      autoComplete=\"1\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.r_CountryId && !!errors.r_CountryId}\n                      helperText={touched.r_CountryId && errors.r_CountryId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.countryList &&\n                        dropDownListData.countryList.length > 0 &&\n                        dropDownListData.countryList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"r_StateId\"\n                      select\n                      autoComplete=\"1\"\n                      label=\"STATE / રાજ્ય\"\n                      value={values.r_StateId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.r_StateId && !!errors.r_StateId}\n                      helperText={touched.r_StateId && errors.r_StateId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.stateList &&\n                        dropDownListData.stateList.length > 0 &&\n                        dropDownListData.stateList.map(\n                          option =>\n                            values.r_CountryId == option.CountryId && (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            )\n                        )}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"r_CityId\"\n                      select\n                      autoComplete=\"1\"\n                      label=\"CITY / શહેર\"\n                      value={values.r_CityId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.r_CityId && !!errors.r_CityId}\n                      helperText={touched.r_CityId && errors.r_CityId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.cityList &&\n                        dropDownListData.cityList.length > 0 &&\n                        dropDownListData.cityList.map(\n                          option =>\n                            values.r_StateId == option.StateId && (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            )\n                        )}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11}>\n                    <TextField\n                      id=\"r_ZipCode\"\n                      label=\"ZIPCODE/PINCODE / પિન કોડ\"\n                      fullWidth\n                      autoComplete=\"1\"\n                      value={values.r_ZipCode}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.r_ZipCode && !!errors.r_ZipCode}\n                      helperText={touched.r_ZipCode && errors.r_ZipCode}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid item xs={12} style={{ paddingTop: theme.spacing(2) }}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs={12} className={classes.titleContainer2}>\n                <Typography gutterBottom color=\"primary\">\n                  OFFICE ADDRESS / .ફિસનું સરનામું\n                </Typography>\n                <Divider />\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  justify=\"space-evenly\"\n                  // style={{\n                  //   paddingLeft: theme.spacing(6),\n                  //   paddingRight: theme.spacing(6)\n                  // }}\n                  className={classes.paddingLeftRight_36}\n                >\n                  <Grid item sm={12} xs={11}>\n                    <TextField\n                      id=\"o_Address1\"\n                      label=\"ADDRESS / સરનામું\"\n                      fullWidth\n                      autoComplete=\"1\"\n                      value={values.o_Address1}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.o_Address1 && !!errors.o_Address1}\n                      helperText={touched.o_Address1 && errors.o_Address1}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  className={classes.paddingLeftRight_36}\n                  justify=\"space-evenly\"\n                  // style={{\n                  //   paddingLeft: theme.spacing(6),\n                  //   paddingRight: theme.spacing(6)\n                  // }}\n                >\n                  <Grid item sm={12} xs={11}>\n                    <TextField\n                      id=\"o_Address2\"\n                      fullWidth\n                      value={values.o_Address2}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      autoComplete=\"1\"\n                      error={!!touched.o_Address2 && !!errors.o_Address2}\n                      helperText={touched.o_Address2 && errors.o_Address2}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  className={classes.paddingLeftRight_36}\n                  justify=\"space-evenly\"\n                  // style={{\n                  //   paddingLeft: theme.spacing(6),\n                  //   paddingRight: theme.spacing(6)\n                  // }}\n                >\n                  <Grid item sm={12} xs={11}>\n                    <TextField\n                      id=\"o_Address3\"\n                      fullWidth\n                      value={values.o_Address3}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      autoComplete=\"1\"\n                      error={!!touched.o_Address3 && !!errors.o_Address3}\n                      helperText={touched.o_Address3 && errors.o_Address3}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  // spacing={3}\n                  className={classes.row}\n                  justify=\"space-evenly\"\n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"o_CountryId\"\n                      select\n                      label=\"Country / દેશ\"\n                      value={values.o_CountryId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      autoComplete=\"1\"\n                      error={!!touched.o_CountryId && !!errors.o_CountryId}\n                      helperText={touched.o_CountryId && errors.o_CountryId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.countryList &&\n                        dropDownListData.countryList.length > 0 &&\n                        dropDownListData.countryList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"o_StateId\"\n                      select\n                      autoComplete=\"1\"\n                      label=\"STATE / રાજ્ય\"\n                      value={values.o_StateId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.o_StateId && !!errors.o_StateId}\n                      helperText={touched.o_StateId && errors.o_StateId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.stateList &&\n                        dropDownListData.stateList.length > 0 &&\n                        dropDownListData.stateList.map(\n                          option =>\n                            values.o_CountryId == option.CountryId && (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            )\n                        )}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"o_CityId\"\n                      select\n                      autoComplete=\"1\"\n                      label=\"CITY / શહેર\"\n                      value={values.o_CityId}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.o_CityId && !!errors.o_CityId}\n                      helperText={touched.o_CityId && errors.o_CityId}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.cityList &&\n                        dropDownListData.cityList.length > 0 &&\n                        dropDownListData.cityList.map(\n                          option =>\n                            values.o_StateId == option.StateId && (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            )\n                        )}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11}>\n                    <TextField\n                      id=\"o_ZipCode\"\n                      label=\"ZIPCODE/PINCODE / પિન કોડ\"\n                      fullWidth\n                      autoComplete=\"1\"\n                      value={values.o_ZipCode}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.o_ZipCode && !!errors.o_ZipCode}\n                      helperText={touched.o_ZipCode && errors.o_ZipCode}\n                    />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            style={{\n              paddingTop: \"8px\",\n              paddingBottom: \"8px\",\n              paddingLeft: theme.spacing(4)\n            }}\n          >\n            <Grid container alignItems=\"center\" justify=\"flex-start\">\n              {dropDownListData.eventList &&\n                dropDownListData.eventList.length > 0 &&\n                dropDownListData.eventList && (\n                  <Grid item style={{ paddingLeft: \"16px\" }}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          id=\"eventHead\"\n                          checked={values.eventHead}\n                          onChange={handleChange}\n                          color=\"primary\"\n                        />\n                      }\n                      label={dropDownListData.eventList[0].Name}\n                    />\n                  </Grid>\n                )}\n            </Grid>\n          </Grid>\n\n          <Grid item xs={12} style={{ marginTop: theme.spacing(2) }}>\n            <Grid container justify=\"center\" alignItems=\"center\">\n              <Grid item style={{ padding: \"8px\" }}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  // onClick={() => handleSubmit()}\n                >\n                  Save\n                </Button>\n              </Grid>\n              {/* <Grid item style={{ padding: \"8px\" }}>\n                <Button color=\"primary\" onClick={() => this.props.resetForm()}>\n                  Reset\n                </Button>\n              </Grid> */}\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n}\n\nconst EnhancedForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    familyId: props.basicDetail.familyId,\n    firstName: props.basicDetail.firstName,\n    middleName: props.basicDetail.middleName,\n    lastName: props.basicDetail.lastName,\n    email: props.basicDetail.email,\n    mobile: props.basicDetail.mobile,\n    residencePhone: props.basicDetail.residencePhone,\n    officePhone: props.basicDetail.officePhone,\n    nativePlaceId: props.basicDetail.nativePlaceId,\n    occupationId: props.basicDetail.occupationId,\n    dob: props.basicDetail.dob ? new Date(props.basicDetail.dob) : null,\n    marriageDate: props.basicDetail.marriageDate\n      ? new Date(props.basicDetail.marriageDate)\n      : null,\n    motherName: props.basicDetail.motherName,\n    motherNativePlaceId: props.basicDetail.motherNativePlaceId,\n    r_Address1: props.residenceDetail.r_Address1,\n    r_Address2: props.residenceDetail.r_Address2,\n    r_Address3: props.residenceDetail.r_Address3,\n    r_CountryId: props.residenceDetail.r_CountryId,\n    r_CityId: props.residenceDetail.r_CityId,\n    r_StateId: props.residenceDetail.r_StateId,\n    r_ZipCode: props.residenceDetail.r_ZipCode,\n    o_Address1: props.officeDetail.o_Address1,\n    o_Address2: props.officeDetail.o_Address2,\n    o_Address3: props.officeDetail.o_Address3,\n    o_CountryId: props.officeDetail.o_CountryId,\n    o_CityId: props.officeDetail.o_CityId,\n    o_StateId: props.officeDetail.o_StateId,\n    o_ZipCode: props.officeDetail.o_ZipCode,\n    eventHead: props.officeDetail.eventHead,\n    aadhaarNo: props.basicDetail.aadhaarNo,\n    otherOccupation: props.basicDetail.otherOccupation,\n    bloodGroup: props.basicDetail.bloodGroup,\n    maritalStatus: props.basicDetail.maritalStatus,\n    zodiac: props.basicDetail.zodiac\n  }),\n\n  validationSchema: props => {\n    console.log(props);\n    console.log(\"validate Schema called\");\n    return yup.object().shape({\n      firstName: yup\n        .string()\n        .required(\"First Name is required\")\n        .max(50, \"First Name cannot exceed then 50 character\"),\n      middleName: yup\n        .string()\n        .max(50, \"Middle Name cannot exceed then 50 character\"),\n      lastName: yup\n        .string()\n        .required(\"Last Name is required\")\n        .max(50, \"Last Name cannot exceed then 50 character\"),\n      email: yup\n        .string()\n        .required(\"Email Name is required\")\n        .email(\"please enter valid email\"),\n      mobile: yup\n        .string()\n        .required(\"Mobile No is required\")\n        .matches(PhoneRegExp, \"Mobile Number must be 10 digits long\"),\n      residencePhone: yup\n        .string()\n        .matches(PhoneRegExp, \"Phone Number must be 10 digits long\"),\n      officePhone: yup\n        .string()\n        .matches(PhoneRegExp, \"Phone Number must be 10 digits long\"),\n      nativePlaceId: yup.string().required(\"Please select Native Place\"),\n      occupationId: yup.string().required(\"Please select Occupation\"),\n      dob: yup.date().required(\"Date of Birth is required\"),\n      marriageDate: yup.date().required(\"Marriage Date is required\"),\n      motherName: yup\n        .string()\n        .required(\"Mother Name is required\")\n        .max(50, \"Mother Name cannot exceed then 50 character\"),\n      motherNativePlaceId: yup\n        .string()\n        .required(\"Please select Mother Native Place\"),\n      r_Address1: yup.string().required(\"Address is required\"),\n      r_Address2: yup.string(),\n      r_Address3: yup.string(),\n      r_ZipCode: yup\n        .string()\n        .required(\"Zipcode/Pincode is required\")\n        .matches(ZipCodeRegExp, \"Zip Code must be 10 digits long\"),\n      r_CountryId: yup.string().required(\"Country is required\"),\n      r_StateId: yup.string().required(\"State is required\"),\n      r_CityId: yup.string().required(\"City is required\"),\n      o_Address1: yup.string().required(\"Address is required\"),\n      o_Address2: yup.string(),\n      o_Address3: yup.string(),\n      o_ZipCode: yup\n        .string()\n        .required(\"Zipcode/Pincode is required\")\n        .matches(ZipCodeRegExp, \"Zip Code must be 10 digits long\"),\n      o_CountryId: yup.string().required(\"Country is required\"),\n      o_StateId: yup.string().required(\"State is required\"),\n      o_CityId: yup.string().required(\"City is required\"),\n      aadhaarNo: yup\n        .string()\n        .matches(AdhharRegExp, \"Aadhar no must be 12 digits long\"),\n      otherOccupation:\n        document.getElementById(\"occupationId\").value == \"0\" &&\n        yup.string().required(\"Other occupation is required\"),\n      bloodGroup: yup.string().required(\"Blood Group is required\"),\n      maritalStatus: yup.string().required(\"Marital Status is required\"),\n      zodiac: yup.string().required(\"Zodiac is required\")\n    });\n  },\n  handleSubmit: (values, props) => {\n    debugger;\n    console.log(values, props);\n    var dobOrg = values.dob;\n    var marriageDateOrg = values.marriageDate;\n    values.dob = getFormattedDate(values.dob);\n    if (marriageDateOrg) {\n      values.marriageDate = getFormattedDate(values.marriageDate);\n    }\n\n    var valuesToSend = produce(values, draftState => {});\n    props.props.saveFamilyDataToStore(\"family\", valuesToSend).then(item => {\n      props.props.tabHandleChange(null, 1);\n    });\n    props.setSubmitting(false);\n    // setTimeout(() => {\n    //   alert(JSON.stringify(values, null, 2));\n    //   setSubmitting(false);\n    // }, 1000);\n    // dispatch(addProduct(values));\n  },\n  displayName: \"BasicForm\"\n})(FamilyForm);\n\nconst getFormattedDate = dateToFomat => {\n  var dd = dateToFomat.getDate();\n  var mm = dateToFomat.getMonth() + 1;\n  var yyyy = dateToFomat.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    basicDetail: state.family.basicDetail,\n    residenceDetail: state.family.residenceDetail,\n    officeDetail: state.family.officeDetail,\n    dropDownListData: state.dropDownList.dropDownListData\n      ? state.dropDownList.dropDownListData\n      : {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      saveFamilyDataToStore,\n      getAllDropDownListData,\n      setWholeDataToStoreInitially\n    },\n    dispatch\n  );\n};\n\nexport default withStyles(useStyles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(EnhancedForm)\n);\n// export default withStyles(useStyles, { withTheme: true })(FamilyForm);\n","import {\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_MEMBER_DATA_TO_MEMBER_LIST,\n  DELETE_MEMBER_DATA_FROM_MEMBER_LIST\n} from \"./actionTypes\";\nimport { axiosInstance } from \"../api/axiosConfig\";\nimport produce from \"immer\";\n\nexport const addUpdateMemberDataToMemberList = (memberIndex, dataObj) => {\n  console.log(\"action\", memberIndex, dataObj);\n  let data = [\n    {\n      firstName: dataObj.firstName,\n      middleName: dataObj.middleName,\n      lastName: dataObj.lastName,\n      relation: dataObj.relation,\n      bloodGroup: dataObj.bloodGroup,\n      dateOfBirth: dataObj.dateOfBirth,\n      studies: dataObj.studies,\n      mobileNo: dataObj.mobileNo,\n      gender: dataObj.gender,\n      eventMember: dataObj.eventMember,\n      aadhaarNo: dataObj.aadhaarNo,\n      maritalStatus: dataObj.maritalStatus,\n      zodiac: dataObj.zodiac,\n      anniversaryDate:\n        dataObj.maritalStatus.toLowerCase() === \"married\"\n          ? dataObj.anniversaryDate\n          : \"\"\n    }\n  ];\n  return (dispatch, getState) => {\n    if (memberIndex === 0) {\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_MEMBER_LIST,\n        payload: { data }\n      });\n    } else {\n      let allstate = getState();\n      let memberList = allstate.member.memberList;\n      memberList[memberIndex] = data[0];\n      dispatch({\n        type: UPDATE_MEMBER_DATA_TO_MEMBER_LIST,\n        payload: { memberList }\n      });\n    }\n  };\n};\n\nexport const deleteMemberDataToMemberList = memberIndex => {\n  console.log(memberIndex);\n  return (dispatch, getState) => {\n    let allstate = getState();\n    let memberList = allstate.member.memberList;\n    memberList.splice(memberIndex, 1);\n    console.log(\"memberlist\", memberList);\n    dispatch({\n      type: DELETE_MEMBER_DATA_FROM_MEMBER_LIST,\n      payload: { memberList }\n    });\n  };\n};\n\n\nexport const saveFamilyMemberData = (data) => {\n  // console.log(\"action\", data);\n  return async (dispatch, getState) => {\n    try {\n\n      let stateData = getState();\n      var familyDetail = {};\n      familyDetail.familyId = stateData.family.basicDetail.familyId;\n      familyDetail.memberDetail = data; \n      const response = await axiosInstance({\n        url: \"saveFamilyMember\",\n        method: \"post\",\n        data: { family: familyDetail }\n      });\n      if (response.status === 200) {\n        if (response.data.length > 1 && response.data[0]) {\n            console.log(response);\n            let responseData = response.data[0][0];\n        }\n        return response.data;\n      } else if (response.status === 404) {\n        return response;\n      } else if (response.status === 500) {\n        return response;\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n};\n\n","import React, { Component } from \"react\";\nimport { withFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { Typography, Divider, Button, withStyles } from \"@material-ui/core\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { PhoneRegExp, ZipCodeRegExp, AdhharRegExp } from \"../utils/constants\";\nconst useStyles = theme => ({\n  titleContainer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(5)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    textAlign: \"left\"\n  },\n  row: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  },\n  paddingRight_16: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: theme.spacing(2)\n    }\n  }\n});\n\nclass MemberForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date()\n    };\n  }\n\n  removeOrResetMember = () => {\n    const {\n      parentIndex,\n      formIndex,\n      deleteMemberDataToMemberList,\n      resetForm\n    } = this.props;\n    if (formIndex === 0) resetForm();\n    else\n      parentIndex !== undefined\n        ? deleteMemberDataToMemberList(parentIndex, formIndex)\n        : deleteMemberDataToMemberList(formIndex);\n  };\n  render() {\n    console.log(this.props);\n    const {\n      parentIndex,\n      dataObj,\n      formIndex,\n      dropDownListData,\n      classes,\n      theme,\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = this.props;\n    const { selectedDate } = this.state;\n    return (\n      <form autoComplete=\"off\" onSubmit={handleSubmit} id={`form_${formIndex}`}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={12}>\n            <Grid container alignItems=\"center\">\n              <Grid item xs={12} className={classes.titleContainer}>\n                <Typography gutterBottom color=\"primary\">\n                  Members Details\n                </Typography>\n                <Divider />\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  // spacing={3}\n\n                  className={classes.row}\n                  justify=\"space-evenly\"\n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"FIRST NAME / પ્રથમ નામ\"\n                      value={values.firstName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.firstName && !!errors.firstName}\n                      helperText={touched.firstName && errors.firstName}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"middleName\"\n                      label=\"MIDDLE NAME / પિતાનું નામ\"\n                      value={values.middleName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.middleName && !!errors.middleName}\n                      helperText={touched.middleName && errors.middleName}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"LAST NAME / છેલ્લું નામ\"\n                      value={values.lastName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.lastName && !!errors.lastName}\n                      helperText={touched.lastName && errors.lastName}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11}>\n                    <TextField\n                      fullWidth\n                      id=\"relation\"\n                      select\n                      label=\"RELATION / સંબંધ\"\n                      value={values.relation}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.relation && !!errors.relation}\n                      helperText={touched.relation && errors.relation}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.relationList &&\n                        dropDownListData.relationList.length &&\n                        dropDownListData.relationList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid container className={classes.row} >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <KeyboardDatePicker\n                        fullWidth\n                        id=\"dateOfBirth\"\n                        format=\"MM/dd/yyyy\"\n                        label=\"DATE OF BIRTH / જન્મ તારીખ\"\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\"\n                        }}\n                        value={values.dateOfBirth}\n                        onChange={(event, value) => {\n                          this.props.setFieldValue(\n                            \"dateOfBirth\",\n                            new Date(value)\n                          );\n                        }}\n                        onBlur={handleBlur}\n                        error={!!touched.dateOfBirth && !!errors.dateOfBirth}\n                        helperText={touched.dateOfBirth && errors.dateOfBirth}\n                      />\n                    </MuiPickersUtilsProvider>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <FormControl\n                      required\n                      style={{ alignItems: \"flex-start\", float: \"left\" }}\n                    >\n                      <FormLabel>Gender</FormLabel>\n                      {/* import FormHelperText from '@material-ui/core/FormHelperText'; */}\n                      <RadioGroup\n                        aria-label=\"GENDER / લિંગ\"\n                        id=\"gender\"\n                        style={{ flexDirection: \"row\" }}\n                        value={values.gender}\n                        onChange={eve => {\n                          this.props.setFieldValue(\"gender\", eve.target.value);\n                        }}\n                        // onBlur={handleBlur}\n                        error={touched.gender && errors.gender}\n                        // helperText={touched.gender && errors.gender}\n                      >\n                        <FormControlLabel\n                          id=\"female\"\n                          value=\"female\"\n                          control={<Radio />}\n                          label=\"Female\"\n                          color=\"primary\"\n                        />\n                        <FormControlLabel\n                          id=\"male\"\n                          value=\"male\"\n                          control={<Radio />}\n                          label=\"Male\"\n                        />\n                        {/* <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" /> */}\n                      </RadioGroup>\n                    </FormControl>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id={\"maritalStatus\"}\n                      select\n                      label=\"MARITAL STATUS / વૈવાહિક સ્થિતિ\"\n                      value={values.maritalStatus}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.maritalStatus && !!errors.maritalStatus}\n                      helperText={touched.maritalStatus && errors.maritalStatus}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected value={undefined} />\n                      {dropDownListData.maritalStatusList &&\n                        dropDownListData.maritalStatusList.length &&\n                        dropDownListData.maritalStatusList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                  {this.props.values.maritalStatus !== \"Married\" ? null : (\n                    <Grid\n                      item\n                      sm={3}\n                      xs={11}\n                      className={classes.paddingRight_16}\n                    >\n                      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                          fullWidth\n                          id=\"anniversaryDate\"\n                          format=\"MM/dd/yyyy\"\n                          label=\"ANNIVERSARY DATE / વર્ષગાંઠની તારીખ\"\n                          KeyboardButtonProps={{\n                            \"aria-label\": \"change date\"\n                          }}\n                          value={values.anniversaryDate}\n                          onChange={(event, value) => {\n                            this.props.setFieldValue(\n                              \"anniversary\",\n                              new Date(value)\n                            );\n                          }}\n                          onBlur={handleBlur}\n                          error={\n                            !!touched.anniversaryDate &&\n                            !!errors.anniversaryDate\n                          }\n                          helperText={\n                            touched.anniversaryDate && errors.anniversaryDate\n                          }\n                        />\n                      </MuiPickersUtilsProvider>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                xs={12}\n                style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n              >\n                <Grid\n                  container\n                  alignItems=\"center\"\n                  // spacing={3}\n                  className={classes.row}\n                >\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"mobileNo\"\n                      label=\"MOBILE NUMBER / મોબાઇલ નંબર\"\n                      value={values.mobileNo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.mobileNo && !!errors.mobileNo}\n                      helperText={touched.mobileNo && errors.mobileNo}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"bloodGroup\"\n                      select\n                      label=\"BLOOD GROUP / રક્ત જૂથ\"\n                      value={values.bloodGroup}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.bloodGroup && !!errors.bloodGroup}\n                      helperText={touched.bloodGroup && errors.bloodGroup}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.bloodGroupList &&\n                        dropDownListData.bloodGroupList.length &&\n                        dropDownListData.bloodGroupList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"aadhaarNo\"\n                      label=\"AADHAAR NO / આધાર નં\"\n                      value={values.aadhaarNo}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.aadhaarNo && !!errors.aadhaarNo}\n                      helperText={touched.aadhaarNo && errors.aadhaarNo}\n                    />\n                  </Grid>\n                  <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"zodiac\"\n                      select\n                      label=\"ZODIAC / રશી\"\n                      value={values.zodiac}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.zodiac && !!errors.zodiac}\n                      helperText={touched.zodiac && errors.zodiac}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.zodiacList &&\n                        dropDownListData.zodiacList.length &&\n                        dropDownListData.zodiacList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                >\n                  <Grid\n                    container\n                    alignItems=\"flex-start\"\n                    style={\n                      [theme.breakpoints.up(\"sm\")]\n                        ? {\n                            paddingLeft: theme.spacing(5),\n                            paddingRight: theme.spacing(5)\n                          }\n                        : {}\n                    }\n                  >\n                    <Grid item xs={12} style={{ paddingLeft: \"8px\" }}>\n                      <TextField\n                        fullWidth\n                        id=\"studies\"\n                        label=\"Studies / અધ્યયન\"\n                        value={values.studies}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        error={!!touched.studies && !!errors.studies}\n                        helperText={touched.studies && errors.studies}\n                      />\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                >\n                  <Grid container alignItems=\"center\">\n                    {dropDownListData.eventList &&\n                      dropDownListData.eventList.length > 0 &&\n                      dropDownListData.eventList && (\n                        <Grid\n                          item\n                          sm={4}\n                          xs={12}\n                          style={{ paddingLeft: \"0px\" }}\n                        >\n                          <FormControlLabel\n                            control={\n                              <Checkbox\n                                id=\"eventMember\"\n                                checked={values.eventMember}\n                                onChange={handleChange}\n                                color=\"primary\"\n                              />\n                            }\n                            label={dropDownListData.eventList[0].Name}\n                          />\n                        </Grid>\n                      )}\n                    <Grid item sm={8} xs={12} style={{ paddingRight: \"24px\" }}>\n                      <Grid container justify=\"flex-end\" alignItems=\"center\">\n                        <Grid item style={{ padding: \"8px\" }}>\n                          <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isSubmitting}\n                            // onClick={() => handleSubmit()}\n                          >\n                            {formIndex > 0 ? \"Update member\" : \"Add member\"}\n                          </Button>\n                        </Grid>\n                        <Grid item style={{ padding: \"8px\" }}>\n                          <Button\n                            color=\"primary\"\n                            onClick={() => this.removeOrResetMember()}\n                          >\n                            {formIndex > 0 ? \"Remove\" : \"Reset\"}\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </form>\n    );\n  }\n}\nconst EnhancedMemberForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    firstName: props.dataObj.firstName,\n    middleName: props.dataObj.middleName,\n    lastName: props.dataObj.lastName,\n    relation: props.dataObj.relation,\n    dateOfBirth: props.dataObj.dateOfBirth\n      ? new Date(props.dataObj.dateOfBirth)\n      : new Date(\"1/1/1970\"),\n    gender: props.dataObj.gender,\n    maritalStatus: props.dataObj.maritalStatus,\n    anniversaryDate: props.dataObj.anniversaryDate\n      ? new Date(props.dataObj.anniversaryDate)\n      : new Date(\"1/1/1970\"),\n    mobileNo: props.dataObj.mobileNo,\n    studies: props.dataObj.studies,\n    bloodGroup: props.dataObj.bloodGroup,\n    eventMember: props.dataObj.eventMember,\n    aadhaarNo: props.dataObj.aadhaarNo,\n    zodiac: props.dataObj.zodiac,\n\n  }),\n\n  validationSchema: props => {\n    console.log(\n      \"++++++++++\",\n      document.getElementById(\"maritalStatus\"),\n      document.getElementById(\"maritalStatus\").value\n    );\n    return yup.object().shape({\n      firstName: yup\n        .string()\n        .required(\"First Name is required\")\n        .max(50, \"First Name cannot exceed then 50 character\"),\n      middleName: yup\n        .string()\n        .max(50, \"Middle Name cannot exceed then 50 character\"),\n      lastName: yup\n        .string()\n        .required(\"Last Name is required\")\n        .max(50, \"Last Name cannot exceed then 50 character\"),\n      relation: yup.string().required(\"Please select Relation\"),\n      dateOfBirth: yup.date().required(\"Date of Birth is Required\"),\n      gender: yup.string().required(\"Please select gender\"),\n      maritalStatus: yup.string().required(\"Marital Status is Required\"),\n      anniversaryDate:\n        document.getElementById(\"maritalStatus\").value !== undefined ||\n        document.getElementById(\"maritalStatus\").value !== null\n          ? document.getElementById(\"maritalStatus\").value === \"Married\"\n            ? yup.date().required(\"Anniversary Date is Required\")\n            : yup.string()\n          : yup.date(),\n      mobileNo: yup\n        .string()\n        .required(\"Mobile No is Required\")\n        .matches(PhoneRegExp, \"Mobile Number must be 10 digits long\"),\n      studies: yup.string().required(\"studies is Required\"),\n      bloodGroup: yup.string().required(\"Blood Group is Required\"),\n      aadhaarNo: yup\n        .string()\n        .matches(AdhharRegExp, \"Aadhar no must be 12 digits long\"),\n        zodiac: yup\n        .required(\"Please select zodiac\")\n        .string(),\n    });\n  },\n  handleSubmit: (values, props) => {\n    console.log(values, props);\n    //for daughter component\n    if (props.props.parentIndex !== undefined) {\n      props.props.addUpdateMemberDataToMemberList(\n        props.props.parentIndex,\n        props.props.formIndex,\n        values\n      );\n    } else {\n      //for only member component\n      props.props.addUpdateMemberDataToMemberList(\n        props.props.formIndex,\n        values\n      );\n    }\n    props.setSubmitting(false);\n    props.resetForm();\n    // props.props.tabHandleChange(null, \"members\");\n    // setTimeout(() => {\n    // alert(JSON.stringify(values, null, 2));\n    // }, 1000);\n    // dispatch(addProduct(values));\n  },\n  displayName: \"BasicForm\"\n})(MemberForm);\n\nexport default withStyles(useStyles, { withTheme: true })(EnhancedMemberForm);\n","import React, { Component } from \"react\";\nimport { withFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { PhoneRegExp, ZipCodeRegExp, AdhharRegExp } from \"../utils/constants\";\n\nconst styles = theme => ({\n  dialogTitle: { borderBottom: \"1px solid gray\", paddingBottom: \"5px\" },\n  dialogBody: {},\n  titleContainer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(5)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    textAlign: \"left\"\n  },\n  row: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  },\n  paddingRight_16: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: theme.spacing(2)\n    }\n  }\n});\n\nclass MemberModel extends Component {\n  render() {\n   \n    const {\n      parentIndex,\n      dataObj,\n      formIndex,\n      memberArrayLength,\n      dropDownListData,\n      toggleMemberModel,\n      toggleStatus,\n      classes,\n      theme,\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit\n    } = this.props;\n    console.log(values, this.props);\n    return (\n      <Dialog\n        open={toggleStatus}\n        onClose={toggleMemberModel}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        maxWidth=\"md\"\n        fullWidth\n        disableBackdropClick={true}\n        disableEscapeKeyDown={true}\n        classes={{ paper: classes.dialogBody }}\n      >\n        <form\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n          id={`form_${formIndex}`}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            <Typography color=\"primary\">Members Details</Typography>\n          </DialogTitle>\n          <DialogContent\n            style={{\n              borderTop: `1px solid ${theme.palette.grey[\"A100\"]}`,\n              borderBottom: `1px solid ${theme.palette.grey[\"A100\"]}`\n            }}\n          >\n            <Grid container alignItems=\"center\">\n              <Grid item xs={12}>\n                <Grid container alignItems=\"center\">\n                  <Grid\n                    item\n                    xs={12}\n                    style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                  >\n                    <Grid\n                      container\n                      className={classes.row}\n                      justify=\"space-evenly\"\n                    >\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                       <TextField\n                      fullWidth\n                      id=\"firstName\"\n                      label=\"FIRST NAME / પ્રથમ નામ\"\n                       autoComplete=\"1\"\n                      value={values.firstName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.firstName && !!errors.firstName}\n                      helperText={touched.firstName && errors.firstName}\n                    />\n                      </Grid>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                         <TextField\n                      fullWidth\n                      id=\"middleName\"\n                      label=\"MIDDLE NAME / પિતાનું નામ\"\n                      autoComplete=\"1\"\n                      value={values.middleName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.middleName && !!errors.middleName}\n                      helperText={touched.middleName && errors.middleName}\n                    />\n                      </Grid>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                       <TextField\n                      fullWidth\n                      id=\"lastName\"\n                      label=\"LAST NAME / છેલ્લું નામ\"\n                      autoComplete=\"1\"\n                      value={values.lastName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.lastName && !!errors.lastName}\n                      helperText={touched.lastName && errors.lastName}\n                    />\n                      </Grid>\n                      <Grid item sm={3} xs={11}>\n                      <TextField\n                      fullWidth\n                      id=\"relation\"\n                      select\n                      label=\"RELATION / સંબંધ\"\n                      autoComplete=\"1\"\n                      value={values.relation}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.relation && !!errors.relation}\n                      helperText={touched.relation && errors.relation}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                          <option key={0} disabled selected />\n                          {dropDownListData.relationList &&\n                            dropDownListData.relationList.length &&\n                            dropDownListData.relationList.map(option => (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            ))}\n                        </TextField>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                  >\n                    <Grid container className={classes.row}>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                      <KeyboardDatePicker\n                        fullWidth\n                        id=\"dateOfBirth\"\n                        format=\"MM/dd/yyyy\"\n                        label=\"DATE OF BIRTH / જન્મ તારીખ\"\n                        autoComplete=\"1\"\n                        KeyboardButtonProps={{\n                          \"aria-label\": \"change date\"\n                        }}\n                        value={values.dateOfBirth}\n                        onChange={(event, value) => {\n                          this.props.setFieldValue(\n                            \"dateOfBirth\",\n                            new Date(value)\n                          );\n                        }}\n                        onBlur={handleBlur}\n                        error={!!touched.dateOfBirth && !!errors.dateOfBirth}\n                        helperText={touched.dateOfBirth && errors.dateOfBirth}\n                      />\n                    </MuiPickersUtilsProvider>\n                      </Grid>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                        <FormControl\n                          required\n                          style={{ alignItems: \"flex-start\", float: \"left\" }}\n                        >\n                          <FormLabel>Gender</FormLabel>\n                          {/* import FormHelperText from '@material-ui/core/FormHelperText'; */}\n                          <RadioGroup\n                            aria-label=\"GENDER / લિંગ\"\n                            id=\"gender\"\n                            style={{ flexDirection: \"row\" }}\n                            autoComplete=\"1\"\n                            value={values.gender}\n                            onChange={eve => {\n                              this.props.setFieldValue(\n                                \"gender\",\n                                eve.target.value\n                              );\n                            }}\n                            // onBlur={handleBlur}\n                            error={touched.gender && errors.gender}\n                            // helperText={touched.gender && errors.gender}\n                          >\n                            <FormControlLabel\n                              id=\"female\"\n                              value=\"female\"\n                              control={<Radio />}\n                              label=\"Female\"\n                              color=\"primary\"\n                            />\n                            <FormControlLabel\n                              id=\"male\"\n                              value=\"male\"\n                              control={<Radio />}\n                              label=\"Male\"\n                            />\n                            {/* <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" /> */}\n                          </RadioGroup>\n                        </FormControl>\n                      </Grid>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                        <TextField\n                          fullWidth\n                          id={\"maritalStatus\"}\n                          select\n                          label=\"MARITAL STATUS / વૈવાહિક સ્થિતિ\"\n                          autoComplete=\"1\"\n                          value={values.maritalStatus}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={\n                            !!touched.maritalStatus && !!errors.maritalStatus\n                          }\n                          helperText={\n                            touched.maritalStatus && errors.maritalStatus\n                          }\n                          SelectProps={{\n                            native: true\n                          }}\n                        >\n                          <option key={0} disabled selected value={undefined} />\n                          {dropDownListData.maritalStatusList &&\n                            dropDownListData.maritalStatusList.length &&\n                            dropDownListData.maritalStatusList.map(option => (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            ))}\n                        </TextField>\n                      </Grid>\n                      {(this.props.values.maritalStatus == \"SINGLE\") ||\n                  (this.props.values.maritalStatus == \"WIDOW\") ? null : (\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              fullWidth\n                              id=\"anniversaryDate\"\n                              format=\"MM/dd/yyyy\"\n                              label=\"ANNIVERSARY DATE / વર્ષગાંઠની તારીખ\"\n                              autoComplete=\"1\"\n                              KeyboardButtonProps={{\n                                \"aria-label\": \"change date\"\n                              }}\n                              value={values.anniversaryDate}\n                              onChange={(event, value) => {\n                                this.props.setFieldValue(\n                                  \"anniversaryDate\",\n                                  new Date(value)\n                                );\n                              }}\n                              onBlur={handleBlur}\n                              error={\n                                !!touched.anniversaryDate &&\n                                !!errors.anniversaryDate\n                              }\n                              helperText={\n                                touched.anniversaryDate &&\n                                errors.anniversaryDate\n                              }\n                            />\n                          </MuiPickersUtilsProvider>\n                        </Grid>\n                      )}\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={12}\n                    style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                  >\n                    <Grid\n                      container\n                      alignItems=\"center\"\n                      // spacing={3}\n                      className={classes.row}\n                    >\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                        <TextField\n                          fullWidth\n                          id=\"mobileNo\"\n                          label=\"MOBILE NUMBER / મોબાઇલ નંબર\"\n                          autoComplete=\"1\"\n                          value={values.mobileNo}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={!!touched.mobileNo && !!errors.mobileNo}\n                          helperText={touched.mobileNo && errors.mobileNo}\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                        <TextField\n                          fullWidth\n                          id=\"bloodGroup\"\n                          select\n                          label=\"BLOOD GROUP / રક્ત જૂથ\"\n                          autoComplete=\"1\"\n                          value={values.bloodGroup}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={!!touched.bloodGroup && !!errors.bloodGroup}\n                          helperText={touched.bloodGroup && errors.bloodGroup}\n                          SelectProps={{\n                            native: true\n                          }}\n                        >\n                          <option key={0} disabled selected />\n                          {dropDownListData.bloodGroupList &&\n                            dropDownListData.bloodGroupList.length &&\n                            dropDownListData.bloodGroupList.map(option => (\n                              <option key={option.Id} value={option.Id}>\n                                {option.Name}\n                              </option>\n                            ))}\n                        </TextField>\n                      </Grid>\n                      <Grid\n                        item\n                        sm={3}\n                        xs={11}\n                        className={classes.paddingRight_16}\n                      >\n                        <TextField\n                          fullWidth\n                          id=\"aadhaarNo\"\n                          label=\"AADHAAR NO / આધાર નં\"\n                          autoComplete=\"1\"\n                          value={values.aadhaarNo}\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          error={!!touched.aadhaarNo && !!errors.aadhaarNo}\n                          helperText={touched.aadhaarNo && errors.aadhaarNo}\n                        />\n                      </Grid>\n                      <Grid item sm={3} xs={11} className={classes.paddingRight_16}>\n                    <TextField\n                      fullWidth\n                      id=\"zodiac\"\n                      select\n                      label=\"ZODIAC / રશી\"\n                      autoComplete=\"1\"\n                      value={values.zodiac}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      error={!!touched.zodiac && !!errors.zodiac}\n                      helperText={touched.zodiac && errors.zodiac}\n                      SelectProps={{\n                        native: true\n                      }}\n                    >\n                      <option key={0} disabled selected />\n                      {dropDownListData.zodiacList &&\n                        dropDownListData.zodiacList.length &&\n                        dropDownListData.zodiacList.map(option => (\n                          <option key={option.Id} value={option.Id}>\n                            {option.Name}\n                          </option>\n                        ))}\n                    </TextField>\n                  </Grid>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"flex-start\"\n                        style={\n                          [theme.breakpoints.up(\"sm\")]\n                            ? {\n                                paddingLeft: theme.spacing(5),\n                                paddingRight: theme.spacing(5)\n                              }\n                            : {}\n                        }\n                      >\n                        <Grid item xs={12} style={{ paddingLeft: \"8px\" }}>\n                          <TextField\n                            fullWidth\n                            id=\"studies\"\n                            label=\"Studies / અધ્યયન\"\n                            autoComplete=\"1\"\n                            value={values.studies}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.studies && !!errors.studies}\n                            helperText={touched.studies && errors.studies}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                      className={classes.row}\n                    >\n                      <Grid container alignItems=\"center\">\n                        {dropDownListData.eventList &&\n                          dropDownListData.eventList.length > 0 &&\n                          dropDownListData.eventList && (\n                            <Grid\n                              item\n                              sm={12}\n                              xs={12}\n                              style={{ paddingLeft: \"0px\" }}\n                            >\n                              <FormControlLabel\n                                control={\n                                  <Checkbox\n                                    id=\"eventMember\"\n                                    checked={values.eventMember}\n                                    onChange={handleChange}\n                                    color=\"primary\"\n                                  />\n                                }\n                                label={dropDownListData.eventList[0].Name}\n                              />\n                            </Grid>\n                          )}\n                      </Grid>\n                    </Grid>\n                    {/* <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid container justify=\"center\" alignItems=\"center\">\n                        <Grid item>\n                          <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={isSubmitting}\n                          >\n                            {formIndex > 0 ? \"Update member\" : \"Add member\"}\n                          </Button>\n                        </Grid>\n                        <Grid item>\n                          <Button\n                            variant=\"contained\"\n                            onClick={() => toggleMemberModel()}\n                            color=\"primary\"\n                          >\n                            Close\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid> */}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n              <Grid item>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  {memberArrayLength > 1 ? \"Update member\" : \"Add member\"}\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  onClick={() => toggleMemberModel()}\n                  color=\"primary\"\n                >\n                  Close\n                </Button>\n              </Grid>\n            </Grid>\n          </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}\nconst EnhancedMemberForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    firstName: props.dataObj.firstName,\n    middleName: props.dataObj.middleName,\n    lastName: props.dataObj.lastName,\n    relation: props.dataObj.relation,\n    dateOfBirth: props.dataObj.dateOfBirth\n      ? props.dataObj.dateOfBirth\n      : null,\n    gender: props.dataObj.gender,\n    maritalStatus: props.dataObj.maritalStatus,\n    anniversaryDate: props.dataObj.anniversaryDate\n      ? new Date(props.dataObj.anniversaryDate)\n      : null,\n    mobileNo: props.dataObj.mobileNo,\n    studies: props.dataObj.studies,\n    bloodGroup: props.dataObj.bloodGroup,\n    eventMember: props.dataObj.eventMember,\n    aadhaarNo: props.dataObj.aadhaarNo,\n    zodiac: props.dataObj.zodiac,\n  }),\n\n  validationSchema: props => {\n    console.log(\n      \"++++++++++\",\n      document.getElementById(\"maritalStatus\"),\n      document.getElementById(\"maritalStatus\").value\n    );\n    return yup.object().shape({\n      firstName: yup\n        .string()\n        .required(\"First Name is required\")\n        .max(50, \"First Name cannot exceed then 50 character\"),\n      middleName: yup\n        .string()\n        .max(50, \"Middle Name cannot exceed then 50 character\"),\n      lastName: yup\n        .string()\n        .required(\"Last Name is required\")\n        .max(50, \"Last Name cannot exceed then 50 character\"),\n      relation: yup.string().required(\"Please select Relation\"),\n      dateOfBirth: yup.date().required(\"Date of Birth is Required\"),\n      gender: yup.string().required(\"Please select gender\"),\n      maritalStatus: yup.string().required(\"Marital Status is Required\"),\n      anniversaryDate: yup.date(),\n      mobileNo: yup\n        .string()\n        .required(\"Mobile No is Required\")\n        .matches(PhoneRegExp, \"Mobile Number must be 10 digits long\"),\n      studies: yup.string().required(\"studies is Required\"),\n      bloodGroup: yup.string().required(\"Blood Group is Required\"),\n      aadhaarNo: yup\n        .string()\n        .required(\"Aadhar no is required\")\n        .matches(AdhharRegExp, \"Aadhar no must be 12 digits long\")\n    });\n  },\n  handleSubmit: (values, props) => {\n    console.log(values, props);\n    //for daughter component\n    if (props.props.parentIndex !== undefined) {\n      props.props.addUpdateMemberDataToMemberList(\n        props.props.parentIndex,\n        props.props.formIndex,\n        values\n      );\n    } else {\n      //for only member component\n      props.props.addUpdateMemberDataToMemberList(\n        props.props.formIndex,\n        values\n      );\n    }\n    if (props.props.formIndex) props.props.toggleMemberModel();\n    props.setSubmitting(false);\n    props.resetForm();\n    // props.props.tabHandleChange(null, \"members\");\n  },\n  displayName: \"BasicForm\"\n})(MemberModel);\nexport default withStyles(styles, { withTheme: true })(EnhancedMemberForm);\n","import React, { Component, Fragment } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    pdLeftRighty_16: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    pdLeft_16: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }\n  },\n  root: {\n    textAlign: \"left\",\n    color: \"gray\"\n  },\n  paper: {\n    padding: \"8px\",\n    borderBottom: \"1px solid gray\"\n  }\n});\n\nclass RenderListComponent extends Component {\n  render() {\n    const { dataObject, classes, eventName } = this.props;\n    return (\n      // <Paper className={classes.paper}>\n      <Grid container className={classes.root}>\n        <Grid item md={4} sm={4} xs={12}>\n          <Grid container>\n            <Grid item md={4}>\n              <Typography variant=\"body1\">{\"FirstName: \"}</Typography>\n            </Grid>\n            <Grid item md={8}>\n              <Typography variant=\"body1\" noWrap>\n                {dataObject.firstName}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        {dataObject.middleName && (\n          <Grid item md={4} sm={4} xs={12}>\n            <Grid container>\n              <Grid item md={4}>\n                <Typography variant=\"body1\">{\"MiddleName: \"}</Typography>\n              </Grid>\n              <Grid item md={8}>\n                <Typography variant=\"body1\" noWrap>\n                  {dataObject.middleName}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        <Grid item md={4} sm={4} xs={12}>\n          <Grid container>\n            <Grid item md={4}>\n              <Typography variant=\"body1\">{\"LastName: \"}</Typography>\n            </Grid>\n            <Grid item md={8}>\n              <Typography variant=\"body1\" noWrap>\n                {dataObject.lastName}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        {dataObject.dateOfBirth && (\n          <Grid item md={4} sm={4} xs={12}>\n            <Grid container>\n              <Grid item md={3}>\n                <Typography variant=\"body1\">{\"DOB: \"}</Typography>\n              </Grid>\n              <Grid item md={9}>\n                <Typography variant=\"body1\" noWrap>\n                  {new Date(dataObject.dateOfBirth).toDateString()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        {dataObject.relation && (\n          <Grid item md={4} sm={4} xs={12}>\n            <Grid container>\n              <Grid item md={3}>\n                <Typography variant=\"body1\">{\"relation: \"}</Typography>\n              </Grid>\n              <Grid item md={9}>\n                <Typography variant=\"body1\" noWrap>\n                  {dataObject.relation}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        <Grid item md={4} sm={4} xs={12}>\n          <Grid container>\n            <Grid item md={4}>\n              <Typography variant=\"body1\">{\"BloodGroup: \"}</Typography>\n            </Grid>\n            <Grid item md={8}>\n              <Typography variant=\"body1\" noWrap>\n                {dataObject.bloodGroup}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item md={4} sm={4} xs={12}>\n          <Grid container>\n            <Grid item md={4}>\n              <Typography variant=\"body1\">{\"mobileNo: \"}</Typography>\n            </Grid>\n            <Grid item md={8}>\n              <Typography variant=\"body1\" noWrap>\n                {dataObject.mobileNo}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item md={4} sm={4} xs={12}>\n          <Grid container>\n            <Grid item md={3}>\n              <Typography variant=\"body1\">{\"gender: \"}</Typography>\n            </Grid>\n            <Grid item md={9}>\n              <Typography variant=\"body1\" noWrap>\n                {dataObject.gender}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item md={4} sm={4} xs={12}>\n          <Grid container>\n            <Grid item md={4}>\n              <Typography variant=\"body1\">{\"Aadhaar No: \"}</Typography>\n            </Grid>\n            <Grid item md={8}>\n              <Typography variant=\"body1\" noWrap>\n                {dataObject.aadhaarNo.toString()}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        {dataObject.anniversaryDate && (\n          <Grid item md={4} sm={4} xs={12}>\n            <Grid container>\n              <Grid item md={5}>\n                <Typography variant=\"body1\">{\"AnniversaryDate: \"}</Typography>\n              </Grid>\n              <Grid item md={7}>\n                <Typography variant=\"body1\" noWrap>\n                  {new Date(dataObject.anniversaryDate).toDateString()}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        {eventName && dataObject.eventMember && (\n          <Grid item md={7} sm={12} xs={12}>\n            <Grid container>\n              <Grid item md={2}>\n                <Typography variant=\"body1\">{\"Event: \"}</Typography>\n              </Grid>\n              <Grid item md={10} noWrap>\n                <Typography variant=\"body1\">{eventName}</Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        {dataObject.maritalStatus && (\n          <Grid item md={4} sm={4} xs={12}>\n            <Grid container>\n              <Grid item md={4}>\n                <Typography variant=\"body1\">{\"MaritalStatus: \"}</Typography>\n              </Grid>\n              <Grid item md={8}>\n                <Typography variant=\"body1\" noWrap>\n                  {dataObject.maritalStatus}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n        {dataObject.studies && (\n          <Grid item md={7} sm={4} xs={12}>\n            <Grid container>\n              <Grid item md={2}>\n                <Typography variant=\"body1\">{\"Studies: \"}</Typography>\n              </Grid>\n              <Grid item md={10}>\n                <Typography variant=\"body1\" noWrap>\n                  {dataObject.studies}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n\n      // </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(RenderListComponent);\n// export default RenderListComponent;\n","import React, { Component, Fragment } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  withStyles,\n  Button,\n  Typography,\n  Divider,\n  Paper\n} from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport {\n  addUpdateMemberDataToMemberList,\n  deleteMemberDataToMemberList,saveFamilyMemberData\n} from \"../action/memberAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport MemberForm from \"./memberForm\";\nimport MemberModel from \"../model/memberModel\";\nimport RenderListComponent from \"../utils/renderListComponent\";\nimport {getFormattedDate} from \"../utils/commonUtils\";\nimport produce from \"immer\";\n\nconst styles = theme => ({\n  [theme.breakpoints.up(\"sm\")]: {\n    pdLeft_16: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  },\n  [theme.breakpoints.down(\"sm\")]: {\n    pdLeft_16: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }\n  },\n  listViewContainer: {\n    maxHeight: `calc(100vh - 64px - 48px - 16px - 16px - 121px - 8px)`,\n    overflowY: \"auto\"\n  },\n  paper: {\n    padding: \"8px\"\n  }\n});\n\nclass Members extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleStatus: false,\n      dataObj: props.memberDetail[0],\n      formIndex: 0\n    };\n  }\n\n   saveFamilyMembersDetail =() => {\n    \n    \n    var  memberDetail = this.props.memberDetail.filter(f=>f.firstName !='');\n    for(var i =0 ; i < memberDetail.length ;i++)\n    {\n      if (memberDetail[i].dateOfBirth) {\n        memberDetail[i].dateOfBirthF = \n        getFormattedDate( new Date(memberDetail[i].dateOfBirth));\n      }\n      if (memberDetail[i].anniversaryDate) {\n          memberDetail[i].anniversaryDateF = \n          getFormattedDate(new Date(memberDetail[i].anniversaryDate));\n      }\n\n    }\n     debugger;\n     this.props.saveFamilyMemberData(memberDetail);\n\n  }\n\n  removeOrResetMember = index => {\n    const { parentIndex, deleteMemberDataToMemberList } = this.props;\n    parentIndex !== undefined\n      ? deleteMemberDataToMemberList(parentIndex, index)\n      : deleteMemberDataToMemberList(index);\n  };\n\n  editDeleteMember = (type, index) => {\n    console.log(\"formIndex, index\", this.state.formIndex, index);\n    console.log(this.props.memberDetail);\n    if (type === \"edit\") {\n      this.setState({\n        dataObj: this.props.memberDetail[index],\n        formIndex: index,\n        toggleStatus: !this.state.toggleStatus\n      });\n    } else {\n      this.setState({ formIndex: index });\n      this.removeOrResetMember(index);\n    }\n  };\n\n  toggleMemberModel = () => {\n    this.setState({ toggleStatus: !this.state.toggleStatus });\n  };\n\n  render() {\n    const {\n      classes,\n      memberDetail,\n      dropDownListData,\n      addUpdateMemberDataToMemberList,\n      deleteMemberDataToMemberList,\n      tabHandleChange\n    } = this.props;\n    const { toggleStatus, dataObj, formIndex } = this.state;\n    console.log(\"^^^^^^^^^^^^^^^^^\", this.props.memberDetail);\n    return (\n      <Fragment>\n        {toggleStatus && (\n          <MemberModel\n            toggleStatus={toggleStatus}\n            toggleMemberModel={this.toggleMemberModel}\n            dataObj={dataObj}\n            formIndex={formIndex}\n            dropDownListData={dropDownListData}\n            addUpdateMemberDataToMemberList={addUpdateMemberDataToMemberList}\n            memberArrayLength={memberDetail.length}\n          />\n        )}\n        <Grid container>\n          <Grid item xs={12}>\n            <Grid container justify=\"flex-start\" alignItems=\"center\">\n              <Grid item xs={12} className={classes.pdLeft_16}>\n                <Grid container justify=\"space-between\" alignItems=\"flex-end\">\n                  <Grid item>\n                    <Typography align=\"left\" gutterBottom color=\"primary\">\n                      Member Detail\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Tooltip TransitionComponent={Zoom} title=\"Add\">\n                      <Button\n                        color=\"primary\"\n                        // variant=\"contained\"\n                        onClick={() => this.toggleMemberModel()}\n                      >\n                        Add Members\n                      </Button>\n                    </Tooltip>\n                  </Grid>\n                </Grid>\n                <Divider />\n              </Grid>\n              <Grid item xs={12}>\n                <Grid container className={classes.listViewContainer}>\n                  {memberDetail.length > 1 ? (\n                    memberDetail.map(\n                      (item, index) =>\n                        index !== 0 && (\n                          <Grid\n                            item\n                            xs={12}\n                            key={index}\n                            className={classes.pdLeft_16}\n                          >\n                            <Paper className={classes.paper}>\n                              <Grid container alignItems=\"center\">\n                                <Grid item md={10} xs={12}>\n                                  <RenderListComponent\n                                    dataObject={item}\n                                    eventName={\n                                      dropDownListData.eventList[0].Name\n                                    }\n                                  />\n                                </Grid>\n                                <Grid item md={2} xs={12}>\n                                  <Grid\n                                    container\n                                    justify=\"space-evenly\"\n                                    alignItems=\"center\"\n                                  >\n                                    <Grid item>\n                                      <Tooltip\n                                        TransitionComponent={Zoom}\n                                        title=\"Edit\"\n                                      >\n                                        <IconButton\n                                          aria-label=\"Delete\"\n                                          onClick={() =>\n                                            this.editDeleteMember(\"edit\", index)\n                                          }\n                                        >\n                                          <EditIcon fontSize=\"small\" />\n                                        </IconButton>\n                                      </Tooltip>\n                                    </Grid>\n\n                                    <Grid item>\n                                      <Tooltip\n                                        TransitionComponent={Zoom}\n                                        title=\"Remove\"\n                                      >\n                                        <IconButton\n                                          aria-label=\"Delete\"\n                                          onClick={() =>\n                                            this.editDeleteMember(\n                                              \"delete\",\n                                              index\n                                            )\n                                          }\n                                        >\n                                          <DeleteIcon fontSize=\"small\" />\n                                        </IconButton>\n                                      </Tooltip>\n                                    </Grid>\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                            </Paper>\n                          </Grid>\n                        )\n                    )\n                  ) : (\n                    <Grid item xs={12}>\n                      <Typography align=\"center\">No Members Found</Typography>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n              {/* {memberDetail.map((item, index) => (\n                <Grid item xs={12} key={index}>\n                  <MemberForm\n                    dataObj={item}\n                    formIndex={index}\n                    dropDownListData={dropDownListData}\n                    addUpdateMemberDataToMemberList={\n                      addUpdateMemberDataToMemberList\n                    }\n                    deleteMemberDataToMemberList={deleteMemberDataToMemberList}\n                  />\n                </Grid>\n              ))} */}\n              <Grid item xs={12} style={{ paddingTop: \"32px\" }}>\n                <Grid container justify=\"center\">\n                  <Grid item style={{ padding: \"8px\" }}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => tabHandleChange(null, 0)}\n                    >\n                      Go Back\n                    </Button>\n                  </Grid>\n                  <Grid item style={{ padding: \"8px\" }}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={memberDetail.length == 1}\n                      onClick={() => this.saveFamilyMembersDetail()}\n                    >{`Save & Next`}</Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n\n}\n\n\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    memberDetail: state.member.memberList,\n    dropDownListData: state.dropDownList.dropDownListData\n      ? state.dropDownList.dropDownListData\n      : {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { addUpdateMemberDataToMemberList, deleteMemberDataToMemberList,\n      saveFamilyMemberData },\n      dispatch\n  );\n};\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(Members)\n);\n","import { axiosInstance } from \"../api/axiosConfig\";\nimport produce from \"immer\";\nimport {\n  ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n  DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST,\n  ADD_DAUGHTER_MEMBER_LIST,\n  DELETE_DAUGHTER_MEMBER_LIST\n} from \"./actionTypes\";\nimport { jsonParseMethod } from \"../utils/commonUtils\";\nimport { getDate } from \"date-fns\";\n\nexport const addUpdateMemberDataToDaughterMemberList = (\n  parentIndex,\n  memberIndex,\n  dataObj\n) => {\n  console.log(\n    \"parentIndex, memberIndex, dataObj\",\n    parentIndex,\n    memberIndex,\n    dataObj\n  );\n  let data = {\n    firstName: dataObj.firstName,\n    middleName: dataObj.middleName,\n    lastName: dataObj.lastName,\n    relation: dataObj.relation,\n    bloodGroup: dataObj.bloodGroup,\n    dateOfBirth: dataObj.dateOfBirth,\n    studies: dataObj.studies,\n    mobileNo: dataObj.mobileNo,\n    gender: dataObj.gender,\n    eventMember: dataObj.eventMember,\n    maritalStatus: dataObj.maritalStatus,\n    aadhaarNo: dataObj.aadhaarNo,\n    anniversaryDate:\n      dataObj.maritalStatus.toLowerCase() === \"married\"\n        ? dataObj.anniversaryDate\n        : \"\"\n  };\n\n  return (dispatch, getState) => {\n    let stateData = getState();\n    if (memberIndex) {\n      const nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex].memberList[\n          memberIndex\n        ] = data;\n      });\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n        payload: { data: nextState.daughter.daughterlist }\n      });\n    } else {\n      const nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex].memberList.push(data);\n      });\n      dispatch({\n        type: ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n        payload: { data: nextState.daughter.daughterlist }\n      });\n    }\n  };\n};\n\nexport const deleteMemberDataToDaughterMemberList = (\n  parentIndex,\n  memberIndex\n) => {\n  return (dispatch, getState) => {\n    let stateData = getState();\n    const nextState = produce(stateData, draftState => {\n      draftState.daughter.daughterlist[parentIndex].memberList.splice(\n        memberIndex,\n        1\n      );\n    });\n    dispatch({\n      type: DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST,\n      payload: { data: nextState.daughter.daughterlist }\n    });\n  };\n};\n\nexport const addUpdateDaughterMemberList = (parentIndex, dataObj) => {\n  console.log(\"action\", parentIndex, dataObj);\n  return (dispatch, getState) => {\n    var data = {\n      basicDetail: {\n        familyId: dataObj.familyId,\n        firstName: dataObj.firstName,\n        middleName: dataObj.middleName,\n        lastName: dataObj.lastName,\n        email: dataObj.email,\n        mobile: dataObj.mobile,\n        residencePhone: dataObj.residencePhone,\n        officePhone: dataObj.officePhone,\n        nativePlaceId: dataObj.nativePlaceId,\n        occupationId: dataObj.occupationId,\n        dob: dataObj.dob,\n        marriageDate: dataObj.marriageDate,\n        motherName: dataObj.motherName,\n        motherNativePlaceId: dataObj.motherNativePlaceId,\n        eventHead: dataObj.eventHead,\n        aadhaarNo: dataObj.aadhaarNo,\n        otherOccupation: dataObj.otherOccupation\n      },\n      residenceDetail: {\n        r_Address1: dataObj.r_Address1,\n        r_Address2: dataObj.r_Address2,\n        r_Address3: dataObj.r_Address3,\n        r_CountryId: dataObj.r_CountryId,\n        r_CityId: dataObj.r_CityId,\n        r_StateId: dataObj.r_StateId,\n        r_ZipCode: dataObj.r_ZipCode\n      },\n      officeDetail: {\n        o_Address1: dataObj.o_Address1,\n        o_Address2: dataObj.o_Address2,\n        o_Address3: dataObj.o_Address3,\n        o_CountryId: dataObj.o_CountryId,\n        o_CityId: dataObj.o_CityId,\n        o_StateId: dataObj.o_StateId,\n        o_ZipCode: dataObj.o_ZipCode\n      },\n      memberList: []\n    };\n    var stateData = getState();\n    data.memberList = stateData.daughter.daughterlist[parentIndex].memberList;\n    let nextState = stateData.daughter.daughterlist;\n    if (parentIndex) {\n      nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist[parentIndex] = data;\n      });\n    } else {\n      nextState = produce(stateData, draftState => {\n        draftState.daughter.daughterlist.push(data);\n      });\n    }\n    dispatch({\n      type: ADD_DAUGHTER_MEMBER_LIST,\n      payload: { data: nextState.daughter.daughterlist }\n    });\n  };\n};\n\nexport const deleteDaughterMemberList = parentIndex => {\n  return (dispatch, getState) => {\n    let stateData = getState();\n    const nextState = produce(stateData, draftState => {\n      draftState.daughter.daughterlist.splice(parentIndex, 1);\n    });\n    dispatch({\n      type: DELETE_DAUGHTER_MEMBER_LIST,\n      payload: { data: nextState.daughter.daughterlist }\n    });\n  };\n};\n","import React, { Component, Fragment } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { withFormik } from \"formik\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport { Typography, Divider, Button, withStyles } from \"@material-ui/core\";\nimport * as yup from \"yup\";\nimport {\n  saveFamilyDataToStore,\n  getAllDropDownListData\n} from \"../action/familyAction\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport MemberForm from \"./memberForm\";\nimport {\n  addUpdateMemberDataToDaughterMemberList,\n  deleteMemberDataToDaughterMemberList,\n  addUpdateDaughterMemberList,\n  deleteDaughterMemberList\n} from \"../action/daughterAction\";\nimport { PhoneRegExp, ZipCodeRegExp, AdhharRegExp } from \"../utils/constants\";\n\nconst useStyles = theme => ({\n  titleContainer: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(5)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    },\n    textAlign: \"left\"\n  },\n\n  titleContainer2: {\n    [theme.breakpoints.down(\"up\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(3),\n      textAlign: \"left\",\n      marginTop: theme.spacing(3)\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(2),\n      textAlign: \"left\",\n      marginTop: theme.spacing(2)\n    }\n  },\n  row: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingLeft: theme.spacing(6),\n      paddingRight: theme.spacing(6)\n    }\n  },\n  paddingRight_16: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: theme.spacing(2)\n    }\n  },\n  paddingLeftRight_36: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingRight: theme.spacing(6),\n      paddingLeft: theme.spacing(6)\n    }\n  }\n});\n\nclass DaughterForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: new Date()\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllDropDownListData();\n  }\n  render() {\n    console.log(this.props);\n    const {\n      tabHandleChange,\n      dataObj,\n      formIndex,\n      dropDownListData,\n      classes,\n      theme,\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset,\n      addUpdateMemberDataToDaughterMemberList,\n      deleteMemberDataToDaughterMemberList,\n      deleteDaughterMemberList\n    } = this.props;\n    const { selectedDate } = this.state;\n    console.log(this.props);\n    return (\n      <Fragment>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={12}>\n            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n              <Grid container alignItems=\"center\">\n                <Grid item xs={12}>\n                  <Grid container alignContent=\"center\" alignItems=\"center\">\n                    <Grid item xs={12} className={classes.titleContainer}>\n                      <Typography gutterBottom color=\"primary\">\n                        BASIC DETAIL / મૂળભૂત વિગતો\n                      </Typography>\n                      <Divider />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        className={classes.row}\n                        justify=\"space-evenly\"\n                      >\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"mobile\"\n                            label=\"MOBILE NUMBER / મોબાઇલ નંબર\"\n                            value={values.mobile}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.mobile && !!errors.mobile}\n                            helperText={touched.mobile && errors.mobile}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"firstName\"\n                            label=\"FIRST NAME / પ્રથમ નામ\"\n                            value={values.firstName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.firstName && !!errors.firstName}\n                            helperText={touched.firstName && errors.firstName}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"middleName\"\n                            label=\"MIDDLE NAME / પિતાનું નામ\"\n                            value={values.middleName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.middleName && !!errors.middleName}\n                            helperText={touched.middleName && errors.middleName}\n                          />\n                        </Grid>\n                        <Grid item sm={3} xs={11}>\n                          <TextField\n                            fullWidth\n                            id=\"lastName\"\n                            label=\"LAST NAME / છેલ્લું નામ\"\n                            value={values.lastName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.lastName && !!errors.lastName}\n                            helperText={touched.lastName && errors.lastName}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        // spacing={3}\n                        className={classes.row}\n                        justify=\"space-evenly\"\n                      >\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"fatherName\"\n                            label=\"FATHER NAME / પિતાનું નામ\"\n                            value={values.fatherName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.fatherName && !!errors.fatherName}\n                            helperText={touched.fatherName && errors.fatherName}\n                          />\n                        </Grid>\n\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"motherName\"\n                            label=\"MOTHER NAME / માતાનું નામ\"\n                            value={values.motherName}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.motherName && !!errors.motherName}\n                            helperText={touched.motherName && errors.motherName}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"nativePlaceId\"\n                            select\n                            label=\"FATHER NATIVE PLACE / પિતાનો મૂળ સ્થાન\"\n                            value={values.nativePlaceId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.nativePlaceId && !!errors.nativePlaceId\n                            }\n                            helperText={\n                              touched.nativePlaceId && errors.nativePlaceId\n                            }\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.nativePlaceList &&\n                              dropDownListData.nativePlaceList.length > 0 &&\n                              dropDownListData.nativePlaceList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"motherNativePlaceId\"\n                            select\n                            label=\"FATHER PRESENT PLACE / પિતા હાજર સ્થળ\"\n                            value={values.motherNativePlaceId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.motherNativePlaceId &&\n                              !!errors.motherNativePlaceId\n                            }\n                            helperText={\n                              touched.motherNativePlaceId &&\n                              errors.motherNativePlaceId\n                            }\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.nativePlaceList &&\n                              dropDownListData.nativePlaceList.length > 0 &&\n                              dropDownListData.nativePlaceList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    {this.props.values.occupationId !== \"0\" ? null : (\n                      <Grid\n                        item\n                        xs={12}\n                        style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                      >\n                        <Grid\n                          container\n                          alignItems=\"center\"\n                          style={{\n                            paddingLeft: theme.spacing(6),\n                            paddingRight: theme.spacing(6)\n                          }}\n                        >\n                          <Grid\n                            item\n                            sm={3}\n                            style={{ paddingLeft: \"0px\" }}\n                            className={classes.paddingRight_16}\n                            xs={11}\n                          >\n                            <TextField\n                              id=\"otherOccupation\"\n                              label=\"Other Occupation\"\n                              fullWidth\n                              value={values.otherOccupation}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              error={\n                                !!touched.otherOccupation &&\n                                !!errors.otherOccupation\n                              }\n                              helperText={\n                                touched.otherOccupation &&\n                                errors.otherOccupation\n                              }\n                            />\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    )}\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        // spacing={3}\n                        className={classes.row}\n                       \n                      >\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            id=\"email\"\n                            label=\"EMAIL / ઇમેઇલ\"\n                            fullWidth\n                            value={values.email}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.email && !!errors.email}\n                            helperText={touched.email && errors.email}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              fullWidth\n                              id=\"dob\"\n                              format=\"MM/dd/yyyy\"\n                              label=\"DATE OF BIRTH / જન્મ તારીખ\"\n                              KeyboardButtonProps={{\n                                \"aria-label\": \"change date\"\n                              }}\n                              value={values.dob}\n                              onChange={(event, value) => {\n                                console.log(event, value);\n                                this.props.setFieldValue(\n                                  \"dob\",\n                                  new Date(value)\n                                );\n                              }}\n                              onBlur={handleBlur}\n                              error={!!touched.dob && !!errors.dob}\n                              helperText={touched.dob && errors.dob}\n                              // value={new Date().getDate()}\n                              // onChange={}\n                            />\n                          </MuiPickersUtilsProvider>\n                        </Grid>\n\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id={\"maritalStatus\"}\n                            select\n                            label=\"MARITAL STATUS / વૈવાહિક સ્થિતિ\"\n                            value={values.maritalStatus}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.maritalStatus && !!errors.maritalStatus\n                            }\n                            helperText={\n                              touched.maritalStatus && errors.maritalStatus\n                            }\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option\n                              key={0}\n                              disabled\n                              selected\n                              value={undefined}\n                            />\n                            {dropDownListData.maritalStatusList &&\n                              dropDownListData.maritalStatusList.length &&\n                              dropDownListData.maritalStatusList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        \n                        </Grid>\n                             \n                              \n                        {(values.maritalStatus == \"SINGLE\") ||\n                        (values.maritalStatus == \"WIDOW\") ? null : (\n                          <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                            <KeyboardDatePicker\n                              fullWidth\n                              id=\"marriageDate\"\n                              format=\"MM/dd/yyyy\"\n                              label=\"MARRIAGE DATE / લગ્ન તારીખ\"\n                              KeyboardButtonProps={{\n                                \"aria-label\": \"change date\"\n                              }}\n                              value={values.marriageDate}\n                              autoComplete=\"1\"\n                              onChange={(event, value) => {\n                                console.log(event, value);\n                                this.props.setFieldValue(\n                                  \"marriageDate\",\n                                  new Date(value)\n                                );\n                              }}\n                              onBlur={handleBlur}\n                              error={\n                                !!touched.marriageDate &&\n                                !!errors.marriageDate\n                              }\n                              helperText={\n                                touched.marriageDate && errors.marriageDate\n                              }\n                            />\n                          </MuiPickersUtilsProvider>\n                        </Grid>\n                          )\n                         }\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid container className={classes.row}>\n                        <Grid item sm={3} xs={11}>\n                          <TextField\n                            fullWidth\n                            id=\"residencePhone\"\n                            label=\"RESIDENCE PHONE / નિવાસ ફોન\"\n                            value={values.residencePhone}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.residencePhone &&\n                              !!errors.residencePhone\n                            }\n                            helperText={\n                              touched.residencePhone && errors.residencePhone\n                            }\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"officePhone\"\n                            label=\"OFFICE PHONE / .ફિસ ફોન\"\n                            value={values.officePhone}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.officePhone && !!errors.officePhone\n                            }\n                            helperText={\n                              touched.officePhone && errors.officePhone\n                            }\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"aadhaarNo\"\n                            label=\"AADHAAR NO / આધાર નં\"\n                            value={values.aadhaarNo}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.aadhaarNo && !!errors.aadhaarNo}\n                            helperText={touched.aadhaarNo && errors.aadhaarNo}\n                          />\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"bloodGroup\"\n                            select\n                            label=\"BLOOD GROUP / રક્ત જૂથ\"\n                            value={values.bloodGroup}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.bloodGroup && !!errors.bloodGroup}\n                            helperText={touched.bloodGroup && errors.bloodGroup}\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.bloodGroupList &&\n                              dropDownListData.bloodGroupList.length &&\n                              dropDownListData.bloodGroupList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"zodiac\"\n                            select\n                            label=\"ZODIAC / રશી\"\n                            value={values.zodiac}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.zodiac && !!errors.zodiac}\n                            helperText={touched.zodiac && errors.zodiac}\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.zodiacList &&\n                              dropDownListData.zodiacList.length &&\n                              dropDownListData.zodiacList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item xs={12} style={{ paddingTop: theme.spacing(2) }}>\n                  <Grid container alignItems=\"center\">\n                    <Grid item xs={12} className={classes.titleContainer2}>\n                      <Typography gutterBottom color=\"primary\">\n                        RESIDENCE ADDRESS / રહેઠાણ સરનામું\n                      </Typography>\n                      <Divider />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid item sm={12} xs={11}>\n                          <TextField\n                            id=\"r_Address1\"\n                            label=\"ADDRESS / સરનામું\"\n                            fullWidth\n                            value={values.r_Address1}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.r_Address1 && !!errors.r_Address1}\n                            helperText={\n                              touched.residenceAddress1 &&\n                              errors.residenceAddress1\n                            }\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid item sm={12} xs={11}>\n                          <TextField\n                            id=\"r_Address2\"\n                            fullWidth\n                            value={values.r_Address2}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.r_Address2 && !!errors.r_Address2}\n                            helperText={touched.r_Address2 && errors.r_Address2}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid item sm={12} xs={11}>\n                          <TextField\n                            id=\"r_Address3\"\n                            fullWidth\n                            value={values.r_Address3}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.r_Address3 && !!errors.r_Address3}\n                            helperText={touched.r_Address3 && errors.r_Address3}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        // spacing={3}\n                        className={classes.row}\n                        justify=\"space-evenly\"\n                      >\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"r_CountryId\"\n                            select\n                            label=\"COUNTRY / દેશ\"\n                            value={values.r_CountryId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.r_CountryId && !!errors.r_CountryId\n                            }\n                            helperText={\n                              touched.r_CountryId && errors.r_CountryId\n                            }\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.countryList &&\n                              dropDownListData.countryList.length > 0 &&\n                              dropDownListData.countryList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"r_StateId\"\n                            select\n                            label=\"STATE / રાજ્ય\"\n                            value={values.r_StateId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.r_StateId && !!errors.r_StateId}\n                            helperText={touched.r_StateId && errors.r_StateId}\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.stateList &&\n                              dropDownListData.stateList.length > 0 &&\n                              dropDownListData.stateList.map(\n                                option =>\n                                  values.r_CountryId == option.CountryId && (\n                                    <option key={option.Id} value={option.Id}>\n                                      {option.Name}\n                                    </option>\n                                  )\n                              )}\n                          </TextField>\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"r_CityId\"\n                            select\n                            label=\"CITY / શહેર\"\n                            value={values.r_CityId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.r_CityId && !!errors.r_CityId}\n                            helperText={touched.r_CityId && errors.r_CityId}\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.cityList &&\n                              dropDownListData.cityList.length > 0 &&\n                              dropDownListData.cityList.map(\n                                option =>\n                                  values.r_StateId == option.StateId && (\n                                    <option key={option.Id} value={option.Id}>\n                                      {option.Name}\n                                    </option>\n                                  )\n                              )}\n                          </TextField>\n                        </Grid>\n                        <Grid item sm={3} xs={11}>\n                          <TextField\n                            id=\"r_ZipCode\"\n                            label=\"ZIPCODE/PINCODE / પિન કોડ\"\n                            fullWidth\n                            value={values.r_ZipCode}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.r_ZipCode && !!errors.r_ZipCode}\n                            helperText={touched.r_ZipCode && errors.r_ZipCode}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item xs={12} style={{ paddingTop: theme.spacing(2) }}>\n                  <Grid container alignItems=\"center\">\n                    <Grid item xs={12} className={classes.titleContainer2}>\n                      <Typography gutterBottom color=\"primary\">\n                        OFFICE ADDRESS / .ફિસનું સરનામું\n                      </Typography>\n                      <Divider />\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid item sm={12} xs={11}>\n                          <TextField\n                            id=\"o_Address1\"\n                            label=\"ADDRESS / સરનામું\"\n                            fullWidth\n                            value={values.o_Address1}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.o_Address1 && !!errors.o_Address1}\n                            helperText={touched.o_Address1 && errors.o_Address1}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid item sm={12} xs={11}>\n                          <TextField\n                            id=\"o_Address2\"\n                            fullWidth\n                            value={values.o_Address2}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.o_Address2 && !!errors.o_Address2}\n                            helperText={touched.o_Address2 && errors.o_Address2}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        alignItems=\"center\"\n                        style={{\n                          paddingLeft: theme.spacing(6),\n                          paddingRight: theme.spacing(6)\n                        }}\n                      >\n                        <Grid item sm={12} xs={11}>\n                          <TextField\n                            id=\"o_Address3\"\n                            fullWidth\n                            value={values.o_Address3}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.o_Address3 && !!errors.o_Address3}\n                            helperText={touched.o_Address3 && errors.o_Address3}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\n                    >\n                      <Grid\n                        container\n                        // spacing={3}\n                        className={classes.row}\n                        justify=\"space-evenly\"\n                      >\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"o_CountryId\"\n                            select\n                            label=\"Country / દેશ\"\n                            value={values.o_CountryId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={\n                              !!touched.o_CountryId && !!errors.o_CountryId\n                            }\n                            helperText={\n                              touched.o_CountryId && errors.o_CountryId\n                            }\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.countryList &&\n                              dropDownListData.countryList.length > 0 &&\n                              dropDownListData.countryList.map(option => (\n                                <option key={option.Id} value={option.Id}>\n                                  {option.Name}\n                                </option>\n                              ))}\n                          </TextField>\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"o_StateId\"\n                            select\n                            label=\"STATE / રાજ્ય\"\n                            value={values.o_StateId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.o_StateId && !!errors.o_StateId}\n                            helperText={touched.o_StateId && errors.o_StateId}\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.stateList &&\n                              dropDownListData.stateList.length > 0 &&\n                              dropDownListData.stateList.map(\n                                option =>\n                                  values.o_CountryId == option.CountryId && (\n                                    <option key={option.Id} value={option.Id}>\n                                      {option.Name}\n                                    </option>\n                                  )\n                              )}\n                          </TextField>\n                        </Grid>\n                        <Grid\n                          item\n                          sm={3}\n                          xs={11}\n                          className={classes.paddingRight_16}\n                        >\n                          <TextField\n                            fullWidth\n                            id=\"o_CityId\"\n                            select\n                            label=\"CITY / શહેર\"\n                            value={values.o_CityId}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.o_CityId && !!errors.o_CityId}\n                            helperText={touched.o_CityId && errors.o_CityId}\n                            SelectProps={{\n                              native: true\n                            }}\n                          >\n                            <option key={0} disabled selected />\n                            {dropDownListData.cityList &&\n                              dropDownListData.cityList.length > 0 &&\n                              dropDownListData.cityList.map(\n                                option =>\n                                  values.o_StateId == option.StateId && (\n                                    <option key={option.Id} value={option.Id}>\n                                      {option.Name}\n                                    </option>\n                                  )\n                              )}\n                          </TextField>\n                        </Grid>\n                        <Grid item sm={3} xs={11}>\n                          <TextField\n                            id=\"o_ZipCode\"\n                            label=\"ZIPCODE/PINCODE / પિન કોડ\"\n                            fullWidth\n                            value={values.o_ZipCode}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            error={!!touched.o_ZipCode && !!errors.o_ZipCode}\n                            helperText={touched.o_ZipCode && errors.o_ZipCode}\n                          />\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid\n                  item\n                  xs={12}\n                  style={{\n                    paddingTop: \"8px\",\n                    paddingBottom: \"8px\"\n                    // paddingLeft: theme.spacing(4)\n                  }}\n                >\n                  <Grid\n                    container\n                    alignItems=\"center\"\n                    style={{ paddingLeft: theme.spacing(3) }}\n                  >\n                    {dropDownListData.eventList &&\n                      dropDownListData.eventList.length > 0 &&\n                      dropDownListData.eventList && (\n                        <Grid item style={{ paddingLeft: \"16px\" }}>\n                          <FormControlLabel\n                            control={\n                              <Checkbox\n                                id=\"eventHead\"\n                                checked={values.eventHead}\n                                onChange={handleChange}\n                                color=\"primary\"\n                              />\n                            }\n                            label={dropDownListData.eventList[0].Name}\n                          />\n                        </Grid>\n                      )}\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item xs={12} style={{ marginTop: theme.spacing(2) }}>\n                <Grid container justify=\"flex-start\" alignItems=\"center\">\n                  {dataObj.memberList.map((item, index) => (\n                    <Grid item xs={12} key={index}>\n                      <MemberForm\n                        dataObj={item}\n                        formIndex={index}\n                        parentIndex={formIndex}\n                        dropDownListData={dropDownListData}\n                        addUpdateMemberDataToMemberList={\n                          addUpdateMemberDataToDaughterMemberList\n                        }\n                        deleteMemberDataToMemberList={\n                          deleteMemberDataToDaughterMemberList\n                        }\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n\n              <Grid item xs={12} style={{ marginTop: theme.spacing(2) }}>\n                <Grid container justify=\"center\" alignItems=\"center\">\n                  <Grid item style={{ padding: \"8px\" }}>\n                    <Button\n                      type=\"submit\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                      disabled={isSubmitting}\n                      // onClick={() => handleSubmit()}\n                    >\n                      {formIndex > 0 ? \"UpdateDaughter\" : \"Add More Daughter\"}\n                    </Button>\n                  </Grid>\n                  {formIndex > 0 && (\n                    <Grid item style={{ padding: \"8px\" }}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => deleteDaughterMemberList(formIndex)}\n                      >\n                        Remove Daughter\n                      </Button>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n}\n\nconst EnhancedForm = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    familyId: props.dataObj.basicDetail.familyId,\n    firstName: props.dataObj.basicDetail.firstName,\n    middleName: props.dataObj.basicDetail.middleName,\n    lastName: props.dataObj.basicDetail.lastName,\n    email: props.dataObj.basicDetail.email,\n    mobile: props.dataObj.basicDetail.mobile,\n    residencePhone: props.dataObj.basicDetail.residencePhone,\n    officePhone: props.dataObj.basicDetail.officePhone,\n    nativePlaceId: props.dataObj.basicDetail.nativePlaceId,\n    occupationId: props.dataObj.basicDetail.occupationId,\n    dob: props.dataObj.basicDetail.dob\n      ? new Date(props.dataObj.basicDetail.dob)\n      : null,\n    marriageDate: props.dataObj.basicDetail.dob\n      ? new Date(props.dataObj.basicDetail.dob)\n      : null,\n    motherName: props.dataObj.basicDetail.motherName,\n    motherNativePlaceId: props.dataObj.basicDetail.motherNativePlaceId,\n    eventHead: props.dataObj.basicDetail.eventHead,\n    aadhaarNo: props.dataObj.basicDetail.aadhaarNo,\n    otherOccupation: props.dataObj.basicDetail.otherOccupation,\n    r_Address1: props.dataObj.residenceDetail.r_Address1,\n    r_Address2: props.dataObj.residenceDetail.r_Address2,\n    r_Address3: props.dataObj.residenceDetail.r_Address3,\n    r_CountryId: props.dataObj.residenceDetail.r_CountryId,\n    r_CityId: props.dataObj.residenceDetail.r_CityId,\n    r_StateId: props.dataObj.residenceDetail.r_StateId,\n    r_ZipCode: props.dataObj.residenceDetail.r_ZipCode,\n    o_Address1: props.dataObj.officeDetail.o_Address1,\n    o_Address2: props.dataObj.officeDetail.o_Address2,\n    o_Address3: props.dataObj.officeDetail.o_Address3,\n    o_CountryId: props.dataObj.officeDetail.o_CountryId,\n    o_CityId: props.dataObj.officeDetail.o_CityId,\n    o_StateId: props.dataObj.officeDetail.o_StateId,\n    o_ZipCode: props.dataObj.officeDetail.o_ZipCode,\n    bloodGroup: props.dataObj.basicDetail.bloodGroup,\n    maritalStatus: props.dataObj.basicDetail.maritalStatus,\n    zodiac: props.dataObj.basicDetail.zodiac\n  }),\n\n  validationSchema: props => {\n    console.log(props);\n    console.log(\"kp\");\n    return yup.object().shape({\n      firstName: yup\n        .string()\n        .required(\"First Name is required\")\n        .max(50, \"First Name cannot exceed then 50 character\"),\n      middleName: yup\n        .string()\n        .max(50, \"Middle Name cannot exceed then 50 character\"),\n      lastName: yup\n        .string()\n        .required(\"Last Name is required\")\n        .max(50, \"Last Name cannot exceed then 50 character\"),\n      email: yup\n        .string()\n        .required(\"Email Name is required\")\n        .email(\"please enter valid email\"),\n      mobile: yup\n        .string()\n        .required(\"Mobile No is required\")\n        .matches(PhoneRegExp, \"Mobile Number must be 10 digits long\"),\n      residencePhone: yup\n        .string()\n        .matches(PhoneRegExp, \"Phone Number must be 10 digits long\"),\n      officePhone: yup\n        .string()\n        .matches(PhoneRegExp, \"Phone Number must be 10 digits long\"),\n      nativePlaceId: yup.string().required(\"Please select Native Place\"),\n      occupationId: yup.string().required(\"Please select Occupation\"),\n      dob: yup.date().required(\"Date of Birth is required\"),\n      marriageDate: yup.date().required(\"Marriage Date is required\"),\n      motherName: yup\n        .string()\n        .required(\"Mother Name is required\")\n        .max(50, \"Mother Name cannot exceed then 50 character\"),\n      motherNativePlaceId: yup\n        .string()\n        .required(\"Please select Mother Native Place\"),\n      r_Address1: yup.string().required(\"Address1 is required\"),\n      r_Address2: yup.string(),\n      r_Address3: yup.string(),\n      r_ZipCode: yup\n        .string()\n        .required(\"Zip Code is required\")\n        .matches(ZipCodeRegExp, \"Zip Code must be 10 digits long\"),\n      r_CountryId: yup.string().required(\"Country is required\"),\n      r_StateId: yup.string().required(\"State is required\"),\n      r_CityId: yup.string().required(\"City is required\"),\n      o_Address1: yup.string().required(\"Address1 is required\"),\n      o_Address2: yup.string(),\n      o_Address3: yup.string(),\n      o_ZipCode: yup\n        .string()\n        .required(\"Zip Code is required\")\n        .matches(ZipCodeRegExp, \"Zip Code must be 10 digits long\"),\n      o_CountryId: yup.string().required(\"Country is required\"),\n      o_StateId: yup.string().required(\"State is required\"),\n      o_CityId: yup.string().required(\"City is required\"),\n      aadhaarNo: yup\n        .string()\n        .matches(AdhharRegExp, \"Aadhar no must be 12 digits long\"),\n      otherOccupation: yup.string(),\n      bloodGroup: yup.string().required(\"Blood Group is required\"),\n      maritalStatus: yup.string().required(\"Marital Status is required\"),\n      zodiac: yup.string().required(\"Zodiac is required\")\n    });\n  },\n  handleSubmit: (values, props) => {\n    console.log(values, props);\n    var valuesTosend = values;\n\n    props.props.addUpdateDaughterMemberList(props.props.formIndex, values);\n    props.setSubmitting(false);\n    if (props.props.formIndex === 0) props.resetForm();\n    //dispatch(addProduct(values));\n  },\n  displayName: \"BasicForm\"\n})(DaughterForm);\n\nconst getFormattedDate = dateToFomat => {\n  var dd = dateToFomat.getDate();\n  var mm = dateToFomat.getMonth() + 1;\n  var yyyy = dateToFomat.getFullYear();\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n  return yyyy + \"/\" + mm + \"/\" + dd;\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    basicDetail: state.family.basicDetail,\n    residenceDetail: state.family.residenceDetail,\n    officeDetail: state.family.officeDetail,\n    dropDownListData: state.dropDownList.dropDownListData\n      ? state.dropDownList.dropDownListData\n      : {}\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      getAllDropDownListData,\n      addUpdateMemberDataToDaughterMemberList,\n      deleteMemberDataToDaughterMemberList,\n      addUpdateDaughterMemberList,\n      deleteDaughterMemberList,\n      saveFamilyDataToStore\n    },\n    dispatch\n  );\n};\n\nexport default withStyles(useStyles, { withTheme: true })(\n  connect(mapStateToProps, mapDispatchToProps)(EnhancedForm)\n);\n// export default withStyles(useStyles, { withTheme: true })(FamilyForm);\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles, Button } from \"@material-ui/core\";\nimport DaughterForm from \"./daughterForm\";\n// import {\n//   addUpdateMemberDataToMemberList,\n//   deleteMemberDataToMemberList\n// } from \"../action/memberAction\";\n\nconst styles = theme => {\n};\n\nclass Daughters extends Component {\n  render() {\n    const { daughterDetail, dropDownListData, tabHandleChange } = this.props;\n    console.log(\"************************\", this.props);\n    return (\n      <Grid container>\n        <Grid item xs={12}>\n          <Grid container justify=\"flex-start\" alignItems=\"center\">\n            {daughterDetail.map((item, index) => (\n              <Grid item xs={12} key={index}>\n                <DaughterForm\n                  dataObj={item}\n                  formIndex={index}\n                  dropDownListData={dropDownListData}\n                  // addUpdateMemberDataToMemberList={\n                  //   addUpdateMemberDataToMemberList\n                  // }\n                  // deleteMemberDataToMemberList={deleteMemberDataToMemberList}\n                />\n              </Grid>\n            ))}\n            <Grid item xs={12} style={{ paddingTop: \"32px\" }}>\n              <Grid container justify=\"center\">\n                <Grid item style={{ paddingRight: \"16px\" }}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => tabHandleChange(null, 1)}\n                  >\n                    Go Back\n                  </Button>\n                </Grid>\n                <Grid item>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={daughterDetail.length == 1}\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    daughterDetail: state.daughter.daughterlist,\n    dropDownListData: state.dropDownList.dropDownListData\n      ? state.dropDownList.dropDownListData\n      : {}\n  };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return bindActionCreators(\n//     { addUpdateMemberDataToMemberList, deleteMemberDataToMemberList },\n//     dispatch\n//   );\n// };\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps)(Daughters)\n);\n","import React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FamilyForm from \"./forms/familyForm\";\nimport Members from \"./forms/members\";\nimport Daughters from \"./forms/daughters\";\nimport logo from \"./images/final_gujarati_transparent.png\";\n\nconst tabsArray = [\n  { label: \"Head\", value: \"family\" },\n  { label: \"Members\", value: \"members\" },\n  { label: \"Daughter Married Outside Navgam Samaj\", value: \"daughters\" }\n];\n\nconst useStyles = theme => ({\n  tabContainer: {\n    width: \"100%\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  paperTabsContainer: {\n    margin: \"4px\",\n    paddingLeft: \"16px\",\n    paddingRight: \"16px\",\n    paddingBottom: \"8px\"\n  },\n  header:  {\n    backgroundColor: \"#ffffff\",\n    paddingTop: \"12px\",\n    paddingBottom: \"12px\"\n  }\n\n  // paperTabContentContainer: {\n  //   paddingTop: '8px',\n  //   paddingBottom: '8px'\n  // }\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTab: \"family\"\n    };\n  }\n\n  tabHandleChange = (event, index) => {\n    console.log(event,index);\n    if (event) this.setState({ selectedTab: index });\n    else this.setState({ selectedTab: tabsArray[index].value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <AppBar position=\"sticky\" className={classes.header} >\n          <Toolbar>\n            {/* <IconButton edge=\"start\" \n              className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton> */}\n            <Grid container>\n              <Grid className=\"logo\">\n                <a href=\"#\">\n                  <img src={logo} ></img>\n                </a>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\" className={classes.title}>\n                 SRI NAVGAM JAIN VISA PORWAD SAMAJ\n                </Typography>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        {/* <AppBar position=\"static\" color=\"default\"> */}\n        <Paper className={classes.paperTabsContainer}>\n          <Tabs\n            indicatorColor=\"primary\"\n            value={this.state.selectedTab}\n            onChange={(event, value) => this.tabHandleChange(event, value)}\n          >\n            {tabsArray.map((item, index) => (\n              <Tab key={index} label={item.label} value={item.value} />\n            ))}\n          </Tabs>\n        </Paper>\n        {/* </AppBar> */}\n        <Grid\n          container\n          justify=\"center\"\n          style={{ flexGrow: 1, paddingTop: \"16px\" }}\n        >\n          <Grid item xs={11}>\n            <Paper\n              style={{\n                paddingTop: \"8px\",\n                // paddingLeft: \"24px\",\n                // paddingRight: \"24px\",\n                paddingBottom: \"8px\",\n                overflowY: \"auto\",\n                height: `calc(100vh - 64px - 48px - 16px - 16px - 8px)`\n              }}\n            >\n              {this.state.selectedTab === \"family\" && (\n                <FamilyForm tabHandleChange={this.tabHandleChange} />\n              )}\n              {this.state.selectedTab === \"members\" && (\n                <Members tabHandleChange={this.tabHandleChange} />\n              )}\n              {this.state.selectedTab === \"daughters\" && (\n                <Daughters tabHandleChange={this.tabHandleChange} />\n              )}\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Home);\n","import React, { Component } from 'react';\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Main from './main';\nimport Home from './home';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Switch>\n            <Route exact path=\"/\" render={(props) => (\n              <Home {...props} />\n            )}></Route>\n          </Switch>\n        </div>\n      </div >\n    )\n  }\n}\n\nexport default (App);\n","export const INITIAL_STATE = {\n  modelA: {\n    model_A: false,\n    checkBox_status: false,\n    allCountryList: undefined\n    // selectedContact: undefined,\n    // searchFieldValue: ''\n  },\n  modelB: {\n    model_B: false,\n    checkBox_status: false,\n    usCountryList: undefined\n    // selectedContact: undefined,\n    // searchFieldValue: ''\n  },\n  modelC: {\n    model_C: false,\n    item: null\n  },\n  dropDownListData: {\n    nativePlaceList: undefined,\n    occupationList: undefined,\n    stateList: undefined,\n    cityList: undefined,\n    countryList: undefined,\n    relationList: undefined,\n    bloodGroupList: undefined,\n    eventList: undefined,\n    maritalStatusList: undefined,\n    zodiacList: undefined\n  },\n  familyForm: {\n    basicDetail: {\n      familyId: 0,\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      email: \"\",\n      mobile: \"\",\n      residencePhone: \"\",\n      officePhone: \"\",\n      nativePlaceId: \"\",\n      occupationId: \"\",\n      dob: \"\",\n      marriageDate: \"\",\n      motherName: \"\",\n      motherNativePlaceId: \"\",\n      eventHead: false,\n      aadhaarNo: \"\",\n      otherOccupation: \"\",\n      bloodGroup: \"\",\n      maritalStatus: \"\",\n      zodiac: \"\"\n    },\n    residenceDetail: {\n      r_Address1: \"\",\n      r_Address2: \"\",\n      r_Address3: \"\",\n      r_CountryId: \"\",\n      r_CityId: \"\",\n      r_StateId: \"\",\n      r_ZipCode: \"\"\n    },\n    officeDetail: {\n      o_Address1: \"\",\n      o_Address2: \"\",\n      o_Address3: \"\",\n      o_CountryId: \"\",\n      o_CityId: \"\",\n      o_StateId: \"\",\n      o_ZipCode: \"\"\n    }\n  },\n  memberForm: {\n    memberDetail: {\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      relation: \"\",\n      bloodGroup: \"\",\n      dateOfBirth: \"\",\n      studies: \"\",\n      mobileNo: \"\",\n      gender: \"male\",\n      eventMember: false,\n      anniversaryDate: \"\",\n      maritalStatus: \"\",\n      aadhaarNo: \"\",\n      zodiac :\"\"\n    },\n    memberList: [\n      {\n        firstName: \"\",\n        middleName: \"\",\n        lastName: \"\",\n        relation: \"\",\n        bloodGroup: \"\",\n        dateOfBirth: \"\",\n        studies: \"\",\n        mobileNo: \"\",\n        gender: \"male\",\n        eventMember: false,\n        anniversaryDate: \"\",\n        maritalStatus: \"\",\n        aadhaarNo: \"\",\n        zodiac :\"\"\n      }\n    ]\n  },\n  daughterForm: {\n    daughterlist: [\n      {\n        basicDetail: {\n          familyId: 0,\n          firstName: \"\",\n          middleName: \"\",\n          lastName: \"\",\n          email: \"\",\n          mobile: \"\",\n          residencePhone: \"\",\n          officePhone: \"\",\n          nativePlaceId: \"\",\n          occupationId: \"\",\n          dob: \"\",\n          marriageDate: \"\",\n          motherName: \"\",\n          motherNativePlaceId: \"\",\n          eventHead: false,\n          aadhaarNo: \"\",\n          otherOccupation: \"\",\n          bloodGroup: \"\",\n          maritalStatus: \"\",\n          zodiac: \"\"\n        },\n        residenceDetail: {\n          r_Address1: \"\",\n          r_Address2: \"\",\n          r_Address3: \"\",\n          r_CountryId: \"\",\n          r_CityId: \"\",\n          r_StateId: \"\",\n          r_ZipCode: \"\"\n        },\n        officeDetail: {\n          o_Address1: \"\",\n          o_Address2: \"\",\n          o_Address3: \"\",\n          o_CountryId: \"\",\n          o_CityId: \"\",\n          o_StateId: \"\",\n          o_ZipCode: \"\"\n        },\n        memberList: [\n          {\n            firstName: \"\",\n            middleName: \"\",\n            lastName: \"\",\n            relation: \"\",\n            bloodGroup: \"\",\n            dateOfBirth: \"\",\n            studies: \"\",\n            mobileNo: \"\",\n            gender: \"male\",\n            eventMember: false,\n            maritalStatus: \"\",\n            anniversaryDate: \"\",\n            aadhaarNo: \"\"\n          }\n        ]\n      }\n    ]\n  }\n};\n","import { combineReducers } from \"redux\";\nimport modelReducer from \"./modelReducer\";\nimport { routerReducer } from \"react-router-redux\";\nimport familyReducer from \"./familyReducer\";\nimport memberReducer from \"./memberReducer\";\nimport dropDownListReducer from \"./dropDownListReducer\";\nimport daughterReducer from \"./daughterReducer\";\n// import { INITIAL_STATE } from './initialState';\n\nconst allReducers = combineReducers({\n  model: modelReducer,\n  router: routerReducer,\n  family: familyReducer,\n  member: memberReducer,\n  dropDownList: dropDownListReducer,\n  daughter : daughterReducer\n});\n\nexport default (state, action) => {\n  // if (action.type === BUSINESS_CHANGE_FROM_TOP_DROPDOWN) {\n  //     state = {\n  //         ...state,\n  //         contactList: INITIAL_STATE.contactList\n  //     };\n  // }\n  return allReducers(state, action);\n};\n","import { MODEL_A_TOGGLE, MODEL_A_CHECKBOX_STATUS_TOGGLE, MODEL_A_ALL_COUNTRY_DATA, MODEL_B_TOGGLE, MODEL_B_CHECKBOX_STATUS_TOGGLE, MODEL_B_US_COUNTRY_DATA, MODEL_C_TOGGLE } from '../action/actionTypes';\nimport { INITIAL_STATE } from '../initialState';\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case MODEL_A_TOGGLE: {\n            return {\n                ...state,\n                modelA: {\n                    model_A: action.payload.status,\n                    checkBox_status: state.modelA.checkBox_status,\n                    allCountryList: state.modelA.allCountryList,\n                }\n            };\n        }\n        case MODEL_A_CHECKBOX_STATUS_TOGGLE: {\n            return {\n                ...state,\n                modelA: {\n                    model_A: state.modelA.model_A,\n                    allCountryList: state.modelA.allCountryList,\n                    checkBox_status: action.payload.status,\n                }\n            };\n        }\n\n        case MODEL_A_ALL_COUNTRY_DATA: {\n            return {\n                ...state,\n                modelA: {\n                    model_A: state.modelA.model_A,\n                    checkBox_status: state.modelA.checkBox_status,\n                    allCountryList: action.payload.contactList,\n                }\n            };\n        }\n\n        case MODEL_B_TOGGLE: {\n            return {\n                ...state,\n                modelB: {\n                    model_B: action.payload.status,\n                    checkBox_status: state.modelB.checkBox_status,\n                    usCountryList: state.modelB.usCountryList,\n                }\n            };\n        }\n\n        case MODEL_B_CHECKBOX_STATUS_TOGGLE: {\n            return {\n                ...state,\n                modelB: {\n                    model_B: state.modelB.model_B,\n                    checkBox_status: action.payload.status,\n                    usCountryList: state.modelB.usCountryList,\n                }\n            };\n        }\n\n        case MODEL_B_US_COUNTRY_DATA: {\n            return {\n                ...state,\n                modelB: {\n                    model_B: state.modelB.model_B,\n                    usCountryList: action.payload.contactList,\n                    checkBox_status: state.modelB.checkBox_status,\n                }\n            };\n        }\n\n        case MODEL_C_TOGGLE: {\n            return {\n                ...state,\n                modelC: {\n                    model_C: action.payload.status,\n                    item: action.payload.item\n                }\n            };\n        }\n\n        default:\n            return state;\n    }\n\n};\n","import { SAVE_FAMILY_DATA_TO_STORE,UPDATE_FAMILYID_TO_STORE } from \"../action/actionTypes\";\nimport { INITIAL_STATE } from \"../initialState\";\n\nexport default (state = INITIAL_STATE.familyForm, action) => {\n  // console.log(\"inside\", state, action.payload);\n   \n  switch (action.type) {\n    case SAVE_FAMILY_DATA_TO_STORE: {\n      return {\n        ...state,\n        basicDetail: {\n          familyId: action.payload.data.familyId,\n          firstName: action.payload.data.firstName,\n          middleName: action.payload.data.middleName,\n          lastName: action.payload.data.lastName,\n          email: action.payload.data.email,\n          mobile: action.payload.data.mobile,\n          residencePhone: action.payload.data.residencePhone,\n          officePhone: action.payload.data.officePhone,\n          nativePlaceId: action.payload.data.nativePlaceId,\n          occupationId: action.payload.data.occupationId,\n          dob: action.payload.data.dob,\n          marriageDate: action.payload.data.marriageDate,\n          motherName: action.payload.data.motherName,\n          motherNativePlaceId: action.payload.data.motherNativePlaceId,\n          eventHead: action.payload.data.eventHead,\n          aadhaarNo: action.payload.data.aadhaarNo,\n          otherOccupation: action.payload.data.otherOccupation,\n          bloodGroup: action.payload.data.bloodGroup,\n          maritalStatus: action.payload.data.maritalStatus,\n          zodiac: action.payload.data.zodiac,\n        },\n        residenceDetail: {\n          r_Address1: action.payload.data.r_Address1,\n          r_Address2: action.payload.data.r_Address2,\n          r_Address3: action.payload.data.r_Address3,\n          r_CountryId: action.payload.data.r_CountryId,\n          r_CityId: action.payload.data.r_CityId,\n          r_StateId: action.payload.data.r_StateId,\n          r_ZipCode: action.payload.data.r_ZipCode\n        },\n        officeDetail: {\n          o_Address1: action.payload.data.o_Address1,\n          o_Address2: action.payload.data.o_Address2,\n          o_Address3: action.payload.data.o_Address3,\n          o_CountryId: action.payload.data.o_CountryId,\n          o_CityId: action.payload.data.o_CityId,\n          o_StateId: action.payload.data.o_StateId,\n          o_ZipCode: action.payload.data.o_ZipCode\n        }\n      };\n    }\n    case UPDATE_FAMILYID_TO_STORE: {\n      return {\n        ...state,\n        basicDetail: action.payload.data.basicDetail,\n        residenceDetail: action.payload.data.residenceDetail,\n        officeDetail: action.payload.data.officeDetail,\n      }\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  SAVE_MEMBER_DATA_TO_STORE,\n  ADD_MEMBER_DATA_TO_MEMBER_LIST,\n  UPDATE_MEMBER_DATA_TO_MEMBER_LIST,\n  DELETE_MEMBER_DATA_FROM_MEMBER_LIST\n  } from \"../action/actionTypes\";\n  import { INITIAL_STATE } from \"../initialState\";\n  \n  export default (state = INITIAL_STATE.memberForm, action) => {\n  console.log(\"inside\", state, action.payload);\n  switch (action.type) {\n  case ADD_MEMBER_DATA_TO_MEMBER_LIST: {\n  return {\n  ...state,\n  memberList: [...state.memberList, ...action.payload.data]\n  };\n  }\n  \n  case UPDATE_MEMBER_DATA_TO_MEMBER_LIST: {\n  return {\n  ...state,\n  memberList: action.payload.memberList\n  };\n  }\n  \n  case DELETE_MEMBER_DATA_FROM_MEMBER_LIST: {\n  return {\n  ...state,\n  memberList: action.payload.memberList\n  };\n  }\n  \n  // case SAVE_MEMBER_DATA_TO_STORE: {\n  // return {\n  // ...state,\n  // memberDetail: {\n  // firstName: action.payload.data.firstName,\n  // middleName: action.payload.memberDetail.middleName,\n  // lastName: action.payload.data.lastName,\n  // relation: action.payload.data.relation,\n  // bloodGroup: action.payload.data.bloodGroup,\n  // dateOfBirth: action.payload.data.dateOfBirth,\n  // studies: action.payload.data.studies,\n  // mobileNo: action.payload.data.mobileNo,\n  // gender: action.payload.data.gender,\n  // eventMember: action.payload.data.eventMember,\n  // anniversary: action.payload.data.anniversary,\n  // maritalStatus: action.payload.data.maritalStatus\n  // }\n  // };\n  // }\n  \n  default:\n  return state;\n  }\n  };\n  ","import {\n  SAVE_DROPDOWN_LIST_DATA_TO_STORE\n} from \"../action/actionTypes\";\nimport { INITIAL_STATE } from \"../initialState\";\nexport default (state = INITIAL_STATE.dropDownListData, action) => {\n  console.log(\"inside\", state, action.payload);\n  switch (action.type) {\n    case SAVE_DROPDOWN_LIST_DATA_TO_STORE: {\n      // console.log(action);\n      return {\n        ...state,\n        dropDownListData: {\n          nativePlaceList: action.payload.data.nativePlaceList,\n          occupationList: action.payload.data.occupationList,\n          stateList: action.payload.data.stateList,\n          cityList: action.payload.data.cityList,\n          countryList: action.payload.data.countryList,\n          relationList: action.payload.data.relationList,\n          bloodGroupList: action.payload.data.bloodGroupList,\n          eventList: action.payload.data.eventList,\n          maritalStatusList: action.payload.data.maritalStatusList,\n          zodiacList: action.payload.data.zodiacList\n        }\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST,\n  ADD_DAUGHTER_MEMBER_LIST,\n  DELETE_DAUGHTER_MEMBER_LIST,\n  DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST\n} from \"../action/actionTypes\";\nimport { INITIAL_STATE } from \"../initialState\";\n\nexport default (state = INITIAL_STATE.daughterForm, action) => {\n  console.log(\"inside reducer\", state, action);\n  switch (action.type) {\n    case ADD_DAUGHTER_MEMBER_LIST: {\n      return {\n        ...state,\n        daughterlist: action.payload.data\n      };\n    }\n\n    case DELETE_DAUGHTER_MEMBER_LIST: {\n      return {\n        ...state,\n        daughterlist: action.payload.data\n      };\n    }\n\n    case ADD_MEMBER_DATA_TO_DAUGHTER_MEMBER_LIST: {\n      return {\n        ...state,\n        daughterlist: action.payload.data\n      };\n    }\n\n    //   case UPDATE_MEMBER_DATA_TO_MEMBER_LIST: {\n    //     return {\n    //       ...state,\n    //       memberList: action.payload.memberList\n    //     };\n    //   }\n\n    case DELETE_MEMBER_DATA_FROM_DAUGHTER_MEMBER_LIST: {\n      return {\n        ...state,\n        daughterlist: action.payload.data\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport rootReducer from './reducer/index';\nimport { INITIAL_STATE } from './initialState';\n\nconst history = createBrowserHistory();\nconst composeEnhancer =\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n\nconst enhancer = composeEnhancer(\n    applyMiddleware(thunk, routerMiddleware(history))\n);\n\nexport default createStore(connectRouter(history)(rootReducer), INITIAL_STATE, enhancer);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './configureStore'\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root'));\nserviceWorker.unregister();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}